var camxes = (function() {
  "use strict";

  /*
   * Generated by PEG.js 0.8.0.
   *
   * http://pegjs.org/
   */

  function peg$subclass(child, parent) {
    function ctor() { this.constructor = child; }
    ctor.prototype = parent.prototype;
    child.prototype = new ctor();
  }

  function peg$SyntaxError(message, expected, found, location) {
    this.message  = message;
    this.expected = expected;
    this.found    = found;
    this.location = location;

    this.name     = "SyntaxError";
  }

  peg$subclass(peg$SyntaxError, Error);

  function peg$parse(input) {
    var options = arguments.length > 1 ? arguments[1] : {},
        parser  = this,

        peg$FAILED = {},

        peg$startRuleFunctions = { text: peg$parsetext, BRIVLA_clause: peg$parseBRIVLA_clause, CMAVO: peg$parseCMAVO, BRIVLA: peg$parseBRIVLA, gismu: peg$parsegismu, stressed_syllable: peg$parsestressed_syllable, consonantal_syllable: peg$parseconsonantal_syllable, unstressed_syllable: peg$parseunstressed_syllable, brivla_core: peg$parsebrivla_core, slinkuhi: peg$parseslinkuhi, rafsi_string: peg$parserafsi_string, CCV_rafsi: peg$parseCCV_rafsi, CVV_rafsi: peg$parseCVV_rafsi, CVC_rafsi: peg$parseCVC_rafsi, long_rafsi: peg$parselong_rafsi, zihevlas_syllable: peg$parsezihevlas_syllable },
        peg$startRuleFunction  = peg$parsetext,

        peg$c0 = function(expr) { return expr },
        peg$c1 = function(pre, post) { post.pre = pre; post.structure = (post.post ? [pre, _shell(post), post.post.indicators] : [pre, _shell(post)]).filter(_empty); return post },
        peg$c2 = function(pre, z, b) { return {zei_tail: z, bu_tail: b} },
        peg$c3 = function(pre, bu, tail, post) {
          var r = {selmaho: "BRIVLA", word: pre.word, subsumed: [pre], post: post};
          bu.forEach(function (bu) {
            if (bu.zei_tail) {
              r.subsumed = r.subsumed.concat(bu.zei_tail.subsumed);
              r.word += bu.zei_tail.string;
            }
            r.subsumed = r.subsumed.concat(bu.bu_tail.subsumed);
            r.word += bu.bu_tail.string;
          });
          r.subsumed = r.subsumed.concat(tail.subsumed);
          r.word = "[" + r.word + tail.string + "]";
          return r;
        },
        peg$c4 = function(pre, b, z) { return {bu_tail: b, zei_tail: z} },
        peg$c5 = function(pre, zei, tail, post) {
          var r = {selmaho: "BY", word: pre.word, subsumed: [pre], post: post };
          zei.forEach(function (zei) {
            if (zei.bu_tail) {
              r.subsumed = r.subsumed.concat(zei.bu_tail.subsumed);
              r.word += zei.bu_tail.string;
            }
            r.subsumed = r.subsumed.concat(zei.zei_tail.subsumed);
            r.word += zei.zei_tail.string;
          });
          r.subsumed = r.subsumed.concat(tail.subsumed);
          r.word = "[" + r.word + tail.string + "]";
          return r;
        },
        peg$c6 = function(expr) {
          var r = {string: "", subsumed: []};
          expr.forEach(function (pair) {
            r.string += " zei " + pair[1].word;
            r.subsumed.push(pair[0]);
            r.subsumed.push(pair[1]);
          });
          return r;
        },
        peg$c7 = function(expr) {
          return {
            subsumed: expr,
            string: expr.reduce(function(a, b) { return a + " " + b.word }, "")
          }
        },
        peg$c8 = function(word, si) {
          if (si) word.si = si;
          return word;
        },
        peg$c9 = { type: "any", description: "any character" },
        peg$c10 = function(expr) { ret = ""; for (i in expr) ret += (expr[i] === " ") ? "_" : expr[i]; return ret; },
        peg$c11 = function(si, indicators) {
          var r = {};
          if (si) r.si = si;
          if (indicators) r.indicators = indicators;
          return (r.si || r.indicators) && r;
        },
        peg$c12 = function(expr) {return {"erasable": expr}; },
        peg$c13 = function(pre, post) { return _word_post(pre, post) },
        peg$c14 = function(pre, word) { return _word_pre(word, pre) },
        peg$c15 = function(pre, post) { if (post) pre.si = post; return pre },
        peg$c16 = function(word) { return _word_pre(word, null) },
        peg$c17 = function(si) { return si },
        peg$c18 = function(pre, word, w) { return w },
        peg$c19 = function(pre, word, quoted, subsumed) {
          word.quoted = quoted || [];
          word.subsumed = subsumed;
          word.single_word = word.word;
          word.word = "[" + word.word + " " + quoted.map(_bracket).join(" ") + " " + subsumed.word + "]";
          return _word_pre(word, pre);
        },
        peg$c20 = function(pre, post) { return pre },
        peg$c21 = function(word) { return word },
        peg$c22 = function(pre, word, quoted) {
          return _word_pre(_quote(word, quoted), pre)
        },
        peg$c23 = function(pre, word, open, quoted, close) {
          word.subsumed = [open, close];
          word.quoted = quoted || [];
          word.quoted.word = _join(word.quoted);
          word.single_word = word.word;
          word.word = "[" + word.word + " " + open.word + " " + word.quoted.word + " " + close.word + "]";
          return _word_pre(word, pre)
        },
        peg$c24 = function(expr) { return _word("BRIVLA", expr) },
        peg$c25 = function(expr) { return _word("CMAVO", expr) },
        peg$c26 = function(expr) { return expr; },
        peg$c27 = function(w) { return _zoi_assign_delim(w); },
        peg$c28 = function(w) { return (! _zoi_check_quote(w)); },
        peg$c29 = function(expr) {return "";},
        peg$c30 = function(w) { return (_zoi_check_delim(w)); },
        peg$c31 = function() {return "."},
        peg$c32 = function(expr) { return "." + _join(expr) },
        peg$c33 = function(expr) { return _join(expr); },
        peg$c34 = function(expr) { return _join(expr);},
        peg$c35 = function(expr) {return _join(expr);},
        peg$c36 = function(expr) {return _join(expr).replace(/[aeiou]/, function (a) {return _stressed_vowels[a]});},
        peg$c37 = /^[AEIOU]/,
        peg$c38 = { type: "class", value: "[AEIOU]", description: "[AEIOU]" },
        peg$c39 = function(expr) {return expr;},
        peg$c40 = /^[aA]/,
        peg$c41 = { type: "class", value: "[aA]", description: "[aA]" },
        peg$c42 = function() {return "a";},
        peg$c43 = /^[eE]/,
        peg$c44 = { type: "class", value: "[eE]", description: "[eE]" },
        peg$c45 = function() {return "e";},
        peg$c46 = /^[iI]/,
        peg$c47 = { type: "class", value: "[iI]", description: "[iI]" },
        peg$c48 = function() {return "i";},
        peg$c49 = /^[oO]/,
        peg$c50 = { type: "class", value: "[oO]", description: "[oO]" },
        peg$c51 = function() {return "o";},
        peg$c52 = /^[uU]/,
        peg$c53 = { type: "class", value: "[uU]", description: "[uU]" },
        peg$c54 = function() {return "u";},
        peg$c55 = /^[yY]/,
        peg$c56 = { type: "class", value: "[yY]", description: "[yY]" },
        peg$c57 = function() {return "y";},
        peg$c58 = function() {return "É™";},
        peg$c59 = /^[wW]/,
        peg$c60 = { type: "class", value: "[wW]", description: "[wW]" },
        peg$c61 = function() {return "w";},
        peg$c62 = function(expr) {return _join(expr); },
        peg$c63 = /^[lL]/,
        peg$c64 = { type: "class", value: "[lL]", description: "[lL]" },
        peg$c65 = function() {return "l";},
        peg$c66 = /^[mM]/,
        peg$c67 = { type: "class", value: "[mM]", description: "[mM]" },
        peg$c68 = function() {return "m";},
        peg$c69 = /^[nN]/,
        peg$c70 = { type: "class", value: "[nN]", description: "[nN]" },
        peg$c71 = function() {return "n";},
        peg$c72 = /^[rR]/,
        peg$c73 = { type: "class", value: "[rR]", description: "[rR]" },
        peg$c74 = function() {return "r";},
        peg$c75 = /^[qQ]/,
        peg$c76 = { type: "class", value: "[qQ]", description: "[qQ]" },
        peg$c77 = function() {return "q";},
        peg$c78 = /^[bB]/,
        peg$c79 = { type: "class", value: "[bB]", description: "[bB]" },
        peg$c80 = function() {return "b";},
        peg$c81 = /^[dD]/,
        peg$c82 = { type: "class", value: "[dD]", description: "[dD]" },
        peg$c83 = function() {return "d";},
        peg$c84 = /^[gG]/,
        peg$c85 = { type: "class", value: "[gG]", description: "[gG]" },
        peg$c86 = function() {return "g";},
        peg$c87 = /^[vV]/,
        peg$c88 = { type: "class", value: "[vV]", description: "[vV]" },
        peg$c89 = function() {return "v";},
        peg$c90 = /^[jJ]/,
        peg$c91 = { type: "class", value: "[jJ]", description: "[jJ]" },
        peg$c92 = function() {return "j";},
        peg$c93 = /^[zZ]/,
        peg$c94 = { type: "class", value: "[zZ]", description: "[zZ]" },
        peg$c95 = function() {return "z";},
        peg$c96 = /^[sS]/,
        peg$c97 = { type: "class", value: "[sS]", description: "[sS]" },
        peg$c98 = function() {return "s";},
        peg$c99 = /^[cC]/,
        peg$c100 = { type: "class", value: "[cC]", description: "[cC]" },
        peg$c101 = function() {return "c";},
        peg$c102 = /^[xX]/,
        peg$c103 = { type: "class", value: "[xX]", description: "[xX]" },
        peg$c104 = function() {return "x";},
        peg$c105 = /^[kK]/,
        peg$c106 = { type: "class", value: "[kK]", description: "[kK]" },
        peg$c107 = function() {return "k";},
        peg$c108 = /^[fF]/,
        peg$c109 = { type: "class", value: "[fF]", description: "[fF]" },
        peg$c110 = function() {return "f";},
        peg$c111 = /^[pP]/,
        peg$c112 = { type: "class", value: "[pP]", description: "[pP]" },
        peg$c113 = function() {return "p";},
        peg$c114 = /^[tT]/,
        peg$c115 = { type: "class", value: "[tT]", description: "[tT]" },
        peg$c116 = function() {return "t";},
        peg$c117 = /^['hH]/,
        peg$c118 = { type: "class", value: "['hH]", description: "['hH]" },
        peg$c119 = function() {return "'";},
        peg$c120 = /^[0123456789]/,
        peg$c121 = { type: "class", value: "[0123456789]", description: "[0123456789]" },
        peg$c122 = /^[,]/,
        peg$c123 = { type: "class", value: "[,]", description: "[,]" },
        peg$c124 = function() {return "";},
        peg$c125 = /^[.\t\n\r?! ]/,
        peg$c126 = { type: "class", value: "[.\\t\\n\\r?!\\u0020]", description: "[.\\t\\n\\r?!\\u0020]" },
        peg$c127 = function(expr) {return "ybu";},
        peg$c128 = function(expr) {return _word("BAhE", expr);},
        peg$c129 = function(expr) {return _word("BU", expr);},
        peg$c130 = function(expr) {return _word("BY", expr);},
        peg$c131 = function(expr) {return _word("LEhU", expr);},
        peg$c132 = function(expr) {return _word("LOhU", expr);},
        peg$c133 = function(expr) {return _word("SA", expr);},
        peg$c134 = function(expr) {return _word("SI", expr);},
        peg$c135 = function(expr) {return _word("SU", expr);},
        peg$c136 = function(expr) {return _word("UI", expr);},
        peg$c137 = function(expr) {return _word("ZEI", expr);},
        peg$c138 = function(expr) {return _word("ZO", expr);},
        peg$c139 = function(expr) {return _word("ZOI", expr);},

        peg$currPos          = 0,
        peg$savedPos         = 0,
        peg$posDetailsCache  = [{ line: 1, column: 1, seenCR: false }],
        peg$maxFailPos       = 0,
        peg$maxFailExpected  = [],
        peg$silentFails      = 0,

        peg$resultsCache = {},

        peg$result;

    if ("startRule" in options) {
      if (!(options.startRule in peg$startRuleFunctions)) {
        throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
      }

      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
    }

    function text() {
      return input.substring(peg$savedPos, peg$currPos);
    }

    function location() {
      return peg$computeLocation(peg$savedPos, peg$currPos);
    }

    function expected(description) {
      throw peg$buildException(
        null,
        [{ type: "other", description: description }],
        input.substring(peg$savedPos, peg$currPos),
        peg$computeLocation(peg$savedPos, peg$currPos)
      );
    }

    function error(message) {
      throw peg$buildException(
        message,
        null,
        input.substring(peg$savedPos, peg$currPos),
        peg$computeLocation(peg$savedPos, peg$currPos)
      );
    }

    function peg$computePosDetails(pos) {
      var details = peg$posDetailsCache[pos],
          p, ch;

      if (details) {
        return details;
      } else {
        p = pos - 1;
        while (!peg$posDetailsCache[p]) {
          p--;
        }

        details = peg$posDetailsCache[p];
        details = {
          line:   details.line,
          column: details.column,
          seenCR: details.seenCR
        };

        while (p < pos) {
          ch = input.charAt(p);
          if (ch === "\n") {
            if (!details.seenCR) { details.line++; }
            details.column = 1;
            details.seenCR = false;
          } else if (ch === "\r" || ch === "\u2028" || ch === "\u2029") {
            details.line++;
            details.column = 1;
            details.seenCR = true;
          } else {
            details.column++;
            details.seenCR = false;
          }

          p++;
        }

        peg$posDetailsCache[pos] = details;
        return details;
      }
    }

    function peg$computeLocation(startPos, endPos) {
      var startPosDetails = peg$computePosDetails(startPos),
          endPosDetails   = peg$computePosDetails(endPos);

      return {
        start: {
          offset: startPos,
          line:   startPosDetails.line,
          column: startPosDetails.column
        },
        end: {
          offset: endPos,
          line:   endPosDetails.line,
          column: endPosDetails.column
        }
      };
    }

    function peg$fail(expected) {
      if (peg$currPos < peg$maxFailPos) { return; }

      if (peg$currPos > peg$maxFailPos) {
        peg$maxFailPos = peg$currPos;
        peg$maxFailExpected = [];
      }

      peg$maxFailExpected.push(expected);
    }

    function peg$buildException(message, expected, found, location) {
      function cleanupExpected(expected) {
        var i = 1;

        expected.sort(function(a, b) {
          if (a.description < b.description) {
            return -1;
          } else if (a.description > b.description) {
            return 1;
          } else {
            return 0;
          }
        });

        while (i < expected.length) {
          if (expected[i - 1] === expected[i]) {
            expected.splice(i, 1);
          } else {
            i++;
          }
        }
      }

      function buildMessage(expected, found) {
        function stringEscape(s) {
          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }

          return s
            .replace(/\\/g,   '\\\\')
            .replace(/"/g,    '\\"')
            .replace(/\x08/g, '\\b')
            .replace(/\t/g,   '\\t')
            .replace(/\n/g,   '\\n')
            .replace(/\f/g,   '\\f')
            .replace(/\r/g,   '\\r')
            .replace(/[\x00-\x07\x0B\x0E\x0F]/g, function(ch) { return '\\x0' + hex(ch); })
            .replace(/[\x10-\x1F\x80-\xFF]/g,    function(ch) { return '\\x'  + hex(ch); })
            .replace(/[\u0100-\u0FFF]/g,         function(ch) { return '\\u0' + hex(ch); })
            .replace(/[\u1000-\uFFFF]/g,         function(ch) { return '\\u'  + hex(ch); });
        }

        var expectedDescs = new Array(expected.length),
            expectedDesc, foundDesc, i;

        for (i = 0; i < expected.length; i++) {
          expectedDescs[i] = expected[i].description;
        }

        expectedDesc = expected.length > 1
          ? expectedDescs.slice(0, -1).join(", ")
              + " or "
              + expectedDescs[expected.length - 1]
          : expectedDescs[0];

        foundDesc = found ? "\"" + stringEscape(found) + "\"" : "end of input";

        return "Expected " + expectedDesc + " but " + foundDesc + " found.";
      }

      if (expected !== null) {
        cleanupExpected(expected);
      }

      return new peg$SyntaxError(
        message !== null ? message : buildMessage(expected, found),
        expected,
        found,
        location
      );
    }

    function peg$parsetext() {
      var s0, s1, s2, s3, s4;

      var key    = peg$currPos * 157 + 0,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parsepause();
      if (s1 === peg$FAILED) {
        s1 = null;
      }
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsesi_clause();
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsesi_clause();
        }
        if (s2 !== peg$FAILED) {
          s3 = [];
          s4 = peg$parseBRIVLA_clause();
          if (s4 === peg$FAILED) {
            s4 = peg$parseZO_clause();
            if (s4 === peg$FAILED) {
              s4 = peg$parseLOhU_clause();
              if (s4 === peg$FAILED) {
                s4 = peg$parseZOI_clause();
                if (s4 === peg$FAILED) {
                  s4 = peg$parseBY_clause();
                  if (s4 === peg$FAILED) {
                    s4 = peg$parseCMAVO_clause();
                  }
                }
              }
            }
          }
          while (s4 !== peg$FAILED) {
            s3.push(s4);
            s4 = peg$parseBRIVLA_clause();
            if (s4 === peg$FAILED) {
              s4 = peg$parseZO_clause();
              if (s4 === peg$FAILED) {
                s4 = peg$parseLOhU_clause();
                if (s4 === peg$FAILED) {
                  s4 = peg$parseZOI_clause();
                  if (s4 === peg$FAILED) {
                    s4 = peg$parseBY_clause();
                    if (s4 === peg$FAILED) {
                      s4 = peg$parseCMAVO_clause();
                    }
                  }
                }
              }
            }
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c0(s3);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseindicators() {
      var s0, s1, s2, s3;

      var key    = peg$currPos * 157 + 1,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parseUI_clause();
      if (s2 !== peg$FAILED) {
        while (s2 !== peg$FAILED) {
          s1.push(s2);
          s2 = peg$parseUI_clause();
        }
      } else {
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        peg$silentFails++;
        s3 = peg$parseBU_clause();
        peg$silentFails--;
        if (s3 === peg$FAILED) {
          s2 = void 0;
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c0(s1);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsezei_clause() {
      var s0, s1, s2;

      var key    = peg$currPos * 157 + 2,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parsepre_clause();
      if (s1 !== peg$FAILED) {
        s2 = peg$parsezei_clause_no_pre();
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c1(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsezei_clause_no_pre() {
      var s0, s1, s2, s3, s4, s5;

      var key    = peg$currPos * 157 + 3,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parsepre_zei_bu();
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$currPos;
        s4 = peg$parsezei_tail();
        if (s4 === peg$FAILED) {
          s4 = null;
        }
        if (s4 !== peg$FAILED) {
          s5 = peg$parsebu_tail();
          if (s5 !== peg$FAILED) {
            peg$savedPos = s3;
            s4 = peg$c2(s1, s4, s5);
            s3 = s4;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$currPos;
          s4 = peg$parsezei_tail();
          if (s4 === peg$FAILED) {
            s4 = null;
          }
          if (s4 !== peg$FAILED) {
            s5 = peg$parsebu_tail();
            if (s5 !== peg$FAILED) {
              peg$savedPos = s3;
              s4 = peg$c2(s1, s4, s5);
              s3 = s4;
            } else {
              peg$currPos = s3;
              s3 = peg$FAILED;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$parsezei_tail();
          if (s3 !== peg$FAILED) {
            s4 = peg$parsepost_clause();
            if (s4 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c3(s1, s2, s3, s4);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsebu_clause() {
      var s0, s1, s2;

      var key    = peg$currPos * 157 + 4,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parsepre_clause();
      if (s1 !== peg$FAILED) {
        s2 = peg$parsebu_clause_no_pre();
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c1(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsebu_clause_no_pre() {
      var s0, s1, s2, s3, s4, s5;

      var key    = peg$currPos * 157 + 5,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parsepre_zei_bu();
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$currPos;
        s4 = peg$parsebu_tail();
        if (s4 === peg$FAILED) {
          s4 = null;
        }
        if (s4 !== peg$FAILED) {
          s5 = peg$parsezei_tail();
          if (s5 !== peg$FAILED) {
            peg$savedPos = s3;
            s4 = peg$c4(s1, s4, s5);
            s3 = s4;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$currPos;
          s4 = peg$parsebu_tail();
          if (s4 === peg$FAILED) {
            s4 = null;
          }
          if (s4 !== peg$FAILED) {
            s5 = peg$parsezei_tail();
            if (s5 !== peg$FAILED) {
              peg$savedPos = s3;
              s4 = peg$c4(s1, s4, s5);
              s3 = s4;
            } else {
              peg$currPos = s3;
              s3 = peg$FAILED;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$parsebu_tail();
          if (s3 !== peg$FAILED) {
            s4 = peg$parsepost_clause();
            if (s4 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c5(s1, s2, s3, s4);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsezei_tail() {
      var s0, s1, s2, s3, s4;

      var key    = peg$currPos * 157 + 6,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$currPos;
      s3 = peg$parseZEI_clause();
      if (s3 !== peg$FAILED) {
        s4 = peg$parseany_word();
        if (s4 !== peg$FAILED) {
          s3 = [s3, s4];
          s2 = s3;
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
      } else {
        peg$currPos = s2;
        s2 = peg$FAILED;
      }
      if (s2 !== peg$FAILED) {
        while (s2 !== peg$FAILED) {
          s1.push(s2);
          s2 = peg$currPos;
          s3 = peg$parseZEI_clause();
          if (s3 !== peg$FAILED) {
            s4 = peg$parseany_word();
            if (s4 !== peg$FAILED) {
              s3 = [s3, s4];
              s2 = s3;
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        }
      } else {
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c6(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsebu_tail() {
      var s0, s1, s2;

      var key    = peg$currPos * 157 + 7,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parseBU_clause();
      if (s2 !== peg$FAILED) {
        while (s2 !== peg$FAILED) {
          s1.push(s2);
          s2 = peg$parseBU_clause();
        }
      } else {
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c7(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsepre_zei_bu() {
      var s0, s1, s2, s3, s4, s5, s6;

      var key    = peg$currPos * 157 + 8,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      peg$silentFails++;
      s2 = peg$parseBU_clause();
      peg$silentFails--;
      if (s2 === peg$FAILED) {
        s1 = void 0;
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        peg$silentFails++;
        s3 = peg$parseZEI_clause();
        peg$silentFails--;
        if (s3 === peg$FAILED) {
          s2 = void 0;
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parseSI_clause();
          peg$silentFails--;
          if (s4 === peg$FAILED) {
            s3 = void 0;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$currPos;
            peg$silentFails++;
            s5 = peg$parseSA_clause();
            peg$silentFails--;
            if (s5 === peg$FAILED) {
              s4 = void 0;
            } else {
              peg$currPos = s4;
              s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$parseany_word_SA_handling();
              if (s5 !== peg$FAILED) {
                s6 = peg$parsesi_clause();
                if (s6 === peg$FAILED) {
                  s6 = null;
                }
                if (s6 !== peg$FAILED) {
                  peg$savedPos = s0;
                  s1 = peg$c8(s5, s6);
                  s0 = s1;
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsedot_star() {
      var s0, s1, s2;

      var key    = peg$currPos * 157 + 9,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      if (input.length > peg$currPos) {
        s2 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s2 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c9); }
      }
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        if (input.length > peg$currPos) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c9); }
        }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c10(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsepost_clause() {
      var s0, s1, s2, s3, s4, s5;

      var key    = peg$currPos * 157 + 10,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parsespaces();
      if (s1 === peg$FAILED) {
        s1 = null;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parsesi_clause();
        if (s2 === peg$FAILED) {
          s2 = null;
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parseZEI_clause();
          peg$silentFails--;
          if (s4 === peg$FAILED) {
            s3 = void 0;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$currPos;
            peg$silentFails++;
            s5 = peg$parseBU_clause();
            peg$silentFails--;
            if (s5 === peg$FAILED) {
              s4 = void 0;
            } else {
              peg$currPos = s4;
              s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$parseindicators();
              if (s5 === peg$FAILED) {
                s5 = null;
              }
              if (s5 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c11(s2, s5);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseindicator_post_clause() {
      var s0, s1, s2, s3, s4, s5, s6;

      var key    = peg$currPos * 157 + 11,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      peg$silentFails++;
      s2 = peg$parseBU_clause();
      peg$silentFails--;
      if (s2 === peg$FAILED) {
        s1 = void 0;
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parsespaces();
        if (s2 === peg$FAILED) {
          s2 = null;
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$parsesi_clause();
          if (s3 === peg$FAILED) {
            s3 = null;
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$currPos;
            peg$silentFails++;
            s5 = peg$parseZEI_clause();
            peg$silentFails--;
            if (s5 === peg$FAILED) {
              s4 = void 0;
            } else {
              peg$currPos = s4;
              s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$currPos;
              peg$silentFails++;
              s6 = peg$parseBU_clause();
              peg$silentFails--;
              if (s6 === peg$FAILED) {
                s5 = void 0;
              } else {
                peg$currPos = s5;
                s5 = peg$FAILED;
              }
              if (s5 !== peg$FAILED) {
                s1 = [s1, s2, s3, s4, s5];
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsepre_clause() {
      var s0, s1;

      var key    = peg$currPos * 157 + 12,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = [];
      s1 = peg$parseBAhE_clause();
      while (s1 !== peg$FAILED) {
        s0.push(s1);
        s1 = peg$parseBAhE_clause();
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseany_word_SA_handling() {
      var s0;

      var key    = peg$currPos * 157 + 13,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$parseBRIVLA_pre();
      if (s0 === peg$FAILED) {
        s0 = peg$parseBAhE_pre();
        if (s0 === peg$FAILED) {
          s0 = peg$parseBU_pre();
          if (s0 === peg$FAILED) {
            s0 = peg$parseBY_pre();
            if (s0 === peg$FAILED) {
              s0 = peg$parseLOhU_pre();
              if (s0 === peg$FAILED) {
                s0 = peg$parseSA_pre();
                if (s0 === peg$FAILED) {
                  s0 = peg$parseZO_pre();
                  if (s0 === peg$FAILED) {
                    s0 = peg$parseZOI_pre();
                    if (s0 === peg$FAILED) {
                      s0 = peg$parseCMAVO_pre();
                    }
                  }
                }
              }
            }
          }
        }
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsesu_clause() {
      var s0, s1, s2;

      var key    = peg$currPos * 157 + 14,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parseerasable_clause();
      if (s2 === peg$FAILED) {
        s2 = peg$parsesu_word();
      }
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parseerasable_clause();
        if (s2 === peg$FAILED) {
          s2 = peg$parsesu_word();
        }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parseSU_clause();
        if (s2 !== peg$FAILED) {
          s1 = [s1, s2];
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsesi_clause() {
      var s0, s1, s2, s3, s4;

      var key    = peg$currPos * 157 + 15,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = [];
      s1 = peg$currPos;
      s2 = peg$parseerasable_clause();
      if (s2 === peg$FAILED) {
        s2 = peg$parsepre_zei_bu();
        if (s2 === peg$FAILED) {
          s2 = peg$parseSA_clause();
        }
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parsesi_clause();
        if (s3 === peg$FAILED) {
          s3 = null;
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parseSI_clause();
          if (s4 !== peg$FAILED) {
            s2 = [s2, s3, s4];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        while (s1 !== peg$FAILED) {
          s0.push(s1);
          s1 = peg$currPos;
          s2 = peg$parseerasable_clause();
          if (s2 === peg$FAILED) {
            s2 = peg$parsepre_zei_bu();
            if (s2 === peg$FAILED) {
              s2 = peg$parseSA_clause();
            }
          }
          if (s2 !== peg$FAILED) {
            s3 = peg$parsesi_clause();
            if (s3 === peg$FAILED) {
              s3 = null;
            }
            if (s3 !== peg$FAILED) {
              s4 = peg$parseSI_clause();
              if (s4 !== peg$FAILED) {
                s2 = [s2, s3, s4];
                s1 = s2;
              } else {
                peg$currPos = s1;
                s1 = peg$FAILED;
              }
            } else {
              peg$currPos = s1;
              s1 = peg$FAILED;
            }
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        }
      } else {
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseerasable_clause() {
      var s0, s1, s2, s3, s4, s5;

      var key    = peg$currPos * 157 + 16,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parsebu_clause_no_pre();
      if (s2 !== peg$FAILED) {
        s3 = peg$currPos;
        peg$silentFails++;
        s4 = peg$parseZEI_clause();
        peg$silentFails--;
        if (s4 === peg$FAILED) {
          s3 = void 0;
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$currPos;
          peg$silentFails++;
          s5 = peg$parseBU_clause();
          peg$silentFails--;
          if (s5 === peg$FAILED) {
            s4 = void 0;
          } else {
            peg$currPos = s4;
            s4 = peg$FAILED;
          }
          if (s4 !== peg$FAILED) {
            s2 = [s2, s3, s4];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 === peg$FAILED) {
        s1 = peg$currPos;
        s2 = peg$parsezei_clause_no_pre();
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parseZEI_clause();
          peg$silentFails--;
          if (s4 === peg$FAILED) {
            s3 = void 0;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$currPos;
            peg$silentFails++;
            s5 = peg$parseBU_clause();
            peg$silentFails--;
            if (s5 === peg$FAILED) {
              s4 = void 0;
            } else {
              peg$currPos = s4;
              s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
              s2 = [s2, s3, s4];
              s1 = s2;
            } else {
              peg$currPos = s1;
              s1 = peg$FAILED;
            }
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c12(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsesu_word() {
      var s0, s1, s2;

      var key    = peg$currPos * 157 + 17,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      peg$silentFails++;
      s2 = peg$parseSU_clause();
      peg$silentFails--;
      if (s2 === peg$FAILED) {
        s1 = void 0;
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parseany_word_SA_handling();
        if (s2 !== peg$FAILED) {
          s1 = [s1, s2];
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseBRIVLA_clause() {
      var s0, s1, s2;

      var key    = peg$currPos * 157 + 18,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parseBRIVLA_pre();
      if (s1 !== peg$FAILED) {
        s2 = peg$parsepost_clause();
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c13(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$parsezei_clause();
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseBRIVLA_pre() {
      var s0, s1, s2, s3;

      var key    = peg$currPos * 157 + 19,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parsepre_clause();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseBRIVLA();
        if (s2 !== peg$FAILED) {
          s3 = peg$parsespaces();
          if (s3 === peg$FAILED) {
            s3 = null;
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c14(s1, s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseCMAVO_clause() {
      var s0, s1, s2;

      var key    = peg$currPos * 157 + 20,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parseCMAVO_pre();
      if (s1 !== peg$FAILED) {
        s2 = peg$parsepost_clause();
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c13(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseCMAVO_pre() {
      var s0, s1, s2, s3;

      var key    = peg$currPos * 157 + 21,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parsepre_clause();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseCMAVO();
        if (s2 !== peg$FAILED) {
          s3 = peg$parsespaces();
          if (s3 === peg$FAILED) {
            s3 = null;
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c14(s1, s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseBAhE_clause() {
      var s0, s1, s2;

      var key    = peg$currPos * 157 + 22,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parseBAhE_pre();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseBAhE_post();
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c15(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseBAhE_pre() {
      var s0, s1, s2;

      var key    = peg$currPos * 157 + 23,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parseBAhE();
      if (s1 !== peg$FAILED) {
        s2 = peg$parsespaces();
        if (s2 === peg$FAILED) {
          s2 = null;
        }
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c16(s1);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseBAhE_post() {
      var s0, s1, s2, s3, s4;

      var key    = peg$currPos * 157 + 24,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parsesi_clause();
      if (s1 === peg$FAILED) {
        s1 = null;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        peg$silentFails++;
        s3 = peg$parseZEI_clause();
        peg$silentFails--;
        if (s3 === peg$FAILED) {
          s2 = void 0;
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parseBU_clause();
          peg$silentFails--;
          if (s4 === peg$FAILED) {
            s3 = void 0;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c17(s1);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseBU_clause() {
      var s0, s1, s2;

      var key    = peg$currPos * 157 + 25,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parseBU_pre();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseBU_post();
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c13(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseBU_pre() {
      var s0, s1, s2, s3;

      var key    = peg$currPos * 157 + 26,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parsepre_clause();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseBU();
        if (s2 !== peg$FAILED) {
          s3 = peg$parsespaces();
          if (s3 === peg$FAILED) {
            s3 = null;
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c14(s1, s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseBU_post() {
      var s0;

      var key    = peg$currPos * 157 + 27,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$parsespaces();
      if (s0 === peg$FAILED) {
        s0 = null;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseBY_clause() {
      var s0, s1, s2;

      var key    = peg$currPos * 157 + 28,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parseBY_pre();
      if (s1 !== peg$FAILED) {
        s2 = peg$parsepost_clause();
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c13(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$parsebu_clause();
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseBY_pre() {
      var s0, s1, s2, s3;

      var key    = peg$currPos * 157 + 29,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parsepre_clause();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseBY();
        if (s2 !== peg$FAILED) {
          s3 = peg$parsespaces();
          if (s3 === peg$FAILED) {
            s3 = null;
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c14(s1, s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseLEhU_clause() {
      var s0, s1, s2;

      var key    = peg$currPos * 157 + 30,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parseLEhU_pre();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseLEhU_post();
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c13(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseLEhU_pre() {
      var s0, s1, s2, s3;

      var key    = peg$currPos * 157 + 31,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parsepre_clause();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseLEhU();
        if (s2 !== peg$FAILED) {
          s3 = peg$parsespaces();
          if (s3 === peg$FAILED) {
            s3 = null;
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c14(s1, s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseLEhU_post() {
      var s0;

      var key    = peg$currPos * 157 + 32,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$parsespaces();
      if (s0 === peg$FAILED) {
        s0 = null;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseLOhU_clause() {
      var s0, s1, s2;

      var key    = peg$currPos * 157 + 33,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parseLOhU_pre();
      if (s1 !== peg$FAILED) {
        s2 = peg$parsepost_clause();
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c13(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseLOhU_pre() {
      var s0, s1, s2, s3, s4, s5, s6, s7;

      var key    = peg$currPos * 157 + 34,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parsepre_clause();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseLOhU();
        if (s2 !== peg$FAILED) {
          s3 = peg$parsespaces();
          if (s3 === peg$FAILED) {
            s3 = null;
          }
          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$currPos;
            s6 = peg$currPos;
            peg$silentFails++;
            s7 = peg$parseLEhU();
            peg$silentFails--;
            if (s7 === peg$FAILED) {
              s6 = void 0;
            } else {
              peg$currPos = s6;
              s6 = peg$FAILED;
            }
            if (s6 !== peg$FAILED) {
              s7 = peg$parseany_word();
              if (s7 !== peg$FAILED) {
                peg$savedPos = s5;
                s6 = peg$c18(s1, s2, s7);
                s5 = s6;
              } else {
                peg$currPos = s5;
                s5 = peg$FAILED;
              }
            } else {
              peg$currPos = s5;
              s5 = peg$FAILED;
            }
            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$currPos;
              s6 = peg$currPos;
              peg$silentFails++;
              s7 = peg$parseLEhU();
              peg$silentFails--;
              if (s7 === peg$FAILED) {
                s6 = void 0;
              } else {
                peg$currPos = s6;
                s6 = peg$FAILED;
              }
              if (s6 !== peg$FAILED) {
                s7 = peg$parseany_word();
                if (s7 !== peg$FAILED) {
                  peg$savedPos = s5;
                  s6 = peg$c18(s1, s2, s7);
                  s5 = s6;
                } else {
                  peg$currPos = s5;
                  s5 = peg$FAILED;
                }
              } else {
                peg$currPos = s5;
                s5 = peg$FAILED;
              }
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$parseLEhU_clause();
              if (s5 !== peg$FAILED) {
                s6 = peg$parsespaces();
                if (s6 === peg$FAILED) {
                  s6 = null;
                }
                if (s6 !== peg$FAILED) {
                  peg$savedPos = s0;
                  s1 = peg$c19(s1, s2, s4, s5);
                  s0 = s1;
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseSA_clause() {
      var s0, s1, s2;

      var key    = peg$currPos * 157 + 35,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parseSA_pre();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseSA_post();
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c20(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseSA_pre() {
      var s0, s1, s2, s3;

      var key    = peg$currPos * 157 + 36,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parsepre_clause();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseSA();
        if (s2 !== peg$FAILED) {
          s3 = peg$parsespaces();
          if (s3 === peg$FAILED) {
            s3 = null;
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c14(s1, s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseSA_post() {
      var s0;

      var key    = peg$currPos * 157 + 37,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$parsespaces();
      if (s0 === peg$FAILED) {
        s0 = null;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseSI_clause() {
      var s0, s1, s2, s3;

      var key    = peg$currPos * 157 + 38,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parsespaces();
      if (s1 === peg$FAILED) {
        s1 = null;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parseSI();
        if (s2 !== peg$FAILED) {
          s3 = peg$parsespaces();
          if (s3 === peg$FAILED) {
            s3 = null;
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c21(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseSU_clause() {
      var s0, s1, s2;

      var key    = peg$currPos * 157 + 39,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parseSU_pre();
      if (s1 !== peg$FAILED) {
        s2 = peg$parsepost_clause();
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c13(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseSU_pre() {
      var s0, s1, s2, s3;

      var key    = peg$currPos * 157 + 40,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parsepre_clause();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseSU();
        if (s2 !== peg$FAILED) {
          s3 = peg$parsespaces();
          if (s3 === peg$FAILED) {
            s3 = null;
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c14(s1, s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseUI_clause() {
      var s0, s1, s2;

      var key    = peg$currPos * 157 + 41,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parseUI_pre();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseindicator_post_clause();
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c13(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseUI_pre() {
      var s0, s1, s2, s3;

      var key    = peg$currPos * 157 + 42,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parsepre_clause();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseUI();
        if (s2 !== peg$FAILED) {
          s3 = peg$parsespaces();
          if (s3 === peg$FAILED) {
            s3 = null;
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c14(s1, s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseZEI_clause() {
      var s0, s1, s2;

      var key    = peg$currPos * 157 + 43,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parseZEI_pre();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseZEI_post();
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c20(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseZEI_pre() {
      var s0, s1, s2, s3;

      var key    = peg$currPos * 157 + 44,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parsepre_clause();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseZEI();
        if (s2 !== peg$FAILED) {
          s3 = peg$parsespaces();
          if (s3 === peg$FAILED) {
            s3 = null;
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c14(s1, s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseZEI_post() {
      var s0;

      var key    = peg$currPos * 157 + 45,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$parsespaces();
      if (s0 === peg$FAILED) {
        s0 = null;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseZO_clause() {
      var s0, s1, s2;

      var key    = peg$currPos * 157 + 46,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parseZO_pre();
      if (s1 !== peg$FAILED) {
        s2 = peg$parsepost_clause();
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c13(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseZO_pre() {
      var s0, s1, s2, s3, s4, s5;

      var key    = peg$currPos * 157 + 47,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parsepre_clause();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseZO();
        if (s2 !== peg$FAILED) {
          s3 = peg$parsespaces();
          if (s3 === peg$FAILED) {
            s3 = null;
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$parseany_word();
            if (s4 !== peg$FAILED) {
              s5 = peg$parsespaces();
              if (s5 === peg$FAILED) {
                s5 = null;
              }
              if (s5 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c22(s1, s2, s4);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseZOI_clause() {
      var s0, s1, s2;

      var key    = peg$currPos * 157 + 48,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parseZOI_pre();
      if (s1 !== peg$FAILED) {
        s2 = peg$parsepost_clause();
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c13(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseZOI_pre() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;

      var key    = peg$currPos * 157 + 49,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parsepre_clause();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseZOI();
        if (s2 !== peg$FAILED) {
          s3 = peg$parsespaces();
          if (s3 === peg$FAILED) {
            s3 = null;
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$parsezoi_open();
            if (s4 !== peg$FAILED) {
              s5 = peg$parsespaces();
              if (s5 === peg$FAILED) {
                s5 = null;
              }
              if (s5 !== peg$FAILED) {
                s6 = [];
                s7 = peg$parsezoi_word();
                while (s7 !== peg$FAILED) {
                  s6.push(s7);
                  s7 = peg$parsezoi_word();
                }
                if (s6 !== peg$FAILED) {
                  s7 = peg$parsezoi_close();
                  if (s7 !== peg$FAILED) {
                    s8 = peg$parsespaces();
                    if (s8 === peg$FAILED) {
                      s8 = null;
                    }
                    if (s8 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c23(s1, s2, s4, s6, s7);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseBRIVLA() {
      var s0, s1;

      var key    = peg$currPos * 157 + 50,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parsebrivla();
      if (s1 === peg$FAILED) {
        s1 = peg$parsecmevla();
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c24(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseCMAVO() {
      var s0, s1;

      var key    = peg$currPos * 157 + 51,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$parseBAhE();
      if (s0 === peg$FAILED) {
        s0 = peg$parseBU();
        if (s0 === peg$FAILED) {
          s0 = peg$parseBY();
          if (s0 === peg$FAILED) {
            s0 = peg$parseLEhU();
            if (s0 === peg$FAILED) {
              s0 = peg$parseLOhU();
              if (s0 === peg$FAILED) {
                s0 = peg$parseSA();
                if (s0 === peg$FAILED) {
                  s0 = peg$parseSI();
                  if (s0 === peg$FAILED) {
                    s0 = peg$parseSU();
                    if (s0 === peg$FAILED) {
                      s0 = peg$parseUI();
                      if (s0 === peg$FAILED) {
                        s0 = peg$parseZEI();
                        if (s0 === peg$FAILED) {
                          s0 = peg$parseZO();
                          if (s0 === peg$FAILED) {
                            s0 = peg$parseZOI();
                            if (s0 === peg$FAILED) {
                              s0 = peg$currPos;
                              s1 = peg$parsecmavo();
                              if (s1 !== peg$FAILED) {
                                peg$savedPos = s0;
                                s1 = peg$c25(s1);
                              }
                              s0 = s1;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parselojban_word() {
      var s0, s1;

      var key    = peg$currPos * 157 + 52,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parseCMAVO();
      if (s1 === peg$FAILED) {
        s1 = peg$parseBRIVLA();
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c26(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseany_word() {
      var s0, s1, s2;

      var key    = peg$currPos * 157 + 53,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parselojban_word();
      if (s1 !== peg$FAILED) {
        s2 = peg$parsespaces();
        if (s2 === peg$FAILED) {
          s2 = null;
        }
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c26(s1);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsezoi_open() {
      var s0, s1;

      var key    = peg$currPos * 157 + 54,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parselojban_word();
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c27(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsezoi_word() {
      var s0, s1, s2, s3, s4;

      var key    = peg$currPos * 157 + 55,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = [];
      s3 = peg$parsenon_space();
      if (s3 !== peg$FAILED) {
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsenon_space();
        }
      } else {
        s2 = peg$FAILED;
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parsespaces();
        if (s3 !== peg$FAILED) {
          peg$savedPos = peg$currPos;
          s4 = peg$c28(s2);
          if (s4) {
            s4 = void 0;
          } else {
            s4 = peg$FAILED;
          }
          if (s4 !== peg$FAILED) {
            s2 = [s2, s3, s4];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c29(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsezoi_close() {
      var s0, s1, s2;

      var key    = peg$currPos * 157 + 56,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parseany_word();
      if (s1 !== peg$FAILED) {
        peg$savedPos = peg$currPos;
        s2 = peg$c30(s1);
        if (s2) {
          s2 = void 0;
        } else {
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          s1 = [s1, s2];
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsecmevla() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;

      var key    = peg$currPos * 157 + 57,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parsesnavla();
      if (s2 === peg$FAILED) {
        s2 = peg$parsecipcme();
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$currPos;
        s4 = peg$currPos;
        peg$silentFails++;
        s5 = peg$currPos;
        s6 = peg$parsepause();
        if (s6 !== peg$FAILED) {
          s7 = peg$currPos;
          peg$silentFails++;
          s8 = peg$parseglide();
          peg$silentFails--;
          if (s8 === peg$FAILED) {
            s7 = void 0;
          } else {
            peg$currPos = s7;
            s7 = peg$FAILED;
          }
          if (s7 !== peg$FAILED) {
            s8 = peg$currPos;
            peg$silentFails++;
            s9 = peg$parsenucleus();
            peg$silentFails--;
            if (s9 === peg$FAILED) {
              s8 = void 0;
            } else {
              peg$currPos = s8;
              s8 = peg$FAILED;
            }
            if (s8 !== peg$FAILED) {
              s9 = peg$currPos;
              peg$silentFails++;
              s10 = peg$parsecmevla();
              peg$silentFails--;
              if (s10 === peg$FAILED) {
                s9 = void 0;
              } else {
                peg$currPos = s9;
                s9 = peg$FAILED;
              }
              if (s9 !== peg$FAILED) {
                s6 = [s6, s7, s8, s9];
                s5 = s6;
              } else {
                peg$currPos = s5;
                s5 = peg$FAILED;
              }
            } else {
              peg$currPos = s5;
              s5 = peg$FAILED;
            }
          } else {
            peg$currPos = s5;
            s5 = peg$FAILED;
          }
        } else {
          peg$currPos = s5;
          s5 = peg$FAILED;
        }
        peg$silentFails--;
        if (s5 !== peg$FAILED) {
          peg$currPos = s4;
          s4 = void 0;
        } else {
          s4 = peg$FAILED;
        }
        if (s4 !== peg$FAILED) {
          peg$savedPos = s3;
          s4 = peg$c31();
        }
        s3 = s4;
        if (s3 === peg$FAILED) {
          s3 = null;
        }
        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c32(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsesnavla() {
      var s0, s1, s2, s3, s4, s5;

      var key    = peg$currPos * 157 + 58,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parseh();
      if (s1 === peg$FAILED) {
        s1 = peg$currPos;
        s2 = peg$parseconsonant();
        if (s2 !== peg$FAILED) {
          s3 = peg$parseconsonant();
          if (s3 !== peg$FAILED) {
            s4 = peg$parseconsonant();
            if (s4 !== peg$FAILED) {
              s5 = peg$parseconsonant();
              if (s5 !== peg$FAILED) {
                s2 = [s2, s3, s4, s5];
                s1 = s2;
              } else {
                peg$currPos = s1;
                s1 = peg$FAILED;
              }
            } else {
              peg$currPos = s1;
              s1 = peg$FAILED;
            }
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      }
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsenucleus();
        if (s3 === peg$FAILED) {
          s3 = peg$parseglide();
          if (s3 === peg$FAILED) {
            s3 = peg$parseh();
            if (s3 === peg$FAILED) {
              s3 = peg$parseconsonant();
              if (s3 === peg$FAILED) {
                s3 = peg$parsedigit();
              }
            }
          }
        }
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsenucleus();
          if (s3 === peg$FAILED) {
            s3 = peg$parseglide();
            if (s3 === peg$FAILED) {
              s3 = peg$parseh();
              if (s3 === peg$FAILED) {
                s3 = peg$parseconsonant();
                if (s3 === peg$FAILED) {
                  s3 = peg$parsedigit();
                }
              }
            }
          }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parsepause();
          peg$silentFails--;
          if (s4 !== peg$FAILED) {
            peg$currPos = s3;
            s3 = void 0;
          } else {
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            s1 = [s1, s2, s3];
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsecipcme() {
      var s0, s1, s2, s3, s4, s5, s6;

      var key    = peg$currPos * 157 + 59,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parseany_syllable();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parseany_syllable();
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        peg$silentFails++;
        s3 = peg$parseany_syllable();
        peg$silentFails--;
        if (s3 === peg$FAILED) {
          s2 = void 0;
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          s3 = [];
          s4 = peg$parsenucleus();
          if (s4 === peg$FAILED) {
            s4 = peg$parseglide();
            if (s4 === peg$FAILED) {
              s4 = peg$parseh();
              if (s4 === peg$FAILED) {
                s4 = peg$parseconsonant();
                if (s4 === peg$FAILED) {
                  s4 = peg$parsedigit();
                }
              }
            }
          }
          if (s4 !== peg$FAILED) {
            while (s4 !== peg$FAILED) {
              s3.push(s4);
              s4 = peg$parsenucleus();
              if (s4 === peg$FAILED) {
                s4 = peg$parseglide();
                if (s4 === peg$FAILED) {
                  s4 = peg$parseh();
                  if (s4 === peg$FAILED) {
                    s4 = peg$parseconsonant();
                    if (s4 === peg$FAILED) {
                      s4 = peg$parsedigit();
                    }
                  }
                }
              }
            }
          } else {
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parseany_syllable();
            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parseany_syllable();
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$currPos;
              peg$silentFails++;
              s6 = peg$parsepause();
              peg$silentFails--;
              if (s6 !== peg$FAILED) {
                peg$currPos = s5;
                s5 = void 0;
              } else {
                s5 = peg$FAILED;
              }
              if (s5 !== peg$FAILED) {
                s1 = [s1, s2, s3, s4, s5];
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsecmavo() {
      var s0, s1, s2, s3, s4, s5;

      var key    = peg$currPos * 157 + 60,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$currPos;
      peg$silentFails++;
      s3 = peg$parseCVCy_lujvo();
      peg$silentFails--;
      if (s3 === peg$FAILED) {
        s2 = void 0;
      } else {
        peg$currPos = s2;
        s2 = peg$FAILED;
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parsecmavo_form();
        if (s3 !== peg$FAILED) {
          s4 = peg$currPos;
          peg$silentFails++;
          s5 = peg$parsepost_word();
          peg$silentFails--;
          if (s5 !== peg$FAILED) {
            peg$currPos = s4;
            s4 = void 0;
          } else {
            s4 = peg$FAILED;
          }
          if (s4 !== peg$FAILED) {
            s2 = [s2, s3, s4];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c33(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseCVCy_lujvo() {
      var s0, s1, s2, s3, s4, s5, s6, s7;

      var key    = peg$currPos * 157 + 61,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parseconsonant();
      if (s2 !== peg$FAILED) {
        s3 = peg$parseunstressed_vowel();
        if (s3 !== peg$FAILED) {
          s4 = peg$parseconsonant();
          if (s4 !== peg$FAILED) {
            s5 = peg$parsey();
            if (s5 !== peg$FAILED) {
              s6 = [];
              s7 = peg$parseany_unstressed_syllable();
              while (s7 !== peg$FAILED) {
                s6.push(s7);
                s7 = peg$parseany_unstressed_syllable();
              }
              if (s6 !== peg$FAILED) {
                s7 = peg$parsebrivla_core();
                if (s7 !== peg$FAILED) {
                  s2 = [s2, s3, s4, s5, s6, s7];
                  s1 = s2;
                } else {
                  peg$currPos = s1;
                  s1 = peg$FAILED;
                }
              } else {
                peg$currPos = s1;
                s1 = peg$FAILED;
              }
            } else {
              peg$currPos = s1;
              s1 = peg$FAILED;
            }
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 === peg$FAILED) {
        s1 = peg$currPos;
        s2 = peg$parseconsonant();
        if (s2 !== peg$FAILED) {
          s3 = peg$parsestressed_vowel();
          if (s3 !== peg$FAILED) {
            s4 = peg$parseconsonant();
            if (s4 !== peg$FAILED) {
              s5 = peg$parsey();
              if (s5 !== peg$FAILED) {
                s6 = peg$parsezihevlas_syllable();
                if (s6 === peg$FAILED) {
                  s6 = peg$parsefinal_syllable();
                }
                if (s6 !== peg$FAILED) {
                  s2 = [s2, s3, s4, s5, s6];
                  s1 = s2;
                } else {
                  peg$currPos = s1;
                  s1 = peg$FAILED;
                }
              } else {
                peg$currPos = s1;
                s1 = peg$FAILED;
              }
            } else {
              peg$currPos = s1;
              s1 = peg$FAILED;
            }
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c33(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsecmavo_form() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;

      var key    = peg$currPos * 157 + 62,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$currPos;
      peg$silentFails++;
      s3 = peg$parseh();
      peg$silentFails--;
      if (s3 === peg$FAILED) {
        s2 = void 0;
      } else {
        peg$currPos = s2;
        s2 = peg$FAILED;
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$currPos;
        peg$silentFails++;
        s4 = peg$parsecluster();
        peg$silentFails--;
        if (s4 === peg$FAILED) {
          s3 = void 0;
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parseonset();
          if (s4 !== peg$FAILED) {
            s5 = [];
            s6 = peg$currPos;
            s7 = peg$parsenucleus();
            if (s7 !== peg$FAILED) {
              s8 = peg$parseh();
              if (s8 === peg$FAILED) {
                s8 = peg$parseglide();
              }
              if (s8 !== peg$FAILED) {
                s7 = [s7, s8];
                s6 = s7;
              } else {
                peg$currPos = s6;
                s6 = peg$FAILED;
              }
            } else {
              peg$currPos = s6;
              s6 = peg$FAILED;
            }
            while (s6 !== peg$FAILED) {
              s5.push(s6);
              s6 = peg$currPos;
              s7 = peg$parsenucleus();
              if (s7 !== peg$FAILED) {
                s8 = peg$parseh();
                if (s8 === peg$FAILED) {
                  s8 = peg$parseglide();
                }
                if (s8 !== peg$FAILED) {
                  s7 = [s7, s8];
                  s6 = s7;
                } else {
                  peg$currPos = s6;
                  s6 = peg$FAILED;
                }
              } else {
                peg$currPos = s6;
                s6 = peg$FAILED;
              }
            }
            if (s5 !== peg$FAILED) {
              s6 = peg$currPos;
              s7 = peg$currPos;
              peg$silentFails++;
              s8 = peg$parsestressed();
              peg$silentFails--;
              if (s8 === peg$FAILED) {
                s7 = void 0;
              } else {
                peg$currPos = s7;
                s7 = peg$FAILED;
              }
              if (s7 !== peg$FAILED) {
                s8 = peg$parsenucleus();
                if (s8 !== peg$FAILED) {
                  s7 = [s7, s8];
                  s6 = s7;
                } else {
                  peg$currPos = s6;
                  s6 = peg$FAILED;
                }
              } else {
                peg$currPos = s6;
                s6 = peg$FAILED;
              }
              if (s6 === peg$FAILED) {
                s6 = peg$currPos;
                s7 = peg$parsenucleus();
                if (s7 !== peg$FAILED) {
                  s8 = peg$currPos;
                  peg$silentFails++;
                  s9 = peg$parsecluster();
                  peg$silentFails--;
                  if (s9 === peg$FAILED) {
                    s8 = void 0;
                  } else {
                    peg$currPos = s8;
                    s8 = peg$FAILED;
                  }
                  if (s8 !== peg$FAILED) {
                    s7 = [s7, s8];
                    s6 = s7;
                  } else {
                    peg$currPos = s6;
                    s6 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s6;
                  s6 = peg$FAILED;
                }
              }
              if (s6 !== peg$FAILED) {
                s2 = [s2, s3, s4, s5, s6];
                s1 = s2;
              } else {
                peg$currPos = s1;
                s1 = peg$FAILED;
              }
            } else {
              peg$currPos = s1;
              s1 = peg$FAILED;
            }
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 === peg$FAILED) {
        s1 = [];
        s2 = peg$parsey();
        if (s2 !== peg$FAILED) {
          while (s2 !== peg$FAILED) {
            s1.push(s2);
            s2 = peg$parsey();
          }
        } else {
          s1 = peg$FAILED;
        }
        if (s1 === peg$FAILED) {
          s1 = peg$parsedigit();
        }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c33(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsebrivla() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;

      var key    = peg$currPos * 157 + 63,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$currPos;
      s3 = peg$currPos;
      peg$silentFails++;
      s4 = peg$parseslinkuhi();
      peg$silentFails--;
      if (s4 !== peg$FAILED) {
        peg$currPos = s3;
        s3 = void 0;
      } else {
        s3 = peg$FAILED;
      }
      if (s3 !== peg$FAILED) {
        peg$savedPos = s2;
        s3 = peg$c31();
      }
      s2 = s3;
      if (s2 === peg$FAILED) {
        s2 = null;
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$currPos;
        peg$silentFails++;
        s4 = peg$parsecmavo();
        peg$silentFails--;
        if (s4 === peg$FAILED) {
          s3 = void 0;
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$currPos;
          peg$silentFails++;
          s5 = peg$parseh();
          peg$silentFails--;
          if (s5 === peg$FAILED) {
            s4 = void 0;
          } else {
            peg$currPos = s4;
            s4 = peg$FAILED;
          }
          if (s4 !== peg$FAILED) {
            s5 = peg$currPos;
            s6 = peg$parseunstressed_syllable();
            if (s6 !== peg$FAILED) {
              s7 = [];
              s8 = peg$parseany_unstressed_syllable();
              while (s8 !== peg$FAILED) {
                s7.push(s8);
                s8 = peg$parseany_unstressed_syllable();
              }
              if (s7 !== peg$FAILED) {
                s6 = [s6, s7];
                s5 = s6;
              } else {
                peg$currPos = s5;
                s5 = peg$FAILED;
              }
            } else {
              peg$currPos = s5;
              s5 = peg$FAILED;
            }
            if (s5 === peg$FAILED) {
              s5 = null;
            }
            if (s5 !== peg$FAILED) {
              s6 = peg$parsebrivla_core();
              if (s6 !== peg$FAILED) {
                s2 = [s2, s3, s4, s5, s6];
                s1 = s2;
              } else {
                peg$currPos = s1;
                s1 = peg$FAILED;
              }
            } else {
              peg$currPos = s1;
              s1 = peg$FAILED;
            }
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c34(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsebrivla_core() {
      var s0, s1, s2, s3, s4;

      var key    = peg$currPos * 157 + 64,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parsestressed_syllable();
      if (s2 !== peg$FAILED) {
        s3 = [];
        s4 = peg$parsemedial_syllable();
        while (s4 !== peg$FAILED) {
          s3.push(s4);
          s4 = peg$parsemedial_syllable();
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parsezihevlas_syllable();
          if (s4 === peg$FAILED) {
            s4 = peg$parsefinal_syllable();
          }
          if (s4 !== peg$FAILED) {
            s2 = [s2, s3, s4];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c33(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseslinkuhi() {
      var s0, s1, s2, s3, s4;

      var key    = peg$currPos * 157 + 65,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$currPos;
      peg$silentFails++;
      s3 = peg$parserafsi_string();
      peg$silentFails--;
      if (s3 === peg$FAILED) {
        s2 = void 0;
      } else {
        peg$currPos = s2;
        s2 = peg$FAILED;
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parseconsonant();
        if (s3 !== peg$FAILED) {
          s4 = peg$parserafsi_string();
          if (s4 !== peg$FAILED) {
            s2 = [s2, s3, s4];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c33(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parserafsi_string() {
      var s0, s1, s2, s3, s4, s5;

      var key    = peg$currPos * 157 + 66,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$currPos;
      s3 = peg$parsegismu();
      if (s3 !== peg$FAILED) {
        s4 = peg$currPos;
        peg$silentFails++;
        s5 = peg$parsepost_word();
        peg$silentFails--;
        if (s5 !== peg$FAILED) {
          peg$currPos = s4;
          s4 = void 0;
        } else {
          s4 = peg$FAILED;
        }
        if (s4 !== peg$FAILED) {
          s3 = [s3, s4];
          s2 = s3;
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
      } else {
        peg$currPos = s2;
        s2 = peg$FAILED;
      }
      if (s2 === peg$FAILED) {
        s2 = peg$currPos;
        s3 = peg$parselong_rafsi();
        if (s3 !== peg$FAILED) {
          s4 = peg$currPos;
          peg$silentFails++;
          s5 = peg$parsey();
          peg$silentFails--;
          if (s5 !== peg$FAILED) {
            peg$currPos = s4;
            s4 = void 0;
          } else {
            s4 = peg$FAILED;
          }
          if (s4 !== peg$FAILED) {
            s3 = [s3, s4];
            s2 = s3;
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
        if (s2 === peg$FAILED) {
          s2 = peg$parseCVC_rafsi();
          if (s2 === peg$FAILED) {
            s2 = peg$parseCCV_rafsi();
            if (s2 === peg$FAILED) {
              s2 = peg$parseCVV_rafsi();
            }
          }
        }
      }
      if (s2 !== peg$FAILED) {
        while (s2 !== peg$FAILED) {
          s1.push(s2);
          s2 = peg$currPos;
          s3 = peg$parsegismu();
          if (s3 !== peg$FAILED) {
            s4 = peg$currPos;
            peg$silentFails++;
            s5 = peg$parsepost_word();
            peg$silentFails--;
            if (s5 !== peg$FAILED) {
              peg$currPos = s4;
              s4 = void 0;
            } else {
              s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
              s3 = [s3, s4];
              s2 = s3;
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
          if (s2 === peg$FAILED) {
            s2 = peg$currPos;
            s3 = peg$parselong_rafsi();
            if (s3 !== peg$FAILED) {
              s4 = peg$currPos;
              peg$silentFails++;
              s5 = peg$parsey();
              peg$silentFails--;
              if (s5 !== peg$FAILED) {
                peg$currPos = s4;
                s4 = void 0;
              } else {
                s4 = peg$FAILED;
              }
              if (s4 !== peg$FAILED) {
                s3 = [s3, s4];
                s2 = s3;
              } else {
                peg$currPos = s2;
                s2 = peg$FAILED;
              }
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
            if (s2 === peg$FAILED) {
              s2 = peg$parseCVC_rafsi();
              if (s2 === peg$FAILED) {
                s2 = peg$parseCCV_rafsi();
                if (s2 === peg$FAILED) {
                  s2 = peg$parseCVV_rafsi();
                }
              }
            }
          }
        }
      } else {
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        peg$silentFails++;
        s3 = peg$parsey();
        if (s3 === peg$FAILED) {
          s3 = peg$parsepost_word();
        }
        peg$silentFails--;
        if (s3 !== peg$FAILED) {
          peg$currPos = s2;
          s2 = void 0;
        } else {
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          s1 = [s1, s2];
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsegismu() {
      var s0, s1, s2, s3, s4, s5, s6, s7;

      var key    = peg$currPos * 157 + 67,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$currPos;
      s3 = peg$parseinitial_pair();
      if (s3 !== peg$FAILED) {
        s4 = peg$parsestressed_vowel();
        if (s4 !== peg$FAILED) {
          s3 = [s3, s4];
          s2 = s3;
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
      } else {
        peg$currPos = s2;
        s2 = peg$FAILED;
      }
      if (s2 === peg$FAILED) {
        s2 = peg$currPos;
        s3 = peg$parseconsonant();
        if (s3 !== peg$FAILED) {
          s4 = peg$parsestressed_vowel();
          if (s4 !== peg$FAILED) {
            s5 = peg$parseconsonant();
            if (s5 !== peg$FAILED) {
              s3 = [s3, s4, s5];
              s2 = s3;
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$currPos;
        peg$silentFails++;
        s4 = peg$parsefinal_syllable();
        peg$silentFails--;
        if (s4 !== peg$FAILED) {
          peg$currPos = s3;
          s3 = void 0;
        } else {
          s3 = peg$FAILED;
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parseconsonant();
          if (s4 !== peg$FAILED) {
            s5 = peg$parsevowel();
            if (s5 !== peg$FAILED) {
              s6 = peg$currPos;
              peg$silentFails++;
              s7 = peg$parsepost_word();
              peg$silentFails--;
              if (s7 !== peg$FAILED) {
                peg$currPos = s6;
                s6 = void 0;
              } else {
                s6 = peg$FAILED;
              }
              if (s6 !== peg$FAILED) {
                s2 = [s2, s3, s4, s5, s6];
                s1 = s2;
              } else {
                peg$currPos = s1;
                s1 = peg$FAILED;
              }
            } else {
              peg$currPos = s1;
              s1 = peg$FAILED;
            }
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c33(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsey_rafsi() {
      var s0, s1, s2, s3, s4;

      var key    = peg$currPos * 157 + 68,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parselong_rafsi();
      if (s2 === peg$FAILED) {
        s2 = peg$parseCVC_rafsi();
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parsey();
        if (s3 !== peg$FAILED) {
          s4 = peg$parseh();
          if (s4 === peg$FAILED) {
            s4 = null;
          }
          if (s4 !== peg$FAILED) {
            s2 = [s2, s3, s4];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c33(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsehy_rafsi() {
      var s0, s1, s2, s3, s4;

      var key    = peg$currPos * 157 + 69,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parselong_rafsi();
      if (s2 !== peg$FAILED) {
        s3 = peg$parsevowel();
        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 === peg$FAILED) {
        s1 = peg$parseCCV_rafsi();
        if (s1 === peg$FAILED) {
          s1 = peg$parseCVV_rafsi();
        }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parseh();
        if (s2 !== peg$FAILED) {
          s3 = peg$parsey();
          if (s3 !== peg$FAILED) {
            s4 = peg$parseh();
            if (s4 === peg$FAILED) {
              s4 = null;
            }
            if (s4 !== peg$FAILED) {
              s1 = [s1, s2, s3, s4];
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parselong_rafsi() {
      var s0, s1, s2, s3, s4, s5;

      var key    = peg$currPos * 157 + 70,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parseinitial_pair();
      if (s2 !== peg$FAILED) {
        s3 = peg$parsevowel();
        if (s3 !== peg$FAILED) {
          s4 = peg$parseconsonant();
          if (s4 !== peg$FAILED) {
            s2 = [s2, s3, s4];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 === peg$FAILED) {
        s1 = peg$currPos;
        s2 = peg$parseconsonant();
        if (s2 !== peg$FAILED) {
          s3 = peg$parsevowel();
          if (s3 !== peg$FAILED) {
            s4 = peg$parseconsonant();
            if (s4 !== peg$FAILED) {
              s5 = peg$parseconsonant();
              if (s5 !== peg$FAILED) {
                s2 = [s2, s3, s4, s5];
                s1 = s2;
              } else {
                peg$currPos = s1;
                s1 = peg$FAILED;
              }
            } else {
              peg$currPos = s1;
              s1 = peg$FAILED;
            }
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c33(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseCVC_rafsi() {
      var s0, s1, s2, s3, s4;

      var key    = peg$currPos * 157 + 71,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parseconsonant();
      if (s2 !== peg$FAILED) {
        s3 = peg$parsevowel();
        if (s3 !== peg$FAILED) {
          s4 = peg$parseconsonant();
          if (s4 !== peg$FAILED) {
            s2 = [s2, s3, s4];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c33(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseCCV_rafsi() {
      var s0, s1, s2, s3;

      var key    = peg$currPos * 157 + 72,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parseinitial_pair();
      if (s2 !== peg$FAILED) {
        s3 = peg$parsevowel();
        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c33(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseCVV_rafsi() {
      var s0, s1, s2, s3, s4, s5, s6;

      var key    = peg$currPos * 157 + 73,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parseconsonant();
      if (s2 !== peg$FAILED) {
        s3 = peg$currPos;
        s4 = peg$parsevowel();
        if (s4 !== peg$FAILED) {
          s5 = peg$parseh();
          if (s5 !== peg$FAILED) {
            s6 = peg$parsevowel();
            if (s6 !== peg$FAILED) {
              s4 = [s4, s5, s6];
              s3 = s4;
            } else {
              peg$currPos = s3;
              s3 = peg$FAILED;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
        if (s3 === peg$FAILED) {
          s3 = peg$parsediphthong();
        }
        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c33(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsefinal_syllable() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;

      var key    = peg$currPos * 157 + 74,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parseonset();
      if (s2 !== peg$FAILED) {
        s3 = peg$currPos;
        peg$silentFails++;
        s4 = peg$parsey();
        peg$silentFails--;
        if (s4 === peg$FAILED) {
          s3 = void 0;
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$currPos;
          peg$silentFails++;
          s5 = peg$parsestressed();
          peg$silentFails--;
          if (s5 === peg$FAILED) {
            s4 = void 0;
          } else {
            peg$currPos = s4;
            s4 = peg$FAILED;
          }
          if (s4 !== peg$FAILED) {
            s5 = peg$parsenucleus();
            if (s5 !== peg$FAILED) {
              s6 = peg$currPos;
              peg$silentFails++;
              s7 = peg$parsecmevla();
              peg$silentFails--;
              if (s7 === peg$FAILED) {
                s6 = void 0;
              } else {
                peg$currPos = s6;
                s6 = peg$FAILED;
              }
              if (s6 !== peg$FAILED) {
                s7 = peg$currPos;
                peg$silentFails++;
                s8 = peg$parsepost_word();
                peg$silentFails--;
                if (s8 !== peg$FAILED) {
                  peg$currPos = s7;
                  s7 = void 0;
                } else {
                  s7 = peg$FAILED;
                }
                if (s7 !== peg$FAILED) {
                  s2 = [s2, s3, s4, s5, s6, s7];
                  s1 = s2;
                } else {
                  peg$currPos = s1;
                  s1 = peg$FAILED;
                }
              } else {
                peg$currPos = s1;
                s1 = peg$FAILED;
              }
            } else {
              peg$currPos = s1;
              s1 = peg$FAILED;
            }
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c35(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsezihevlas_syllable() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16;

      var key    = peg$currPos * 157 + 75,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parseonset();
      if (s2 !== peg$FAILED) {
        s3 = peg$currPos;
        peg$silentFails++;
        s4 = peg$parsey();
        peg$silentFails--;
        if (s4 === peg$FAILED) {
          s3 = void 0;
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$currPos;
          peg$silentFails++;
          s5 = peg$parsestressed();
          peg$silentFails--;
          if (s5 === peg$FAILED) {
            s4 = void 0;
          } else {
            peg$currPos = s4;
            s4 = peg$FAILED;
          }
          if (s4 !== peg$FAILED) {
            s5 = peg$parsenucleus();
            if (s5 !== peg$FAILED) {
              s6 = peg$parseconsonant();
              if (s6 !== peg$FAILED) {
                s7 = peg$parseconsonant();
                if (s7 === peg$FAILED) {
                  s7 = null;
                }
                if (s7 !== peg$FAILED) {
                  s8 = peg$currPos;
                  peg$silentFails++;
                  s9 = peg$parsepause();
                  peg$silentFails--;
                  if (s9 !== peg$FAILED) {
                    peg$currPos = s8;
                    s8 = void 0;
                  } else {
                    s8 = peg$FAILED;
                  }
                  if (s8 !== peg$FAILED) {
                    s9 = peg$currPos;
                    s10 = peg$currPos;
                    peg$silentFails++;
                    s11 = peg$currPos;
                    s12 = peg$parsepause();
                    if (s12 !== peg$FAILED) {
                      s13 = peg$currPos;
                      peg$silentFails++;
                      s14 = peg$parsenucleus();
                      peg$silentFails--;
                      if (s14 === peg$FAILED) {
                        s13 = void 0;
                      } else {
                        peg$currPos = s13;
                        s13 = peg$FAILED;
                      }
                      if (s13 !== peg$FAILED) {
                        s14 = peg$currPos;
                        peg$silentFails++;
                        s15 = peg$parseglide();
                        peg$silentFails--;
                        if (s15 === peg$FAILED) {
                          s14 = void 0;
                        } else {
                          peg$currPos = s14;
                          s14 = peg$FAILED;
                        }
                        if (s14 !== peg$FAILED) {
                          s15 = peg$currPos;
                          peg$silentFails++;
                          s16 = peg$parsecmevla();
                          peg$silentFails--;
                          if (s16 === peg$FAILED) {
                            s15 = void 0;
                          } else {
                            peg$currPos = s15;
                            s15 = peg$FAILED;
                          }
                          if (s15 !== peg$FAILED) {
                            s12 = [s12, s13, s14, s15];
                            s11 = s12;
                          } else {
                            peg$currPos = s11;
                            s11 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s11;
                          s11 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s11;
                        s11 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s11;
                      s11 = peg$FAILED;
                    }
                    peg$silentFails--;
                    if (s11 !== peg$FAILED) {
                      peg$currPos = s10;
                      s10 = void 0;
                    } else {
                      s10 = peg$FAILED;
                    }
                    if (s10 !== peg$FAILED) {
                      peg$savedPos = s9;
                      s10 = peg$c31();
                    }
                    s9 = s10;
                    if (s9 === peg$FAILED) {
                      s9 = null;
                    }
                    if (s9 !== peg$FAILED) {
                      s2 = [s2, s3, s4, s5, s6, s7, s8, s9];
                      s1 = s2;
                    } else {
                      peg$currPos = s1;
                      s1 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s1;
                    s1 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s1;
                  s1 = peg$FAILED;
                }
              } else {
                peg$currPos = s1;
                s1 = peg$FAILED;
              }
            } else {
              peg$currPos = s1;
              s1 = peg$FAILED;
            }
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c35(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsestressed_syllable() {
      var s0, s1, s2, s3, s4;

      var key    = peg$currPos * 157 + 76,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$currPos;
      peg$silentFails++;
      s3 = peg$parsestressed();
      peg$silentFails--;
      if (s3 !== peg$FAILED) {
        peg$currPos = s2;
        s2 = void 0;
      } else {
        s2 = peg$FAILED;
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parsesyllable();
        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 === peg$FAILED) {
        s1 = peg$currPos;
        s2 = peg$parsesyllable();
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parsestress();
          peg$silentFails--;
          if (s4 !== peg$FAILED) {
            peg$currPos = s3;
            s3 = void 0;
          } else {
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            s2 = [s2, s3];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c36(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsestressed_diphthong() {
      var s0, s1, s2, s3, s4;

      var key    = peg$currPos * 157 + 77,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$currPos;
      peg$silentFails++;
      s3 = peg$parsestressed();
      peg$silentFails--;
      if (s3 !== peg$FAILED) {
        peg$currPos = s2;
        s2 = void 0;
      } else {
        s2 = peg$FAILED;
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parsediphthong();
        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 === peg$FAILED) {
        s1 = peg$currPos;
        s2 = peg$parsediphthong();
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parsestress();
          peg$silentFails--;
          if (s4 !== peg$FAILED) {
            peg$currPos = s3;
            s3 = void 0;
          } else {
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            s2 = [s2, s3];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c35(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsestressed_vowel() {
      var s0, s1, s2, s3, s4;

      var key    = peg$currPos * 157 + 78,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$currPos;
      peg$silentFails++;
      s3 = peg$parsestressed();
      peg$silentFails--;
      if (s3 !== peg$FAILED) {
        peg$currPos = s2;
        s2 = void 0;
      } else {
        s2 = peg$FAILED;
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parsevowel();
        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 === peg$FAILED) {
        s1 = peg$currPos;
        s2 = peg$parsevowel();
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parsestress();
          peg$silentFails--;
          if (s4 !== peg$FAILED) {
            peg$currPos = s3;
            s3 = void 0;
          } else {
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            s2 = [s2, s3];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c35(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseunstressed_syllable() {
      var s0, s1, s2, s3, s4, s5;

      var key    = peg$currPos * 157 + 79,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$currPos;
      peg$silentFails++;
      s3 = peg$parsestressed();
      peg$silentFails--;
      if (s3 === peg$FAILED) {
        s2 = void 0;
      } else {
        peg$currPos = s2;
        s2 = peg$FAILED;
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parsesyllable();
        if (s3 !== peg$FAILED) {
          s4 = peg$currPos;
          peg$silentFails++;
          s5 = peg$parsestress();
          peg$silentFails--;
          if (s5 === peg$FAILED) {
            s4 = void 0;
          } else {
            peg$currPos = s4;
            s4 = peg$FAILED;
          }
          if (s4 !== peg$FAILED) {
            s2 = [s2, s3, s4];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 === peg$FAILED) {
        s1 = peg$parseconsonantal_syllable();
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c35(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseunstressed_diphthong() {
      var s0, s1, s2, s3, s4, s5;

      var key    = peg$currPos * 157 + 80,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$currPos;
      peg$silentFails++;
      s3 = peg$parsestressed();
      peg$silentFails--;
      if (s3 === peg$FAILED) {
        s2 = void 0;
      } else {
        peg$currPos = s2;
        s2 = peg$FAILED;
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parsediphthong();
        if (s3 !== peg$FAILED) {
          s4 = peg$currPos;
          peg$silentFails++;
          s5 = peg$parsestress();
          peg$silentFails--;
          if (s5 === peg$FAILED) {
            s4 = void 0;
          } else {
            peg$currPos = s4;
            s4 = peg$FAILED;
          }
          if (s4 !== peg$FAILED) {
            s2 = [s2, s3, s4];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c35(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseunstressed_vowel() {
      var s0, s1, s2, s3, s4, s5;

      var key    = peg$currPos * 157 + 81,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$currPos;
      peg$silentFails++;
      s3 = peg$parsestressed();
      peg$silentFails--;
      if (s3 === peg$FAILED) {
        s2 = void 0;
      } else {
        peg$currPos = s2;
        s2 = peg$FAILED;
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parsevowel();
        if (s3 !== peg$FAILED) {
          s4 = peg$currPos;
          peg$silentFails++;
          s5 = peg$parsestress();
          peg$silentFails--;
          if (s5 === peg$FAILED) {
            s4 = void 0;
          } else {
            peg$currPos = s4;
            s4 = peg$FAILED;
          }
          if (s4 !== peg$FAILED) {
            s2 = [s2, s3, s4];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c35(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsestress() {
      var s0, s1, s2, s3, s4, s5, s6;

      var key    = peg$currPos * 157 + 82,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = [];
      s3 = peg$parseconsonant();
      if (s3 === peg$FAILED) {
        s3 = peg$parseglide();
      }
      while (s3 !== peg$FAILED) {
        s2.push(s3);
        s3 = peg$parseconsonant();
        if (s3 === peg$FAILED) {
          s3 = peg$parseglide();
        }
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parseh();
        if (s3 === peg$FAILED) {
          s3 = null;
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parsey();
          if (s4 === peg$FAILED) {
            s4 = null;
          }
          if (s4 !== peg$FAILED) {
            s5 = peg$parsesyllable();
            if (s5 !== peg$FAILED) {
              s6 = peg$parsepause();
              if (s6 !== peg$FAILED) {
                s2 = [s2, s3, s4, s5, s6];
                s1 = s2;
              } else {
                peg$currPos = s1;
                s1 = peg$FAILED;
              }
            } else {
              peg$currPos = s1;
              s1 = peg$FAILED;
            }
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c35(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsestressed() {
      var s0, s1, s2, s3, s4;

      var key    = peg$currPos * 157 + 83,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parseonset();
      if (s2 !== peg$FAILED) {
        s3 = [];
        s4 = peg$parsecomma();
        while (s4 !== peg$FAILED) {
          s3.push(s4);
          s4 = peg$parsecomma();
        }
        if (s3 !== peg$FAILED) {
          if (peg$c37.test(input.charAt(peg$currPos))) {
            s4 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s4 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c38); }
          }
          if (s4 !== peg$FAILED) {
            s2 = [s2, s3, s4];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c35(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseany_syllable() {
      var s0, s1, s2, s3, s4;

      var key    = peg$currPos * 157 + 84,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parseonset();
      if (s2 !== peg$FAILED) {
        s3 = peg$parsenucleus();
        if (s3 !== peg$FAILED) {
          s4 = peg$parsecoda();
          if (s4 === peg$FAILED) {
            s4 = null;
          }
          if (s4 !== peg$FAILED) {
            s2 = [s2, s3, s4];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 === peg$FAILED) {
        s1 = peg$parseconsonantal_syllable();
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c35(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseany_unstressed_syllable() {
      var s0, s1, s2, s3, s4, s5, s6, s7;

      var key    = peg$currPos * 157 + 85,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$currPos;
      peg$silentFails++;
      s3 = peg$parsestressed();
      peg$silentFails--;
      if (s3 === peg$FAILED) {
        s2 = void 0;
      } else {
        peg$currPos = s2;
        s2 = peg$FAILED;
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parseonset();
        if (s3 !== peg$FAILED) {
          s4 = peg$parsenucleus();
          if (s4 !== peg$FAILED) {
            s5 = peg$parsecoda();
            if (s5 === peg$FAILED) {
              s5 = null;
            }
            if (s5 !== peg$FAILED) {
              s6 = peg$currPos;
              peg$silentFails++;
              s7 = peg$parsestress();
              peg$silentFails--;
              if (s7 === peg$FAILED) {
                s6 = void 0;
              } else {
                peg$currPos = s6;
                s6 = peg$FAILED;
              }
              if (s6 !== peg$FAILED) {
                s2 = [s2, s3, s4, s5, s6];
                s1 = s2;
              } else {
                peg$currPos = s1;
                s1 = peg$FAILED;
              }
            } else {
              peg$currPos = s1;
              s1 = peg$FAILED;
            }
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 === peg$FAILED) {
        s1 = peg$parseconsonantal_syllable();
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c35(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsemedial_syllable() {
      var s0, s1, s2, s3, s4;

      var key    = peg$currPos * 157 + 86,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parseonset();
      if (s2 !== peg$FAILED) {
        s3 = peg$parsey();
        if (s3 !== peg$FAILED) {
          s4 = peg$parsecoda();
          if (s4 === peg$FAILED) {
            s4 = null;
          }
          if (s4 !== peg$FAILED) {
            s2 = [s2, s3, s4];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 === peg$FAILED) {
        s1 = peg$parseconsonantal_syllable();
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c35(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsesyllable() {
      var s0, s1, s2, s3, s4, s5;

      var key    = peg$currPos * 157 + 87,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parseonset();
      if (s2 !== peg$FAILED) {
        s3 = peg$currPos;
        peg$silentFails++;
        s4 = peg$parsey();
        peg$silentFails--;
        if (s4 === peg$FAILED) {
          s3 = void 0;
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parsenucleus();
          if (s4 !== peg$FAILED) {
            s5 = peg$parsecoda();
            if (s5 === peg$FAILED) {
              s5 = null;
            }
            if (s5 !== peg$FAILED) {
              s2 = [s2, s3, s4, s5];
              s1 = s2;
            } else {
              peg$currPos = s1;
              s1 = peg$FAILED;
            }
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c35(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseconsonantal_syllable() {
      var s0, s1, s2, s3, s4, s5, s6;

      var key    = peg$currPos * 157 + 88,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parseconsonant();
      if (s2 !== peg$FAILED) {
        s3 = peg$currPos;
        peg$silentFails++;
        s4 = peg$parseany_syllable();
        peg$silentFails--;
        if (s4 === peg$FAILED) {
          s3 = void 0;
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parsesyllabic();
          if (s4 !== peg$FAILED) {
            s5 = peg$currPos;
            peg$silentFails++;
            s6 = peg$parseany_syllable();
            peg$silentFails--;
            if (s6 !== peg$FAILED) {
              peg$currPos = s5;
              s5 = void 0;
            } else {
              s5 = peg$FAILED;
            }
            if (s5 !== peg$FAILED) {
              s2 = [s2, s3, s4, s5];
              s1 = s2;
            } else {
              peg$currPos = s1;
              s1 = peg$FAILED;
            }
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c35(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsecoda() {
      var s0, s1, s2, s3, s4, s5;

      var key    = peg$currPos * 157 + 89,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parseconsonant();
      if (s2 !== peg$FAILED) {
        s3 = peg$parseconsonant();
        if (s3 === peg$FAILED) {
          s3 = null;
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$currPos;
          peg$silentFails++;
          s5 = peg$parsepause();
          peg$silentFails--;
          if (s5 !== peg$FAILED) {
            peg$currPos = s4;
            s4 = void 0;
          } else {
            s4 = peg$FAILED;
          }
          if (s4 !== peg$FAILED) {
            s2 = [s2, s3, s4];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 === peg$FAILED) {
        s1 = peg$currPos;
        s2 = peg$parseconsonant();
        if (s2 !== peg$FAILED) {
          s3 = peg$parseconsonant();
          if (s3 !== peg$FAILED) {
            s4 = peg$currPos;
            peg$silentFails++;
            s5 = peg$parseglide_onset();
            peg$silentFails--;
            if (s5 !== peg$FAILED) {
              peg$currPos = s4;
              s4 = void 0;
            } else {
              s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
              s2 = [s2, s3, s4];
              s1 = s2;
            } else {
              peg$currPos = s1;
              s1 = peg$FAILED;
            }
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
        if (s1 === peg$FAILED) {
          s1 = peg$currPos;
          s2 = peg$parseconsonant();
          if (s2 !== peg$FAILED) {
            s3 = peg$currPos;
            peg$silentFails++;
            s4 = peg$parseglide_onset();
            if (s4 === peg$FAILED) {
              s4 = peg$parseconsonantal_syllable();
            }
            peg$silentFails--;
            if (s4 !== peg$FAILED) {
              peg$currPos = s3;
              s3 = void 0;
            } else {
              s3 = peg$FAILED;
            }
            if (s3 !== peg$FAILED) {
              s2 = [s2, s3];
              s1 = s2;
            } else {
              peg$currPos = s1;
              s1 = peg$FAILED;
            }
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c35(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseonset() {
      var s0, s1, s2, s3;

      var key    = peg$currPos * 157 + 90,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parseh();
      if (s1 === peg$FAILED) {
        s1 = peg$currPos;
        s2 = peg$parseconsonant();
        if (s2 === peg$FAILED) {
          s2 = null;
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$parseglide();
          if (s3 !== peg$FAILED) {
            s2 = [s2, s3];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
        if (s1 === peg$FAILED) {
          s1 = peg$parseinitial();
        }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c35(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseglide_onset() {
      var s0, s1, s2;

      var key    = peg$currPos * 157 + 91,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parseconsonant();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseglide();
        if (s2 !== peg$FAILED) {
          s1 = [s1, s2];
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsenucleus() {
      var s0, s1, s2, s3, s4;

      var key    = peg$currPos * 157 + 92,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parsevowel();
      if (s1 === peg$FAILED) {
        s1 = peg$parsediphthong();
        if (s1 === peg$FAILED) {
          s1 = peg$currPos;
          s2 = peg$parsey();
          if (s2 !== peg$FAILED) {
            s3 = peg$currPos;
            peg$silentFails++;
            s4 = peg$parsenucleus();
            peg$silentFails--;
            if (s4 === peg$FAILED) {
              s3 = void 0;
            } else {
              peg$currPos = s3;
              s3 = peg$FAILED;
            }
            if (s3 !== peg$FAILED) {
              s2 = [s2, s3];
              s1 = s2;
            } else {
              peg$currPos = s1;
              s1 = peg$FAILED;
            }
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c35(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseglide() {
      var s0, s1, s2, s3;

      var key    = peg$currPos * 157 + 93,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parsey_glide();
      if (s1 === peg$FAILED) {
        s1 = peg$parsew();
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        peg$silentFails++;
        s3 = peg$parsenucleus();
        peg$silentFails--;
        if (s3 !== peg$FAILED) {
          peg$currPos = s2;
          s2 = void 0;
        } else {
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c39(s1);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsediphthong() {
      var s0, s1, s2, s3, s4, s5, s6;

      var key    = peg$currPos * 157 + 94,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parsea();
      if (s2 === peg$FAILED) {
        s2 = peg$parsee();
        if (s2 === peg$FAILED) {
          s2 = peg$currPos;
          s3 = peg$parsei();
          if (s3 !== peg$FAILED) {
            s4 = peg$currPos;
            peg$silentFails++;
            s5 = peg$parsei();
            peg$silentFails--;
            if (s5 === peg$FAILED) {
              s4 = void 0;
            } else {
              peg$currPos = s4;
              s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
              s3 = [s3, s4];
              s2 = s3;
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
          if (s2 === peg$FAILED) {
            s2 = peg$parseo();
            if (s2 === peg$FAILED) {
              s2 = peg$currPos;
              s3 = peg$parseu();
              if (s3 !== peg$FAILED) {
                s4 = peg$currPos;
                peg$silentFails++;
                s5 = peg$parseu();
                peg$silentFails--;
                if (s5 === peg$FAILED) {
                  s4 = void 0;
                } else {
                  peg$currPos = s4;
                  s4 = peg$FAILED;
                }
                if (s4 !== peg$FAILED) {
                  s3 = [s3, s4];
                  s2 = s3;
                } else {
                  peg$currPos = s2;
                  s2 = peg$FAILED;
                }
              } else {
                peg$currPos = s2;
                s2 = peg$FAILED;
              }
            }
          }
        }
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$currPos;
        s4 = peg$parseu();
        if (s4 !== peg$FAILED) {
          s5 = peg$currPos;
          peg$silentFails++;
          s6 = peg$parsew();
          peg$silentFails--;
          if (s6 === peg$FAILED) {
            s5 = void 0;
          } else {
            peg$currPos = s5;
            s5 = peg$FAILED;
          }
          if (s5 !== peg$FAILED) {
            s4 = [s4, s5];
            s3 = s4;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
        if (s3 === peg$FAILED) {
          s3 = peg$currPos;
          s4 = peg$parsei();
          if (s4 !== peg$FAILED) {
            s5 = peg$currPos;
            peg$silentFails++;
            s6 = peg$parsey_glide();
            peg$silentFails--;
            if (s6 === peg$FAILED) {
              s5 = void 0;
            } else {
              peg$currPos = s5;
              s5 = peg$FAILED;
            }
            if (s5 !== peg$FAILED) {
              s4 = [s4, s5];
              s3 = s4;
            } else {
              peg$currPos = s3;
              s3 = peg$FAILED;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
        }
        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        peg$silentFails++;
        s3 = peg$parsenucleus();
        peg$silentFails--;
        if (s3 === peg$FAILED) {
          s2 = void 0;
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c35(s1);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsevowel() {
      var s0, s1, s2, s3;

      var key    = peg$currPos * 157 + 95,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parsea();
      if (s1 === peg$FAILED) {
        s1 = peg$parsee();
        if (s1 === peg$FAILED) {
          s1 = peg$parsei();
          if (s1 === peg$FAILED) {
            s1 = peg$parseo();
            if (s1 === peg$FAILED) {
              s1 = peg$parseu();
            }
          }
        }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        peg$silentFails++;
        s3 = peg$parsenucleus();
        peg$silentFails--;
        if (s3 === peg$FAILED) {
          s2 = void 0;
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c39(s1);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsea() {
      var s0, s1, s2;

      var key    = peg$currPos * 157 + 96,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsecomma();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsecomma();
      }
      if (s1 !== peg$FAILED) {
        if (peg$c40.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c41); }
        }
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c42();
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsee() {
      var s0, s1, s2;

      var key    = peg$currPos * 157 + 97,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsecomma();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsecomma();
      }
      if (s1 !== peg$FAILED) {
        if (peg$c43.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c44); }
        }
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c45();
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsei() {
      var s0, s1, s2;

      var key    = peg$currPos * 157 + 98,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsecomma();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsecomma();
      }
      if (s1 !== peg$FAILED) {
        if (peg$c46.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c47); }
        }
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c48();
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseo() {
      var s0, s1, s2;

      var key    = peg$currPos * 157 + 99,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsecomma();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsecomma();
      }
      if (s1 !== peg$FAILED) {
        if (peg$c49.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c50); }
        }
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c51();
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseu() {
      var s0, s1, s2;

      var key    = peg$currPos * 157 + 100,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsecomma();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsecomma();
      }
      if (s1 !== peg$FAILED) {
        if (peg$c52.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c53); }
        }
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c54();
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsey_glide() {
      var s0, s1, s2, s3, s4;

      var key    = peg$currPos * 157 + 101,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsecomma();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsecomma();
      }
      if (s1 !== peg$FAILED) {
        if (peg$c55.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c56); }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parsenucleus();
          peg$silentFails--;
          if (s4 !== peg$FAILED) {
            peg$currPos = s3;
            s3 = void 0;
          } else {
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c57();
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsey() {
      var s0, s1, s2, s3, s4;

      var key    = peg$currPos * 157 + 102,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsecomma();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsecomma();
      }
      if (s1 !== peg$FAILED) {
        if (peg$c55.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c56); }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parsenucleus();
          peg$silentFails--;
          if (s4 === peg$FAILED) {
            s3 = void 0;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c58();
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsew() {
      var s0, s1, s2;

      var key    = peg$currPos * 157 + 103,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsecomma();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsecomma();
      }
      if (s1 !== peg$FAILED) {
        if (peg$c59.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c60); }
        }
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c61();
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsecluster() {
      var s0, s1, s2, s3, s4;

      var key    = peg$currPos * 157 + 104,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parseconsonant();
      if (s2 !== peg$FAILED) {
        s3 = [];
        s4 = peg$parseconsonant();
        if (s4 !== peg$FAILED) {
          while (s4 !== peg$FAILED) {
            s3.push(s4);
            s4 = peg$parseconsonant();
          }
        } else {
          s3 = peg$FAILED;
        }
        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c35(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseinitial() {
      var s0, s1, s2, s3, s4;

      var key    = peg$currPos * 157 + 105,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parseconsonant();
      if (s2 === peg$FAILED) {
        s2 = null;
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parseconsonant();
        if (s3 === peg$FAILED) {
          s3 = null;
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parseconsonant();
          if (s4 === peg$FAILED) {
            s4 = null;
          }
          if (s4 !== peg$FAILED) {
            s2 = [s2, s3, s4];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        peg$silentFails++;
        s3 = peg$parseconsonant();
        peg$silentFails--;
        if (s3 === peg$FAILED) {
          s2 = void 0;
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parseglide();
          peg$silentFails--;
          if (s4 === peg$FAILED) {
            s3 = void 0;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c35(s1);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseinitial_pair() {
      var s0, s1, s2, s3, s4;

      var key    = peg$currPos * 157 + 106,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parseconsonant();
      if (s2 !== peg$FAILED) {
        s3 = peg$parseconsonant();
        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        peg$silentFails++;
        s3 = peg$parseconsonant();
        peg$silentFails--;
        if (s3 === peg$FAILED) {
          s2 = void 0;
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parseglide();
          peg$silentFails--;
          if (s4 === peg$FAILED) {
            s3 = void 0;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c35(s1);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseaffricate() {
      var s0, s1, s2, s3;

      var key    = peg$currPos * 157 + 107,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parset();
      if (s2 !== peg$FAILED) {
        s3 = peg$parsec();
        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 === peg$FAILED) {
        s1 = peg$currPos;
        s2 = peg$parset();
        if (s2 !== peg$FAILED) {
          s3 = peg$parses();
          if (s3 !== peg$FAILED) {
            s2 = [s2, s3];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
        if (s1 === peg$FAILED) {
          s1 = peg$currPos;
          s2 = peg$parsed();
          if (s2 !== peg$FAILED) {
            s3 = peg$parsej();
            if (s3 !== peg$FAILED) {
              s2 = [s2, s3];
              s1 = s2;
            } else {
              peg$currPos = s1;
              s1 = peg$FAILED;
            }
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
          if (s1 === peg$FAILED) {
            s1 = peg$currPos;
            s2 = peg$parsed();
            if (s2 !== peg$FAILED) {
              s3 = peg$parsez();
              if (s3 !== peg$FAILED) {
                s2 = [s2, s3];
                s1 = s2;
              } else {
                peg$currPos = s1;
                s1 = peg$FAILED;
              }
            } else {
              peg$currPos = s1;
              s1 = peg$FAILED;
            }
          }
        }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c35(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseliquid() {
      var s0, s1;

      var key    = peg$currPos * 157 + 108,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parsel();
      if (s1 === peg$FAILED) {
        s1 = peg$parser();
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c35(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsesibilant() {
      var s0, s1, s2, s3, s4, s5;

      var key    = peg$currPos * 157 + 109,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parsec();
      if (s1 === peg$FAILED) {
        s1 = peg$currPos;
        s2 = peg$parses();
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parsex();
          peg$silentFails--;
          if (s4 === peg$FAILED) {
            s3 = void 0;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            s2 = [s2, s3];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
        if (s1 === peg$FAILED) {
          s1 = peg$currPos;
          s2 = peg$parsej();
          if (s2 === peg$FAILED) {
            s2 = peg$parsez();
          }
          if (s2 !== peg$FAILED) {
            s3 = peg$currPos;
            peg$silentFails++;
            s4 = peg$parsen();
            peg$silentFails--;
            if (s4 === peg$FAILED) {
              s3 = void 0;
            } else {
              peg$currPos = s3;
              s3 = peg$FAILED;
            }
            if (s3 !== peg$FAILED) {
              s4 = peg$currPos;
              peg$silentFails++;
              s5 = peg$parseliquid();
              peg$silentFails--;
              if (s5 === peg$FAILED) {
                s4 = void 0;
              } else {
                peg$currPos = s4;
                s4 = peg$FAILED;
              }
              if (s4 !== peg$FAILED) {
                s2 = [s2, s3, s4];
                s1 = s2;
              } else {
                peg$currPos = s1;
                s1 = peg$FAILED;
              }
            } else {
              peg$currPos = s1;
              s1 = peg$FAILED;
            }
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c62(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseconsonant() {
      var s0, s1;

      var key    = peg$currPos * 157 + 110,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parsevoiced();
      if (s1 === peg$FAILED) {
        s1 = peg$parseunvoiced();
        if (s1 === peg$FAILED) {
          s1 = peg$parsesyllabic();
        }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c39(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsesyllabic() {
      var s0, s1;

      var key    = peg$currPos * 157 + 111,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parsel();
      if (s1 === peg$FAILED) {
        s1 = peg$parsem();
        if (s1 === peg$FAILED) {
          s1 = peg$parsen();
          if (s1 === peg$FAILED) {
            s1 = peg$parser();
            if (s1 === peg$FAILED) {
              s1 = peg$parseq();
            }
          }
        }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c39(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsevoiced() {
      var s0, s1;

      var key    = peg$currPos * 157 + 112,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parseb();
      if (s1 === peg$FAILED) {
        s1 = peg$parsed();
        if (s1 === peg$FAILED) {
          s1 = peg$parseg();
          if (s1 === peg$FAILED) {
            s1 = peg$parsej();
            if (s1 === peg$FAILED) {
              s1 = peg$parsev();
              if (s1 === peg$FAILED) {
                s1 = peg$parsez();
              }
            }
          }
        }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c39(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseunvoiced() {
      var s0, s1;

      var key    = peg$currPos * 157 + 113,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parsec();
      if (s1 === peg$FAILED) {
        s1 = peg$parsef();
        if (s1 === peg$FAILED) {
          s1 = peg$parsek();
          if (s1 === peg$FAILED) {
            s1 = peg$parsep();
            if (s1 === peg$FAILED) {
              s1 = peg$parses();
              if (s1 === peg$FAILED) {
                s1 = peg$parset();
                if (s1 === peg$FAILED) {
                  s1 = peg$parsex();
                }
              }
            }
          }
        }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c39(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsel() {
      var s0, s1, s2, s3, s4, s5, s6;

      var key    = peg$currPos * 157 + 114,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsecomma();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsecomma();
      }
      if (s1 !== peg$FAILED) {
        if (peg$c63.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c64); }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parseh();
          peg$silentFails--;
          if (s4 === peg$FAILED) {
            s3 = void 0;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$currPos;
            peg$silentFails++;
            s5 = peg$parsel();
            peg$silentFails--;
            if (s5 === peg$FAILED) {
              s4 = void 0;
            } else {
              peg$currPos = s4;
              s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$currPos;
              peg$silentFails++;
              s6 = peg$parseaffricate();
              peg$silentFails--;
              if (s6 === peg$FAILED) {
                s5 = void 0;
              } else {
                peg$currPos = s5;
                s5 = peg$FAILED;
              }
              if (s5 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c65();
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsem() {
      var s0, s1, s2, s3, s4, s5, s6;

      var key    = peg$currPos * 157 + 115,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsecomma();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsecomma();
      }
      if (s1 !== peg$FAILED) {
        if (peg$c66.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c67); }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parseh();
          peg$silentFails--;
          if (s4 === peg$FAILED) {
            s3 = void 0;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$currPos;
            peg$silentFails++;
            s5 = peg$parsem();
            peg$silentFails--;
            if (s5 === peg$FAILED) {
              s4 = void 0;
            } else {
              peg$currPos = s4;
              s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$currPos;
              peg$silentFails++;
              s6 = peg$parset();
              peg$silentFails--;
              if (s6 === peg$FAILED) {
                s5 = void 0;
              } else {
                peg$currPos = s5;
                s5 = peg$FAILED;
              }
              if (s5 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c68();
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsen() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;

      var key    = peg$currPos * 157 + 116,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsecomma();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsecomma();
      }
      if (s1 !== peg$FAILED) {
        if (peg$c69.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c70); }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parseh();
          peg$silentFails--;
          if (s4 === peg$FAILED) {
            s3 = void 0;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$currPos;
            peg$silentFails++;
            s5 = peg$parsen();
            peg$silentFails--;
            if (s5 === peg$FAILED) {
              s4 = void 0;
            } else {
              peg$currPos = s4;
              s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$currPos;
              peg$silentFails++;
              s6 = peg$parseaffricate();
              peg$silentFails--;
              if (s6 === peg$FAILED) {
                s5 = void 0;
              } else {
                peg$currPos = s5;
                s5 = peg$FAILED;
              }
              if (s5 !== peg$FAILED) {
                s6 = peg$currPos;
                peg$silentFails++;
                s7 = peg$parsep();
                peg$silentFails--;
                if (s7 === peg$FAILED) {
                  s6 = void 0;
                } else {
                  peg$currPos = s6;
                  s6 = peg$FAILED;
                }
                if (s6 !== peg$FAILED) {
                  s7 = peg$currPos;
                  peg$silentFails++;
                  s8 = peg$parseb();
                  peg$silentFails--;
                  if (s8 === peg$FAILED) {
                    s7 = void 0;
                  } else {
                    peg$currPos = s7;
                    s7 = peg$FAILED;
                  }
                  if (s7 !== peg$FAILED) {
                    peg$savedPos = s0;
                    s1 = peg$c71();
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parser() {
      var s0, s1, s2, s3, s4, s5;

      var key    = peg$currPos * 157 + 117,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsecomma();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsecomma();
      }
      if (s1 !== peg$FAILED) {
        if (peg$c72.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c73); }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parseh();
          peg$silentFails--;
          if (s4 === peg$FAILED) {
            s3 = void 0;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$currPos;
            peg$silentFails++;
            s5 = peg$parser();
            peg$silentFails--;
            if (s5 === peg$FAILED) {
              s4 = void 0;
            } else {
              peg$currPos = s4;
              s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c74();
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseq() {
      var s0, s1, s2, s3, s4, s5;

      var key    = peg$currPos * 157 + 118,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsecomma();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsecomma();
      }
      if (s1 !== peg$FAILED) {
        if (peg$c75.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c76); }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parseh();
          peg$silentFails--;
          if (s4 === peg$FAILED) {
            s3 = void 0;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$currPos;
            peg$silentFails++;
            s5 = peg$parseq();
            peg$silentFails--;
            if (s5 === peg$FAILED) {
              s4 = void 0;
            } else {
              peg$currPos = s4;
              s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c77();
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseb() {
      var s0, s1, s2, s3, s4, s5, s6;

      var key    = peg$currPos * 157 + 119,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsecomma();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsecomma();
      }
      if (s1 !== peg$FAILED) {
        if (peg$c78.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c79); }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parseh();
          peg$silentFails--;
          if (s4 === peg$FAILED) {
            s3 = void 0;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$currPos;
            peg$silentFails++;
            s5 = peg$parseb();
            peg$silentFails--;
            if (s5 === peg$FAILED) {
              s4 = void 0;
            } else {
              peg$currPos = s4;
              s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$currPos;
              peg$silentFails++;
              s6 = peg$parseunvoiced();
              peg$silentFails--;
              if (s6 === peg$FAILED) {
                s5 = void 0;
              } else {
                peg$currPos = s5;
                s5 = peg$FAILED;
              }
              if (s5 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c80();
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsed() {
      var s0, s1, s2, s3, s4, s5, s6;

      var key    = peg$currPos * 157 + 120,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsecomma();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsecomma();
      }
      if (s1 !== peg$FAILED) {
        if (peg$c81.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c82); }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parseh();
          peg$silentFails--;
          if (s4 === peg$FAILED) {
            s3 = void 0;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$currPos;
            peg$silentFails++;
            s5 = peg$parsed();
            peg$silentFails--;
            if (s5 === peg$FAILED) {
              s4 = void 0;
            } else {
              peg$currPos = s4;
              s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$currPos;
              peg$silentFails++;
              s6 = peg$parseunvoiced();
              peg$silentFails--;
              if (s6 === peg$FAILED) {
                s5 = void 0;
              } else {
                peg$currPos = s5;
                s5 = peg$FAILED;
              }
              if (s5 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c83();
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseg() {
      var s0, s1, s2, s3, s4, s5, s6;

      var key    = peg$currPos * 157 + 121,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsecomma();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsecomma();
      }
      if (s1 !== peg$FAILED) {
        if (peg$c84.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c85); }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parseh();
          peg$silentFails--;
          if (s4 === peg$FAILED) {
            s3 = void 0;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$currPos;
            peg$silentFails++;
            s5 = peg$parseg();
            peg$silentFails--;
            if (s5 === peg$FAILED) {
              s4 = void 0;
            } else {
              peg$currPos = s4;
              s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$currPos;
              peg$silentFails++;
              s6 = peg$parseunvoiced();
              peg$silentFails--;
              if (s6 === peg$FAILED) {
                s5 = void 0;
              } else {
                peg$currPos = s5;
                s5 = peg$FAILED;
              }
              if (s5 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c86();
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsev() {
      var s0, s1, s2, s3, s4, s5, s6;

      var key    = peg$currPos * 157 + 122,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsecomma();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsecomma();
      }
      if (s1 !== peg$FAILED) {
        if (peg$c87.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c88); }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parseh();
          peg$silentFails--;
          if (s4 === peg$FAILED) {
            s3 = void 0;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$currPos;
            peg$silentFails++;
            s5 = peg$parsev();
            peg$silentFails--;
            if (s5 === peg$FAILED) {
              s4 = void 0;
            } else {
              peg$currPos = s4;
              s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$currPos;
              peg$silentFails++;
              s6 = peg$parseunvoiced();
              peg$silentFails--;
              if (s6 === peg$FAILED) {
                s5 = void 0;
              } else {
                peg$currPos = s5;
                s5 = peg$FAILED;
              }
              if (s5 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c89();
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsej() {
      var s0, s1, s2, s3, s4, s5, s6, s7;

      var key    = peg$currPos * 157 + 123,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsecomma();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsecomma();
      }
      if (s1 !== peg$FAILED) {
        if (peg$c90.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c91); }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parseh();
          peg$silentFails--;
          if (s4 === peg$FAILED) {
            s3 = void 0;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$currPos;
            peg$silentFails++;
            s5 = peg$parsej();
            peg$silentFails--;
            if (s5 === peg$FAILED) {
              s4 = void 0;
            } else {
              peg$currPos = s4;
              s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$currPos;
              peg$silentFails++;
              s6 = peg$parsez();
              peg$silentFails--;
              if (s6 === peg$FAILED) {
                s5 = void 0;
              } else {
                peg$currPos = s5;
                s5 = peg$FAILED;
              }
              if (s5 !== peg$FAILED) {
                s6 = peg$currPos;
                peg$silentFails++;
                s7 = peg$parseunvoiced();
                peg$silentFails--;
                if (s7 === peg$FAILED) {
                  s6 = void 0;
                } else {
                  peg$currPos = s6;
                  s6 = peg$FAILED;
                }
                if (s6 !== peg$FAILED) {
                  peg$savedPos = s0;
                  s1 = peg$c92();
                  s0 = s1;
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsez() {
      var s0, s1, s2, s3, s4, s5, s6, s7;

      var key    = peg$currPos * 157 + 124,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsecomma();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsecomma();
      }
      if (s1 !== peg$FAILED) {
        if (peg$c93.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c94); }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parseh();
          peg$silentFails--;
          if (s4 === peg$FAILED) {
            s3 = void 0;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$currPos;
            peg$silentFails++;
            s5 = peg$parsez();
            peg$silentFails--;
            if (s5 === peg$FAILED) {
              s4 = void 0;
            } else {
              peg$currPos = s4;
              s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$currPos;
              peg$silentFails++;
              s6 = peg$parsej();
              peg$silentFails--;
              if (s6 === peg$FAILED) {
                s5 = void 0;
              } else {
                peg$currPos = s5;
                s5 = peg$FAILED;
              }
              if (s5 !== peg$FAILED) {
                s6 = peg$currPos;
                peg$silentFails++;
                s7 = peg$parseunvoiced();
                peg$silentFails--;
                if (s7 === peg$FAILED) {
                  s6 = void 0;
                } else {
                  peg$currPos = s6;
                  s6 = peg$FAILED;
                }
                if (s6 !== peg$FAILED) {
                  peg$savedPos = s0;
                  s1 = peg$c95();
                  s0 = s1;
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parses() {
      var s0, s1, s2, s3, s4, s5, s6, s7;

      var key    = peg$currPos * 157 + 125,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsecomma();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsecomma();
      }
      if (s1 !== peg$FAILED) {
        if (peg$c96.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c97); }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parseh();
          peg$silentFails--;
          if (s4 === peg$FAILED) {
            s3 = void 0;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$currPos;
            peg$silentFails++;
            s5 = peg$parses();
            peg$silentFails--;
            if (s5 === peg$FAILED) {
              s4 = void 0;
            } else {
              peg$currPos = s4;
              s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$currPos;
              peg$silentFails++;
              s6 = peg$parsec();
              peg$silentFails--;
              if (s6 === peg$FAILED) {
                s5 = void 0;
              } else {
                peg$currPos = s5;
                s5 = peg$FAILED;
              }
              if (s5 !== peg$FAILED) {
                s6 = peg$currPos;
                peg$silentFails++;
                s7 = peg$parsevoiced();
                peg$silentFails--;
                if (s7 === peg$FAILED) {
                  s6 = void 0;
                } else {
                  peg$currPos = s6;
                  s6 = peg$FAILED;
                }
                if (s6 !== peg$FAILED) {
                  peg$savedPos = s0;
                  s1 = peg$c98();
                  s0 = s1;
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsec() {
      var s0, s1, s2, s3, s4, s5, s6, s7;

      var key    = peg$currPos * 157 + 126,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsecomma();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsecomma();
      }
      if (s1 !== peg$FAILED) {
        if (peg$c99.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c100); }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parseh();
          peg$silentFails--;
          if (s4 === peg$FAILED) {
            s3 = void 0;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$currPos;
            peg$silentFails++;
            s5 = peg$parsec();
            peg$silentFails--;
            if (s5 === peg$FAILED) {
              s4 = void 0;
            } else {
              peg$currPos = s4;
              s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$currPos;
              peg$silentFails++;
              s6 = peg$parses();
              peg$silentFails--;
              if (s6 === peg$FAILED) {
                s5 = void 0;
              } else {
                peg$currPos = s5;
                s5 = peg$FAILED;
              }
              if (s5 !== peg$FAILED) {
                s6 = peg$currPos;
                peg$silentFails++;
                s7 = peg$parsevoiced();
                peg$silentFails--;
                if (s7 === peg$FAILED) {
                  s6 = void 0;
                } else {
                  peg$currPos = s6;
                  s6 = peg$FAILED;
                }
                if (s6 !== peg$FAILED) {
                  peg$savedPos = s0;
                  s1 = peg$c101();
                  s0 = s1;
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsex() {
      var s0, s1, s2, s3, s4, s5, s6;

      var key    = peg$currPos * 157 + 127,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsecomma();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsecomma();
      }
      if (s1 !== peg$FAILED) {
        if (peg$c102.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c103); }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parseh();
          peg$silentFails--;
          if (s4 === peg$FAILED) {
            s3 = void 0;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$currPos;
            peg$silentFails++;
            s5 = peg$parsex();
            peg$silentFails--;
            if (s5 === peg$FAILED) {
              s4 = void 0;
            } else {
              peg$currPos = s4;
              s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$currPos;
              peg$silentFails++;
              s6 = peg$parsevoiced();
              peg$silentFails--;
              if (s6 === peg$FAILED) {
                s5 = void 0;
              } else {
                peg$currPos = s5;
                s5 = peg$FAILED;
              }
              if (s5 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c104();
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsek() {
      var s0, s1, s2, s3, s4, s5, s6;

      var key    = peg$currPos * 157 + 128,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsecomma();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsecomma();
      }
      if (s1 !== peg$FAILED) {
        if (peg$c105.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c106); }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parseh();
          peg$silentFails--;
          if (s4 === peg$FAILED) {
            s3 = void 0;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$currPos;
            peg$silentFails++;
            s5 = peg$parsek();
            peg$silentFails--;
            if (s5 === peg$FAILED) {
              s4 = void 0;
            } else {
              peg$currPos = s4;
              s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$currPos;
              peg$silentFails++;
              s6 = peg$parsevoiced();
              peg$silentFails--;
              if (s6 === peg$FAILED) {
                s5 = void 0;
              } else {
                peg$currPos = s5;
                s5 = peg$FAILED;
              }
              if (s5 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c107();
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsef() {
      var s0, s1, s2, s3, s4, s5, s6;

      var key    = peg$currPos * 157 + 129,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsecomma();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsecomma();
      }
      if (s1 !== peg$FAILED) {
        if (peg$c108.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c109); }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parseh();
          peg$silentFails--;
          if (s4 === peg$FAILED) {
            s3 = void 0;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$currPos;
            peg$silentFails++;
            s5 = peg$parsef();
            peg$silentFails--;
            if (s5 === peg$FAILED) {
              s4 = void 0;
            } else {
              peg$currPos = s4;
              s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$currPos;
              peg$silentFails++;
              s6 = peg$parsevoiced();
              peg$silentFails--;
              if (s6 === peg$FAILED) {
                s5 = void 0;
              } else {
                peg$currPos = s5;
                s5 = peg$FAILED;
              }
              if (s5 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c110();
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsep() {
      var s0, s1, s2, s3, s4, s5, s6, s7;

      var key    = peg$currPos * 157 + 130,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsecomma();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsecomma();
      }
      if (s1 !== peg$FAILED) {
        if (peg$c111.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c112); }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parseh();
          peg$silentFails--;
          if (s4 === peg$FAILED) {
            s3 = void 0;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$currPos;
            peg$silentFails++;
            s5 = peg$parsep();
            peg$silentFails--;
            if (s5 === peg$FAILED) {
              s4 = void 0;
            } else {
              peg$currPos = s4;
              s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$currPos;
              peg$silentFails++;
              s6 = peg$parsevoiced();
              peg$silentFails--;
              if (s6 === peg$FAILED) {
                s5 = void 0;
              } else {
                peg$currPos = s5;
                s5 = peg$FAILED;
              }
              if (s5 !== peg$FAILED) {
                s6 = peg$currPos;
                peg$silentFails++;
                s7 = peg$parsem();
                peg$silentFails--;
                if (s7 === peg$FAILED) {
                  s6 = void 0;
                } else {
                  peg$currPos = s6;
                  s6 = peg$FAILED;
                }
                if (s6 !== peg$FAILED) {
                  peg$savedPos = s0;
                  s1 = peg$c113();
                  s0 = s1;
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parset() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;

      var key    = peg$currPos * 157 + 131,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsecomma();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsecomma();
      }
      if (s1 !== peg$FAILED) {
        if (peg$c114.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c115); }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parseh();
          peg$silentFails--;
          if (s4 === peg$FAILED) {
            s3 = void 0;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$currPos;
            peg$silentFails++;
            s5 = peg$parset();
            peg$silentFails--;
            if (s5 === peg$FAILED) {
              s4 = void 0;
            } else {
              peg$currPos = s4;
              s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$currPos;
              peg$silentFails++;
              s6 = peg$parsevoiced();
              peg$silentFails--;
              if (s6 === peg$FAILED) {
                s5 = void 0;
              } else {
                peg$currPos = s5;
                s5 = peg$FAILED;
              }
              if (s5 !== peg$FAILED) {
                s6 = peg$currPos;
                peg$silentFails++;
                s7 = peg$parsem();
                peg$silentFails--;
                if (s7 === peg$FAILED) {
                  s6 = void 0;
                } else {
                  peg$currPos = s6;
                  s6 = peg$FAILED;
                }
                if (s6 !== peg$FAILED) {
                  s7 = peg$currPos;
                  peg$silentFails++;
                  s8 = peg$parsen();
                  peg$silentFails--;
                  if (s8 === peg$FAILED) {
                    s7 = void 0;
                  } else {
                    peg$currPos = s7;
                    s7 = peg$FAILED;
                  }
                  if (s7 !== peg$FAILED) {
                    s8 = peg$currPos;
                    peg$silentFails++;
                    s9 = peg$parsep();
                    peg$silentFails--;
                    if (s9 === peg$FAILED) {
                      s8 = void 0;
                    } else {
                      peg$currPos = s8;
                      s8 = peg$FAILED;
                    }
                    if (s8 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c116();
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseh() {
      var s0, s1, s2, s3, s4;

      var key    = peg$currPos * 157 + 132,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsecomma();
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsecomma();
      }
      if (s1 !== peg$FAILED) {
        if (peg$c117.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c118); }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parsenucleus();
          peg$silentFails--;
          if (s4 !== peg$FAILED) {
            peg$currPos = s3;
            s3 = void 0;
          } else {
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c119();
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsedigit() {
      var s0, s1, s2, s3, s4, s5, s6;

      var key    = peg$currPos * 157 + 133,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = [];
      s3 = peg$parsecomma();
      while (s3 !== peg$FAILED) {
        s2.push(s3);
        s3 = peg$parsecomma();
      }
      if (s2 !== peg$FAILED) {
        if (peg$c120.test(input.charAt(peg$currPos))) {
          s3 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c121); }
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$currPos;
          peg$silentFails++;
          s5 = peg$parseh();
          peg$silentFails--;
          if (s5 === peg$FAILED) {
            s4 = void 0;
          } else {
            peg$currPos = s4;
            s4 = peg$FAILED;
          }
          if (s4 !== peg$FAILED) {
            s5 = peg$currPos;
            peg$silentFails++;
            s6 = peg$parsenucleus();
            peg$silentFails--;
            if (s6 === peg$FAILED) {
              s5 = void 0;
            } else {
              peg$currPos = s5;
              s5 = peg$FAILED;
            }
            if (s5 !== peg$FAILED) {
              s2 = [s2, s3, s4, s5];
              s1 = s2;
            } else {
              peg$currPos = s1;
              s1 = peg$FAILED;
            }
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c35(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsepost_word() {
      var s0, s1, s2, s3, s4, s5;

      var key    = peg$currPos * 157 + 134,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$parsepause();
      if (s1 === peg$FAILED) {
        s1 = peg$currPos;
        s2 = peg$currPos;
        peg$silentFails++;
        s3 = peg$parsenucleus();
        peg$silentFails--;
        if (s3 === peg$FAILED) {
          s2 = void 0;
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parseslinkuhi();
          peg$silentFails--;
          if (s4 === peg$FAILED) {
            s3 = void 0;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$currPos;
            peg$silentFails++;
            s5 = peg$parsecmevla();
            peg$silentFails--;
            if (s5 === peg$FAILED) {
              s4 = void 0;
            } else {
              peg$currPos = s4;
              s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$parselojban_word();
              if (s5 !== peg$FAILED) {
                s2 = [s2, s3, s4, s5];
                s1 = s2;
              } else {
                peg$currPos = s1;
                s1 = peg$FAILED;
              }
            } else {
              peg$currPos = s1;
              s1 = peg$FAILED;
            }
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c35(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsepause() {
      var s0, s1, s2, s3, s4;

      var key    = peg$currPos * 157 + 135,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = [];
      s3 = peg$parsecomma();
      while (s3 !== peg$FAILED) {
        s2.push(s3);
        s3 = peg$parsecomma();
      }
      if (s2 !== peg$FAILED) {
        s3 = [];
        s4 = peg$parsespace_char();
        if (s4 !== peg$FAILED) {
          while (s4 !== peg$FAILED) {
            s3.push(s4);
            s4 = peg$parsespace_char();
          }
        } else {
          s3 = peg$FAILED;
        }
        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 === peg$FAILED) {
        s1 = peg$parseEOF();
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c35(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseEOF() {
      var s0, s1, s2, s3, s4;

      var key    = peg$currPos * 157 + 136,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = [];
      s3 = peg$parsecomma();
      while (s3 !== peg$FAILED) {
        s2.push(s3);
        s3 = peg$parsecomma();
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$currPos;
        peg$silentFails++;
        if (input.length > peg$currPos) {
          s4 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s4 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c9); }
        }
        peg$silentFails--;
        if (s4 === peg$FAILED) {
          s3 = void 0;
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c35(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsecomma() {
      var s0, s1;

      var key    = peg$currPos * 157 + 137,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      if (peg$c122.test(input.charAt(peg$currPos))) {
        s1 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c123); }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c124();
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsenon_lojban_word() {
      var s0, s1, s2, s3, s4;

      var key    = peg$currPos * 157 + 138,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$currPos;
      peg$silentFails++;
      s3 = peg$parselojban_word();
      peg$silentFails--;
      if (s3 === peg$FAILED) {
        s2 = void 0;
      } else {
        peg$currPos = s2;
        s2 = peg$FAILED;
      }
      if (s2 !== peg$FAILED) {
        s3 = [];
        s4 = peg$parsenon_space();
        if (s4 !== peg$FAILED) {
          while (s4 !== peg$FAILED) {
            s3.push(s4);
            s4 = peg$parsenon_space();
          }
        } else {
          s3 = peg$FAILED;
        }
        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c35(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsenon_space() {
      var s0, s1, s2, s3;

      var key    = peg$currPos * 157 + 139,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$currPos;
      peg$silentFails++;
      s3 = peg$parsespace_char();
      peg$silentFails--;
      if (s3 === peg$FAILED) {
        s2 = void 0;
      } else {
        peg$currPos = s2;
        s2 = peg$FAILED;
      }
      if (s2 !== peg$FAILED) {
        if (input.length > peg$currPos) {
          s3 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c9); }
        }
        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c35(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsespace_char() {
      var s0, s1;

      var key    = peg$currPos * 157 + 140,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      if (peg$c125.test(input.charAt(peg$currPos))) {
        s1 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c126); }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c124();
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parsespaces() {
      var s0, s1, s2, s3;

      var key    = peg$currPos * 157 + 141,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$currPos;
      peg$silentFails++;
      s3 = peg$parseY();
      peg$silentFails--;
      if (s3 === peg$FAILED) {
        s2 = void 0;
      } else {
        peg$currPos = s2;
        s2 = peg$FAILED;
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parseinitial_spaces();
        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c35(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseinitial_spaces() {
      var s0, s1, s2, s3, s4, s5;

      var key    = peg$currPos * 157 + 142,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = [];
      s3 = peg$currPos;
      s4 = [];
      s5 = peg$parsecomma();
      while (s5 !== peg$FAILED) {
        s4.push(s5);
        s5 = peg$parsecomma();
      }
      if (s4 !== peg$FAILED) {
        s5 = peg$parsespace_char();
        if (s5 !== peg$FAILED) {
          s4 = [s4, s5];
          s3 = s4;
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
      } else {
        peg$currPos = s3;
        s3 = peg$FAILED;
      }
      if (s3 === peg$FAILED) {
        s3 = peg$currPos;
        s4 = peg$currPos;
        peg$silentFails++;
        s5 = peg$parseybu();
        peg$silentFails--;
        if (s5 === peg$FAILED) {
          s4 = void 0;
        } else {
          peg$currPos = s4;
          s4 = peg$FAILED;
        }
        if (s4 !== peg$FAILED) {
          s5 = peg$parseY();
          if (s5 !== peg$FAILED) {
            s4 = [s4, s5];
            s3 = s4;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
      }
      if (s3 !== peg$FAILED) {
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$currPos;
          s4 = [];
          s5 = peg$parsecomma();
          while (s5 !== peg$FAILED) {
            s4.push(s5);
            s5 = peg$parsecomma();
          }
          if (s4 !== peg$FAILED) {
            s5 = peg$parsespace_char();
            if (s5 !== peg$FAILED) {
              s4 = [s4, s5];
              s3 = s4;
            } else {
              peg$currPos = s3;
              s3 = peg$FAILED;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
          if (s3 === peg$FAILED) {
            s3 = peg$currPos;
            s4 = peg$currPos;
            peg$silentFails++;
            s5 = peg$parseybu();
            peg$silentFails--;
            if (s5 === peg$FAILED) {
              s4 = void 0;
            } else {
              peg$currPos = s4;
              s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$parseY();
              if (s5 !== peg$FAILED) {
                s4 = [s4, s5];
                s3 = s4;
              } else {
                peg$currPos = s3;
                s3 = peg$FAILED;
              }
            } else {
              peg$currPos = s3;
              s3 = peg$FAILED;
            }
          }
        }
      } else {
        s2 = peg$FAILED;
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parseEOF();
        if (s3 === peg$FAILED) {
          s3 = null;
        }
        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 === peg$FAILED) {
        s1 = peg$parseEOF();
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c35(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseybu() {
      var s0, s1, s2, s3, s4;

      var key    = peg$currPos * 157 + 143,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parseY();
      if (s2 !== peg$FAILED) {
        s3 = [];
        s4 = peg$parsespace_char();
        while (s4 !== peg$FAILED) {
          s3.push(s4);
          s4 = peg$parsespace_char();
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parseBU();
          if (s4 !== peg$FAILED) {
            s2 = [s2, s3, s4];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c127(s1);
      }
      s0 = s1;

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseBAhE() {
      var s0, s1, s2, s3, s4, s5, s6;

      var key    = peg$currPos * 157 + 144,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      peg$silentFails++;
      s2 = peg$parsecmavo();
      peg$silentFails--;
      if (s2 !== peg$FAILED) {
        peg$currPos = s1;
        s1 = void 0;
      } else {
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        s3 = peg$parseb();
        if (s3 !== peg$FAILED) {
          s4 = peg$parsea();
          if (s4 !== peg$FAILED) {
            s5 = peg$parseh();
            if (s5 !== peg$FAILED) {
              s6 = peg$parsee();
              if (s6 !== peg$FAILED) {
                s3 = [s3, s4, s5, s6];
                s2 = s3;
              } else {
                peg$currPos = s2;
                s2 = peg$FAILED;
              }
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
        if (s2 === peg$FAILED) {
          s2 = peg$currPos;
          s3 = peg$parsez();
          if (s3 !== peg$FAILED) {
            s4 = peg$parsea();
            if (s4 !== peg$FAILED) {
              s5 = peg$parseh();
              if (s5 !== peg$FAILED) {
                s6 = peg$parsee();
                if (s6 !== peg$FAILED) {
                  s3 = [s3, s4, s5, s6];
                  s2 = s3;
                } else {
                  peg$currPos = s2;
                  s2 = peg$FAILED;
                }
              } else {
                peg$currPos = s2;
                s2 = peg$FAILED;
              }
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parsepost_word();
          peg$silentFails--;
          if (s4 !== peg$FAILED) {
            peg$currPos = s3;
            s3 = void 0;
          } else {
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c128(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseBU() {
      var s0, s1, s2, s3, s4;

      var key    = peg$currPos * 157 + 145,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      peg$silentFails++;
      s2 = peg$parsecmavo();
      peg$silentFails--;
      if (s2 !== peg$FAILED) {
        peg$currPos = s1;
        s1 = void 0;
      } else {
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        s3 = peg$parseb();
        if (s3 !== peg$FAILED) {
          s4 = peg$parseu();
          if (s4 !== peg$FAILED) {
            s3 = [s3, s4];
            s2 = s3;
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parsepost_word();
          peg$silentFails--;
          if (s4 !== peg$FAILED) {
            peg$currPos = s3;
            s3 = void 0;
          } else {
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c129(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseBY() {
      var s0, s1, s2, s3, s4, s5, s6;

      var key    = peg$currPos * 157 + 146,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      peg$silentFails++;
      s2 = peg$parsecmavo();
      peg$silentFails--;
      if (s2 !== peg$FAILED) {
        peg$currPos = s1;
        s1 = void 0;
      } else {
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parseybu();
        if (s2 === peg$FAILED) {
          s2 = peg$currPos;
          s3 = peg$parsej();
          if (s3 !== peg$FAILED) {
            s4 = peg$parseo();
            if (s4 !== peg$FAILED) {
              s5 = peg$parseh();
              if (s5 !== peg$FAILED) {
                s6 = peg$parseo();
                if (s6 !== peg$FAILED) {
                  s3 = [s3, s4, s5, s6];
                  s2 = s3;
                } else {
                  peg$currPos = s2;
                  s2 = peg$FAILED;
                }
              } else {
                peg$currPos = s2;
                s2 = peg$FAILED;
              }
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
          if (s2 === peg$FAILED) {
            s2 = peg$currPos;
            s3 = peg$parser();
            if (s3 !== peg$FAILED) {
              s4 = peg$parseu();
              if (s4 !== peg$FAILED) {
                s5 = peg$parseh();
                if (s5 !== peg$FAILED) {
                  s6 = peg$parseo();
                  if (s6 !== peg$FAILED) {
                    s3 = [s3, s4, s5, s6];
                    s2 = s3;
                  } else {
                    peg$currPos = s2;
                    s2 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s2;
                  s2 = peg$FAILED;
                }
              } else {
                peg$currPos = s2;
                s2 = peg$FAILED;
              }
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
            if (s2 === peg$FAILED) {
              s2 = peg$currPos;
              s3 = peg$parseg();
              if (s3 !== peg$FAILED) {
                s4 = peg$parsee();
                if (s4 !== peg$FAILED) {
                  s5 = peg$parseh();
                  if (s5 !== peg$FAILED) {
                    s6 = peg$parseo();
                    if (s6 !== peg$FAILED) {
                      s3 = [s3, s4, s5, s6];
                      s2 = s3;
                    } else {
                      peg$currPos = s2;
                      s2 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s2;
                    s2 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s2;
                  s2 = peg$FAILED;
                }
              } else {
                peg$currPos = s2;
                s2 = peg$FAILED;
              }
              if (s2 === peg$FAILED) {
                s2 = peg$currPos;
                s3 = peg$parsej();
                if (s3 !== peg$FAILED) {
                  s4 = peg$parsee();
                  if (s4 !== peg$FAILED) {
                    s5 = peg$parseh();
                    if (s5 !== peg$FAILED) {
                      s6 = peg$parseo();
                      if (s6 !== peg$FAILED) {
                        s3 = [s3, s4, s5, s6];
                        s2 = s3;
                      } else {
                        peg$currPos = s2;
                        s2 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s2;
                      s2 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s2;
                    s2 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s2;
                  s2 = peg$FAILED;
                }
                if (s2 === peg$FAILED) {
                  s2 = peg$currPos;
                  s3 = peg$parsel();
                  if (s3 !== peg$FAILED) {
                    s4 = peg$parseo();
                    if (s4 !== peg$FAILED) {
                      s5 = peg$parseh();
                      if (s5 !== peg$FAILED) {
                        s6 = peg$parsea();
                        if (s6 !== peg$FAILED) {
                          s3 = [s3, s4, s5, s6];
                          s2 = s3;
                        } else {
                          peg$currPos = s2;
                          s2 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s2;
                        s2 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s2;
                      s2 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s2;
                    s2 = peg$FAILED;
                  }
                  if (s2 === peg$FAILED) {
                    s2 = peg$currPos;
                    s3 = peg$parsen();
                    if (s3 !== peg$FAILED) {
                      s4 = peg$parsea();
                      if (s4 !== peg$FAILED) {
                        s5 = peg$parseh();
                        if (s5 !== peg$FAILED) {
                          s6 = peg$parsea();
                          if (s6 !== peg$FAILED) {
                            s3 = [s3, s4, s5, s6];
                            s2 = s3;
                          } else {
                            peg$currPos = s2;
                            s2 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s2;
                          s2 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s2;
                        s2 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s2;
                      s2 = peg$FAILED;
                    }
                    if (s2 === peg$FAILED) {
                      s2 = peg$currPos;
                      s3 = peg$parses();
                      if (s3 !== peg$FAILED) {
                        s4 = peg$parsee();
                        if (s4 !== peg$FAILED) {
                          s5 = peg$parseh();
                          if (s5 !== peg$FAILED) {
                            s6 = peg$parsee();
                            if (s6 !== peg$FAILED) {
                              s3 = [s3, s4, s5, s6];
                              s2 = s3;
                            } else {
                              peg$currPos = s2;
                              s2 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s2;
                            s2 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s2;
                          s2 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s2;
                        s2 = peg$FAILED;
                      }
                      if (s2 === peg$FAILED) {
                        s2 = peg$currPos;
                        s3 = peg$parset();
                        if (s3 !== peg$FAILED) {
                          s4 = peg$parseo();
                          if (s4 !== peg$FAILED) {
                            s5 = peg$parseh();
                            if (s5 !== peg$FAILED) {
                              s6 = peg$parsea();
                              if (s6 !== peg$FAILED) {
                                s3 = [s3, s4, s5, s6];
                                s2 = s3;
                              } else {
                                peg$currPos = s2;
                                s2 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s2;
                              s2 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s2;
                            s2 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s2;
                          s2 = peg$FAILED;
                        }
                        if (s2 === peg$FAILED) {
                          s2 = peg$currPos;
                          s3 = peg$parseg();
                          if (s3 !== peg$FAILED) {
                            s4 = peg$parsea();
                            if (s4 !== peg$FAILED) {
                              s5 = peg$parseh();
                              if (s5 !== peg$FAILED) {
                                s6 = peg$parsee();
                                if (s6 !== peg$FAILED) {
                                  s3 = [s3, s4, s5, s6];
                                  s2 = s3;
                                } else {
                                  peg$currPos = s2;
                                  s2 = peg$FAILED;
                                }
                              } else {
                                peg$currPos = s2;
                                s2 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s2;
                              s2 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s2;
                            s2 = peg$FAILED;
                          }
                          if (s2 === peg$FAILED) {
                            s2 = peg$currPos;
                            s3 = peg$parsey();
                            if (s3 !== peg$FAILED) {
                              s4 = peg$parseh();
                              if (s4 !== peg$FAILED) {
                                s5 = peg$parsey();
                                if (s5 !== peg$FAILED) {
                                  s3 = [s3, s4, s5];
                                  s2 = s3;
                                } else {
                                  peg$currPos = s2;
                                  s2 = peg$FAILED;
                                }
                              } else {
                                peg$currPos = s2;
                                s2 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s2;
                              s2 = peg$FAILED;
                            }
                            if (s2 === peg$FAILED) {
                              s2 = peg$currPos;
                              s3 = peg$parseb();
                              if (s3 !== peg$FAILED) {
                                s4 = peg$parsey();
                                if (s4 !== peg$FAILED) {
                                  s3 = [s3, s4];
                                  s2 = s3;
                                } else {
                                  peg$currPos = s2;
                                  s2 = peg$FAILED;
                                }
                              } else {
                                peg$currPos = s2;
                                s2 = peg$FAILED;
                              }
                              if (s2 === peg$FAILED) {
                                s2 = peg$currPos;
                                s3 = peg$parsec();
                                if (s3 !== peg$FAILED) {
                                  s4 = peg$parsey();
                                  if (s4 !== peg$FAILED) {
                                    s3 = [s3, s4];
                                    s2 = s3;
                                  } else {
                                    peg$currPos = s2;
                                    s2 = peg$FAILED;
                                  }
                                } else {
                                  peg$currPos = s2;
                                  s2 = peg$FAILED;
                                }
                                if (s2 === peg$FAILED) {
                                  s2 = peg$currPos;
                                  s3 = peg$parsed();
                                  if (s3 !== peg$FAILED) {
                                    s4 = peg$parsey();
                                    if (s4 !== peg$FAILED) {
                                      s3 = [s3, s4];
                                      s2 = s3;
                                    } else {
                                      peg$currPos = s2;
                                      s2 = peg$FAILED;
                                    }
                                  } else {
                                    peg$currPos = s2;
                                    s2 = peg$FAILED;
                                  }
                                  if (s2 === peg$FAILED) {
                                    s2 = peg$currPos;
                                    s3 = peg$parsef();
                                    if (s3 !== peg$FAILED) {
                                      s4 = peg$parsey();
                                      if (s4 !== peg$FAILED) {
                                        s3 = [s3, s4];
                                        s2 = s3;
                                      } else {
                                        peg$currPos = s2;
                                        s2 = peg$FAILED;
                                      }
                                    } else {
                                      peg$currPos = s2;
                                      s2 = peg$FAILED;
                                    }
                                    if (s2 === peg$FAILED) {
                                      s2 = peg$currPos;
                                      s3 = peg$parseg();
                                      if (s3 !== peg$FAILED) {
                                        s4 = peg$parsey();
                                        if (s4 !== peg$FAILED) {
                                          s3 = [s3, s4];
                                          s2 = s3;
                                        } else {
                                          peg$currPos = s2;
                                          s2 = peg$FAILED;
                                        }
                                      } else {
                                        peg$currPos = s2;
                                        s2 = peg$FAILED;
                                      }
                                      if (s2 === peg$FAILED) {
                                        s2 = peg$currPos;
                                        s3 = peg$parsej();
                                        if (s3 !== peg$FAILED) {
                                          s4 = peg$parsey();
                                          if (s4 !== peg$FAILED) {
                                            s3 = [s3, s4];
                                            s2 = s3;
                                          } else {
                                            peg$currPos = s2;
                                            s2 = peg$FAILED;
                                          }
                                        } else {
                                          peg$currPos = s2;
                                          s2 = peg$FAILED;
                                        }
                                        if (s2 === peg$FAILED) {
                                          s2 = peg$currPos;
                                          s3 = peg$parsek();
                                          if (s3 !== peg$FAILED) {
                                            s4 = peg$parsey();
                                            if (s4 !== peg$FAILED) {
                                              s3 = [s3, s4];
                                              s2 = s3;
                                            } else {
                                              peg$currPos = s2;
                                              s2 = peg$FAILED;
                                            }
                                          } else {
                                            peg$currPos = s2;
                                            s2 = peg$FAILED;
                                          }
                                          if (s2 === peg$FAILED) {
                                            s2 = peg$currPos;
                                            s3 = peg$parsel();
                                            if (s3 !== peg$FAILED) {
                                              s4 = peg$parsey();
                                              if (s4 !== peg$FAILED) {
                                                s3 = [s3, s4];
                                                s2 = s3;
                                              } else {
                                                peg$currPos = s2;
                                                s2 = peg$FAILED;
                                              }
                                            } else {
                                              peg$currPos = s2;
                                              s2 = peg$FAILED;
                                            }
                                            if (s2 === peg$FAILED) {
                                              s2 = peg$currPos;
                                              s3 = peg$parsem();
                                              if (s3 !== peg$FAILED) {
                                                s4 = peg$parsey();
                                                if (s4 !== peg$FAILED) {
                                                  s3 = [s3, s4];
                                                  s2 = s3;
                                                } else {
                                                  peg$currPos = s2;
                                                  s2 = peg$FAILED;
                                                }
                                              } else {
                                                peg$currPos = s2;
                                                s2 = peg$FAILED;
                                              }
                                              if (s2 === peg$FAILED) {
                                                s2 = peg$currPos;
                                                s3 = peg$parsen();
                                                if (s3 !== peg$FAILED) {
                                                  s4 = peg$parsey();
                                                  if (s4 !== peg$FAILED) {
                                                    s3 = [s3, s4];
                                                    s2 = s3;
                                                  } else {
                                                    peg$currPos = s2;
                                                    s2 = peg$FAILED;
                                                  }
                                                } else {
                                                  peg$currPos = s2;
                                                  s2 = peg$FAILED;
                                                }
                                                if (s2 === peg$FAILED) {
                                                  s2 = peg$currPos;
                                                  s3 = peg$parsep();
                                                  if (s3 !== peg$FAILED) {
                                                    s4 = peg$parsey();
                                                    if (s4 !== peg$FAILED) {
                                                      s3 = [s3, s4];
                                                      s2 = s3;
                                                    } else {
                                                      peg$currPos = s2;
                                                      s2 = peg$FAILED;
                                                    }
                                                  } else {
                                                    peg$currPos = s2;
                                                    s2 = peg$FAILED;
                                                  }
                                                  if (s2 === peg$FAILED) {
                                                    s2 = peg$currPos;
                                                    s3 = peg$parser();
                                                    if (s3 !== peg$FAILED) {
                                                      s4 = peg$parsey();
                                                      if (s4 !== peg$FAILED) {
                                                        s3 = [s3, s4];
                                                        s2 = s3;
                                                      } else {
                                                        peg$currPos = s2;
                                                        s2 = peg$FAILED;
                                                      }
                                                    } else {
                                                      peg$currPos = s2;
                                                      s2 = peg$FAILED;
                                                    }
                                                    if (s2 === peg$FAILED) {
                                                      s2 = peg$currPos;
                                                      s3 = peg$parses();
                                                      if (s3 !== peg$FAILED) {
                                                        s4 = peg$parsey();
                                                        if (s4 !== peg$FAILED) {
                                                          s3 = [s3, s4];
                                                          s2 = s3;
                                                        } else {
                                                          peg$currPos = s2;
                                                          s2 = peg$FAILED;
                                                        }
                                                      } else {
                                                        peg$currPos = s2;
                                                        s2 = peg$FAILED;
                                                      }
                                                      if (s2 === peg$FAILED) {
                                                        s2 = peg$currPos;
                                                        s3 = peg$parset();
                                                        if (s3 !== peg$FAILED) {
                                                          s4 = peg$parsey();
                                                          if (s4 !== peg$FAILED) {
                                                            s3 = [s3, s4];
                                                            s2 = s3;
                                                          } else {
                                                            peg$currPos = s2;
                                                            s2 = peg$FAILED;
                                                          }
                                                        } else {
                                                          peg$currPos = s2;
                                                          s2 = peg$FAILED;
                                                        }
                                                        if (s2 === peg$FAILED) {
                                                          s2 = peg$currPos;
                                                          s3 = peg$parsev();
                                                          if (s3 !== peg$FAILED) {
                                                            s4 = peg$parsey();
                                                            if (s4 !== peg$FAILED) {
                                                              s3 = [s3, s4];
                                                              s2 = s3;
                                                            } else {
                                                              peg$currPos = s2;
                                                              s2 = peg$FAILED;
                                                            }
                                                          } else {
                                                            peg$currPos = s2;
                                                            s2 = peg$FAILED;
                                                          }
                                                          if (s2 === peg$FAILED) {
                                                            s2 = peg$currPos;
                                                            s3 = peg$parsex();
                                                            if (s3 !== peg$FAILED) {
                                                              s4 = peg$parsey();
                                                              if (s4 !== peg$FAILED) {
                                                                s3 = [s3, s4];
                                                                s2 = s3;
                                                              } else {
                                                                peg$currPos = s2;
                                                                s2 = peg$FAILED;
                                                              }
                                                            } else {
                                                              peg$currPos = s2;
                                                              s2 = peg$FAILED;
                                                            }
                                                            if (s2 === peg$FAILED) {
                                                              s2 = peg$currPos;
                                                              s3 = peg$parsez();
                                                              if (s3 !== peg$FAILED) {
                                                                s4 = peg$parsey();
                                                                if (s4 !== peg$FAILED) {
                                                                  s3 = [s3, s4];
                                                                  s2 = s3;
                                                                } else {
                                                                  peg$currPos = s2;
                                                                  s2 = peg$FAILED;
                                                                }
                                                              } else {
                                                                peg$currPos = s2;
                                                                s2 = peg$FAILED;
                                                              }
                                                              if (s2 === peg$FAILED) {
                                                                s2 = peg$currPos;
                                                                s3 = peg$parseu();
                                                                if (s3 !== peg$FAILED) {
                                                                  s4 = peg$parsey();
                                                                  if (s4 !== peg$FAILED) {
                                                                    s3 = [s3, s4];
                                                                    s2 = s3;
                                                                  } else {
                                                                    peg$currPos = s2;
                                                                    s2 = peg$FAILED;
                                                                  }
                                                                } else {
                                                                  peg$currPos = s2;
                                                                  s2 = peg$FAILED;
                                                                }
                                                                if (s2 === peg$FAILED) {
                                                                  s2 = peg$currPos;
                                                                  s3 = peg$parsei();
                                                                  if (s3 !== peg$FAILED) {
                                                                    s4 = peg$parsey();
                                                                    if (s4 !== peg$FAILED) {
                                                                      s3 = [s3, s4];
                                                                      s2 = s3;
                                                                    } else {
                                                                      peg$currPos = s2;
                                                                      s2 = peg$FAILED;
                                                                    }
                                                                  } else {
                                                                    peg$currPos = s2;
                                                                    s2 = peg$FAILED;
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parsepost_word();
          peg$silentFails--;
          if (s4 !== peg$FAILED) {
            peg$currPos = s3;
            s3 = void 0;
          } else {
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c130(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseLEhU() {
      var s0, s1, s2, s3, s4, s5, s6;

      var key    = peg$currPos * 157 + 147,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      peg$silentFails++;
      s2 = peg$parsecmavo();
      peg$silentFails--;
      if (s2 !== peg$FAILED) {
        peg$currPos = s1;
        s1 = void 0;
      } else {
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        s3 = peg$parsel();
        if (s3 !== peg$FAILED) {
          s4 = peg$parsee();
          if (s4 !== peg$FAILED) {
            s5 = peg$parseh();
            if (s5 !== peg$FAILED) {
              s6 = peg$parseu();
              if (s6 !== peg$FAILED) {
                s3 = [s3, s4, s5, s6];
                s2 = s3;
              } else {
                peg$currPos = s2;
                s2 = peg$FAILED;
              }
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parsepost_word();
          peg$silentFails--;
          if (s4 !== peg$FAILED) {
            peg$currPos = s3;
            s3 = void 0;
          } else {
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c131(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseLOhU() {
      var s0, s1, s2, s3, s4, s5, s6;

      var key    = peg$currPos * 157 + 148,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      peg$silentFails++;
      s2 = peg$parsecmavo();
      peg$silentFails--;
      if (s2 !== peg$FAILED) {
        peg$currPos = s1;
        s1 = void 0;
      } else {
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        s3 = peg$parsel();
        if (s3 !== peg$FAILED) {
          s4 = peg$parseo();
          if (s4 !== peg$FAILED) {
            s5 = peg$parseh();
            if (s5 !== peg$FAILED) {
              s6 = peg$parseu();
              if (s6 !== peg$FAILED) {
                s3 = [s3, s4, s5, s6];
                s2 = s3;
              } else {
                peg$currPos = s2;
                s2 = peg$FAILED;
              }
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parsepost_word();
          peg$silentFails--;
          if (s4 !== peg$FAILED) {
            peg$currPos = s3;
            s3 = void 0;
          } else {
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c132(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseSA() {
      var s0, s1, s2, s3, s4;

      var key    = peg$currPos * 157 + 149,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      peg$silentFails++;
      s2 = peg$parsecmavo();
      peg$silentFails--;
      if (s2 !== peg$FAILED) {
        peg$currPos = s1;
        s1 = void 0;
      } else {
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        s3 = peg$parses();
        if (s3 !== peg$FAILED) {
          s4 = peg$parsea();
          if (s4 !== peg$FAILED) {
            s3 = [s3, s4];
            s2 = s3;
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parsepost_word();
          peg$silentFails--;
          if (s4 !== peg$FAILED) {
            peg$currPos = s3;
            s3 = void 0;
          } else {
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c133(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseSI() {
      var s0, s1, s2, s3, s4;

      var key    = peg$currPos * 157 + 150,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      peg$silentFails++;
      s2 = peg$parsecmavo();
      peg$silentFails--;
      if (s2 !== peg$FAILED) {
        peg$currPos = s1;
        s1 = void 0;
      } else {
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        s3 = peg$parses();
        if (s3 !== peg$FAILED) {
          s4 = peg$parsei();
          if (s4 !== peg$FAILED) {
            s3 = [s3, s4];
            s2 = s3;
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parsepost_word();
          peg$silentFails--;
          if (s4 !== peg$FAILED) {
            peg$currPos = s3;
            s3 = void 0;
          } else {
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c134(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseSU() {
      var s0, s1, s2, s3, s4;

      var key    = peg$currPos * 157 + 151,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      peg$silentFails++;
      s2 = peg$parsecmavo();
      peg$silentFails--;
      if (s2 !== peg$FAILED) {
        peg$currPos = s1;
        s1 = void 0;
      } else {
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        s3 = peg$parses();
        if (s3 !== peg$FAILED) {
          s4 = peg$parseu();
          if (s4 !== peg$FAILED) {
            s3 = [s3, s4];
            s2 = s3;
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parsepost_word();
          peg$silentFails--;
          if (s4 !== peg$FAILED) {
            peg$currPos = s3;
            s3 = void 0;
          } else {
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c135(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseUI() {
      var s0, s1, s2, s3, s4, s5, s6, s7;

      var key    = peg$currPos * 157 + 152,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      peg$silentFails++;
      s2 = peg$parsecmavo();
      peg$silentFails--;
      if (s2 !== peg$FAILED) {
        peg$currPos = s1;
        s1 = void 0;
      } else {
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        s3 = peg$parsek();
        if (s3 !== peg$FAILED) {
          s4 = peg$parseo();
          if (s4 !== peg$FAILED) {
            s5 = peg$parseh();
            if (s5 !== peg$FAILED) {
              s6 = peg$parseo();
              if (s6 !== peg$FAILED) {
                s7 = peg$parsei();
                if (s7 !== peg$FAILED) {
                  s3 = [s3, s4, s5, s6, s7];
                  s2 = s3;
                } else {
                  peg$currPos = s2;
                  s2 = peg$FAILED;
                }
              } else {
                peg$currPos = s2;
                s2 = peg$FAILED;
              }
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
        if (s2 === peg$FAILED) {
          s2 = peg$currPos;
          s3 = peg$parses();
          if (s3 !== peg$FAILED) {
            s4 = peg$parsei();
            if (s4 !== peg$FAILED) {
              s5 = peg$parseh();
              if (s5 !== peg$FAILED) {
                s6 = peg$parsea();
                if (s6 !== peg$FAILED) {
                  s7 = peg$parseu();
                  if (s7 !== peg$FAILED) {
                    s3 = [s3, s4, s5, s6, s7];
                    s2 = s3;
                  } else {
                    peg$currPos = s2;
                    s2 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s2;
                  s2 = peg$FAILED;
                }
              } else {
                peg$currPos = s2;
                s2 = peg$FAILED;
              }
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
          if (s2 === peg$FAILED) {
            s2 = peg$currPos;
            s3 = peg$parseo();
            if (s3 !== peg$FAILED) {
              s4 = peg$parseh();
              if (s4 !== peg$FAILED) {
                s5 = peg$parsea();
                if (s5 !== peg$FAILED) {
                  s6 = peg$parsei();
                  if (s6 !== peg$FAILED) {
                    s3 = [s3, s4, s5, s6];
                    s2 = s3;
                  } else {
                    peg$currPos = s2;
                    s2 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s2;
                  s2 = peg$FAILED;
                }
              } else {
                peg$currPos = s2;
                s2 = peg$FAILED;
              }
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
            if (s2 === peg$FAILED) {
              s2 = peg$currPos;
              s3 = peg$parsex();
              if (s3 !== peg$FAILED) {
                s4 = peg$parsee();
                if (s4 !== peg$FAILED) {
                  s5 = peg$parseh();
                  if (s5 !== peg$FAILED) {
                    s6 = peg$parsee();
                    if (s6 !== peg$FAILED) {
                      s3 = [s3, s4, s5, s6];
                      s2 = s3;
                    } else {
                      peg$currPos = s2;
                      s2 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s2;
                    s2 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s2;
                  s2 = peg$FAILED;
                }
              } else {
                peg$currPos = s2;
                s2 = peg$FAILED;
              }
              if (s2 === peg$FAILED) {
                s2 = peg$currPos;
                s3 = peg$parsex();
                if (s3 !== peg$FAILED) {
                  s4 = peg$parseo();
                  if (s4 !== peg$FAILED) {
                    s5 = peg$parseh();
                    if (s5 !== peg$FAILED) {
                      s6 = peg$parseo();
                      if (s6 !== peg$FAILED) {
                        s3 = [s3, s4, s5, s6];
                        s2 = s3;
                      } else {
                        peg$currPos = s2;
                        s2 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s2;
                      s2 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s2;
                    s2 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s2;
                  s2 = peg$FAILED;
                }
                if (s2 === peg$FAILED) {
                  s2 = peg$currPos;
                  s3 = peg$parsei();
                  if (s3 !== peg$FAILED) {
                    s4 = peg$parseh();
                    if (s4 !== peg$FAILED) {
                      s5 = peg$parsea();
                      if (s5 !== peg$FAILED) {
                        s3 = [s3, s4, s5];
                        s2 = s3;
                      } else {
                        peg$currPos = s2;
                        s2 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s2;
                      s2 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s2;
                    s2 = peg$FAILED;
                  }
                  if (s2 === peg$FAILED) {
                    s2 = peg$currPos;
                    s3 = peg$parsei();
                    if (s3 !== peg$FAILED) {
                      s4 = peg$parsee();
                      if (s4 !== peg$FAILED) {
                        s3 = [s3, s4];
                        s2 = s3;
                      } else {
                        peg$currPos = s2;
                        s2 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s2;
                      s2 = peg$FAILED;
                    }
                    if (s2 === peg$FAILED) {
                      s2 = peg$currPos;
                      s3 = peg$parsea();
                      if (s3 !== peg$FAILED) {
                        s4 = peg$parseh();
                        if (s4 !== peg$FAILED) {
                          s5 = peg$parsee();
                          if (s5 !== peg$FAILED) {
                            s3 = [s3, s4, s5];
                            s2 = s3;
                          } else {
                            peg$currPos = s2;
                            s2 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s2;
                          s2 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s2;
                        s2 = peg$FAILED;
                      }
                      if (s2 === peg$FAILED) {
                        s2 = peg$currPos;
                        s3 = peg$parseu();
                        if (s3 !== peg$FAILED) {
                          s4 = peg$parseh();
                          if (s4 !== peg$FAILED) {
                            s5 = peg$parsei();
                            if (s5 !== peg$FAILED) {
                              s3 = [s3, s4, s5];
                              s2 = s3;
                            } else {
                              peg$currPos = s2;
                              s2 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s2;
                            s2 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s2;
                          s2 = peg$FAILED;
                        }
                        if (s2 === peg$FAILED) {
                          s2 = peg$currPos;
                          s3 = peg$parsei();
                          if (s3 !== peg$FAILED) {
                            s4 = peg$parseh();
                            if (s4 !== peg$FAILED) {
                              s5 = peg$parseo();
                              if (s5 !== peg$FAILED) {
                                s3 = [s3, s4, s5];
                                s2 = s3;
                              } else {
                                peg$currPos = s2;
                                s2 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s2;
                              s2 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s2;
                            s2 = peg$FAILED;
                          }
                          if (s2 === peg$FAILED) {
                            s2 = peg$currPos;
                            s3 = peg$parsei();
                            if (s3 !== peg$FAILED) {
                              s4 = peg$parseh();
                              if (s4 !== peg$FAILED) {
                                s5 = peg$parsee();
                                if (s5 !== peg$FAILED) {
                                  s3 = [s3, s4, s5];
                                  s2 = s3;
                                } else {
                                  peg$currPos = s2;
                                  s2 = peg$FAILED;
                                }
                              } else {
                                peg$currPos = s2;
                                s2 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s2;
                              s2 = peg$FAILED;
                            }
                            if (s2 === peg$FAILED) {
                              s2 = peg$currPos;
                              s3 = peg$parsea();
                              if (s3 !== peg$FAILED) {
                                s4 = peg$parseh();
                                if (s4 !== peg$FAILED) {
                                  s5 = peg$parsea();
                                  if (s5 !== peg$FAILED) {
                                    s3 = [s3, s4, s5];
                                    s2 = s3;
                                  } else {
                                    peg$currPos = s2;
                                    s2 = peg$FAILED;
                                  }
                                } else {
                                  peg$currPos = s2;
                                  s2 = peg$FAILED;
                                }
                              } else {
                                peg$currPos = s2;
                                s2 = peg$FAILED;
                              }
                              if (s2 === peg$FAILED) {
                                s2 = peg$currPos;
                                s3 = peg$parsei();
                                if (s3 !== peg$FAILED) {
                                  s4 = peg$parsea();
                                  if (s4 !== peg$FAILED) {
                                    s3 = [s3, s4];
                                    s2 = s3;
                                  } else {
                                    peg$currPos = s2;
                                    s2 = peg$FAILED;
                                  }
                                } else {
                                  peg$currPos = s2;
                                  s2 = peg$FAILED;
                                }
                                if (s2 === peg$FAILED) {
                                  s2 = peg$currPos;
                                  s3 = peg$parseo();
                                  if (s3 !== peg$FAILED) {
                                    s4 = peg$parseh();
                                    if (s4 !== peg$FAILED) {
                                      s5 = peg$parsei();
                                      if (s5 !== peg$FAILED) {
                                        s3 = [s3, s4, s5];
                                        s2 = s3;
                                      } else {
                                        peg$currPos = s2;
                                        s2 = peg$FAILED;
                                      }
                                    } else {
                                      peg$currPos = s2;
                                      s2 = peg$FAILED;
                                    }
                                  } else {
                                    peg$currPos = s2;
                                    s2 = peg$FAILED;
                                  }
                                  if (s2 === peg$FAILED) {
                                    s2 = peg$currPos;
                                    s3 = peg$parseo();
                                    if (s3 !== peg$FAILED) {
                                      s4 = peg$parseh();
                                      if (s4 !== peg$FAILED) {
                                        s5 = peg$parsee();
                                        if (s5 !== peg$FAILED) {
                                          s3 = [s3, s4, s5];
                                          s2 = s3;
                                        } else {
                                          peg$currPos = s2;
                                          s2 = peg$FAILED;
                                        }
                                      } else {
                                        peg$currPos = s2;
                                        s2 = peg$FAILED;
                                      }
                                    } else {
                                      peg$currPos = s2;
                                      s2 = peg$FAILED;
                                    }
                                    if (s2 === peg$FAILED) {
                                      s2 = peg$currPos;
                                      s3 = peg$parsee();
                                      if (s3 !== peg$FAILED) {
                                        s4 = peg$parseh();
                                        if (s4 !== peg$FAILED) {
                                          s5 = peg$parsee();
                                          if (s5 !== peg$FAILED) {
                                            s3 = [s3, s4, s5];
                                            s2 = s3;
                                          } else {
                                            peg$currPos = s2;
                                            s2 = peg$FAILED;
                                          }
                                        } else {
                                          peg$currPos = s2;
                                          s2 = peg$FAILED;
                                        }
                                      } else {
                                        peg$currPos = s2;
                                        s2 = peg$FAILED;
                                      }
                                      if (s2 === peg$FAILED) {
                                        s2 = peg$currPos;
                                        s3 = peg$parseo();
                                        if (s3 !== peg$FAILED) {
                                          s4 = peg$parsei();
                                          if (s4 !== peg$FAILED) {
                                            s3 = [s3, s4];
                                            s2 = s3;
                                          } else {
                                            peg$currPos = s2;
                                            s2 = peg$FAILED;
                                          }
                                        } else {
                                          peg$currPos = s2;
                                          s2 = peg$FAILED;
                                        }
                                        if (s2 === peg$FAILED) {
                                          s2 = peg$currPos;
                                          s3 = peg$parseu();
                                          if (s3 !== peg$FAILED) {
                                            s4 = peg$parseo();
                                            if (s4 !== peg$FAILED) {
                                              s3 = [s3, s4];
                                              s2 = s3;
                                            } else {
                                              peg$currPos = s2;
                                              s2 = peg$FAILED;
                                            }
                                          } else {
                                            peg$currPos = s2;
                                            s2 = peg$FAILED;
                                          }
                                          if (s2 === peg$FAILED) {
                                            s2 = peg$currPos;
                                            s3 = peg$parsee();
                                            if (s3 !== peg$FAILED) {
                                              s4 = peg$parseh();
                                              if (s4 !== peg$FAILED) {
                                                s5 = peg$parsei();
                                                if (s5 !== peg$FAILED) {
                                                  s3 = [s3, s4, s5];
                                                  s2 = s3;
                                                } else {
                                                  peg$currPos = s2;
                                                  s2 = peg$FAILED;
                                                }
                                              } else {
                                                peg$currPos = s2;
                                                s2 = peg$FAILED;
                                              }
                                            } else {
                                              peg$currPos = s2;
                                              s2 = peg$FAILED;
                                            }
                                            if (s2 === peg$FAILED) {
                                              s2 = peg$currPos;
                                              s3 = peg$parseu();
                                              if (s3 !== peg$FAILED) {
                                                s4 = peg$parseh();
                                                if (s4 !== peg$FAILED) {
                                                  s5 = peg$parseo();
                                                  if (s5 !== peg$FAILED) {
                                                    s3 = [s3, s4, s5];
                                                    s2 = s3;
                                                  } else {
                                                    peg$currPos = s2;
                                                    s2 = peg$FAILED;
                                                  }
                                                } else {
                                                  peg$currPos = s2;
                                                  s2 = peg$FAILED;
                                                }
                                              } else {
                                                peg$currPos = s2;
                                                s2 = peg$FAILED;
                                              }
                                              if (s2 === peg$FAILED) {
                                                s2 = peg$currPos;
                                                s3 = peg$parsea();
                                                if (s3 !== peg$FAILED) {
                                                  s4 = peg$parseu();
                                                  if (s4 !== peg$FAILED) {
                                                    s3 = [s3, s4];
                                                    s2 = s3;
                                                  } else {
                                                    peg$currPos = s2;
                                                    s2 = peg$FAILED;
                                                  }
                                                } else {
                                                  peg$currPos = s2;
                                                  s2 = peg$FAILED;
                                                }
                                                if (s2 === peg$FAILED) {
                                                  s2 = peg$currPos;
                                                  s3 = peg$parseu();
                                                  if (s3 !== peg$FAILED) {
                                                    s4 = peg$parsea();
                                                    if (s4 !== peg$FAILED) {
                                                      s3 = [s3, s4];
                                                      s2 = s3;
                                                    } else {
                                                      peg$currPos = s2;
                                                      s2 = peg$FAILED;
                                                    }
                                                  } else {
                                                    peg$currPos = s2;
                                                    s2 = peg$FAILED;
                                                  }
                                                  if (s2 === peg$FAILED) {
                                                    s2 = peg$currPos;
                                                    s3 = peg$parsea();
                                                    if (s3 !== peg$FAILED) {
                                                      s4 = peg$parseh();
                                                      if (s4 !== peg$FAILED) {
                                                        s5 = peg$parsei();
                                                        if (s5 !== peg$FAILED) {
                                                          s3 = [s3, s4, s5];
                                                          s2 = s3;
                                                        } else {
                                                          peg$currPos = s2;
                                                          s2 = peg$FAILED;
                                                        }
                                                      } else {
                                                        peg$currPos = s2;
                                                        s2 = peg$FAILED;
                                                      }
                                                    } else {
                                                      peg$currPos = s2;
                                                      s2 = peg$FAILED;
                                                    }
                                                    if (s2 === peg$FAILED) {
                                                      s2 = peg$currPos;
                                                      s3 = peg$parsei();
                                                      if (s3 !== peg$FAILED) {
                                                        s4 = peg$parseh();
                                                        if (s4 !== peg$FAILED) {
                                                          s5 = peg$parseu();
                                                          if (s5 !== peg$FAILED) {
                                                            s3 = [s3, s4, s5];
                                                            s2 = s3;
                                                          } else {
                                                            peg$currPos = s2;
                                                            s2 = peg$FAILED;
                                                          }
                                                        } else {
                                                          peg$currPos = s2;
                                                          s2 = peg$FAILED;
                                                        }
                                                      } else {
                                                        peg$currPos = s2;
                                                        s2 = peg$FAILED;
                                                      }
                                                      if (s2 === peg$FAILED) {
                                                        s2 = peg$currPos;
                                                        s3 = peg$parsei();
                                                        if (s3 !== peg$FAILED) {
                                                          s4 = peg$parsei();
                                                          if (s4 !== peg$FAILED) {
                                                            s3 = [s3, s4];
                                                            s2 = s3;
                                                          } else {
                                                            peg$currPos = s2;
                                                            s2 = peg$FAILED;
                                                          }
                                                        } else {
                                                          peg$currPos = s2;
                                                          s2 = peg$FAILED;
                                                        }
                                                        if (s2 === peg$FAILED) {
                                                          s2 = peg$currPos;
                                                          s3 = peg$parseu();
                                                          if (s3 !== peg$FAILED) {
                                                            s4 = peg$parseh();
                                                            if (s4 !== peg$FAILED) {
                                                              s5 = peg$parsea();
                                                              if (s5 !== peg$FAILED) {
                                                                s3 = [s3, s4, s5];
                                                                s2 = s3;
                                                              } else {
                                                                peg$currPos = s2;
                                                                s2 = peg$FAILED;
                                                              }
                                                            } else {
                                                              peg$currPos = s2;
                                                              s2 = peg$FAILED;
                                                            }
                                                          } else {
                                                            peg$currPos = s2;
                                                            s2 = peg$FAILED;
                                                          }
                                                          if (s2 === peg$FAILED) {
                                                            s2 = peg$currPos;
                                                            s3 = peg$parseu();
                                                            if (s3 !== peg$FAILED) {
                                                              s4 = peg$parsei();
                                                              if (s4 !== peg$FAILED) {
                                                                s3 = [s3, s4];
                                                                s2 = s3;
                                                              } else {
                                                                peg$currPos = s2;
                                                                s2 = peg$FAILED;
                                                              }
                                                            } else {
                                                              peg$currPos = s2;
                                                              s2 = peg$FAILED;
                                                            }
                                                            if (s2 === peg$FAILED) {
                                                              s2 = peg$currPos;
                                                              s3 = peg$parsea();
                                                              if (s3 !== peg$FAILED) {
                                                                s4 = peg$parseh();
                                                                if (s4 !== peg$FAILED) {
                                                                  s5 = peg$parseo();
                                                                  if (s5 !== peg$FAILED) {
                                                                    s3 = [s3, s4, s5];
                                                                    s2 = s3;
                                                                  } else {
                                                                    peg$currPos = s2;
                                                                    s2 = peg$FAILED;
                                                                  }
                                                                } else {
                                                                  peg$currPos = s2;
                                                                  s2 = peg$FAILED;
                                                                }
                                                              } else {
                                                                peg$currPos = s2;
                                                                s2 = peg$FAILED;
                                                              }
                                                              if (s2 === peg$FAILED) {
                                                                s2 = peg$currPos;
                                                                s3 = peg$parsea();
                                                                if (s3 !== peg$FAILED) {
                                                                  s4 = peg$parsei();
                                                                  if (s4 !== peg$FAILED) {
                                                                    s3 = [s3, s4];
                                                                    s2 = s3;
                                                                  } else {
                                                                    peg$currPos = s2;
                                                                    s2 = peg$FAILED;
                                                                  }
                                                                } else {
                                                                  peg$currPos = s2;
                                                                  s2 = peg$FAILED;
                                                                }
                                                                if (s2 === peg$FAILED) {
                                                                  s2 = peg$currPos;
                                                                  s3 = peg$parsea();
                                                                  if (s3 !== peg$FAILED) {
                                                                    s4 = peg$parseh();
                                                                    if (s4 !== peg$FAILED) {
                                                                      s5 = peg$parseu();
                                                                      if (s5 !== peg$FAILED) {
                                                                        s3 = [s3, s4, s5];
                                                                        s2 = s3;
                                                                      } else {
                                                                        peg$currPos = s2;
                                                                        s2 = peg$FAILED;
                                                                      }
                                                                    } else {
                                                                      peg$currPos = s2;
                                                                      s2 = peg$FAILED;
                                                                    }
                                                                  } else {
                                                                    peg$currPos = s2;
                                                                    s2 = peg$FAILED;
                                                                  }
                                                                  if (s2 === peg$FAILED) {
                                                                    s2 = peg$currPos;
                                                                    s3 = peg$parsei();
                                                                    if (s3 !== peg$FAILED) {
                                                                      s4 = peg$parseu();
                                                                      if (s4 !== peg$FAILED) {
                                                                        s3 = [s3, s4];
                                                                        s2 = s3;
                                                                      } else {
                                                                        peg$currPos = s2;
                                                                        s2 = peg$FAILED;
                                                                      }
                                                                    } else {
                                                                      peg$currPos = s2;
                                                                      s2 = peg$FAILED;
                                                                    }
                                                                    if (s2 === peg$FAILED) {
                                                                      s2 = peg$currPos;
                                                                      s3 = peg$parsee();
                                                                      if (s3 !== peg$FAILED) {
                                                                        s4 = peg$parsei();
                                                                        if (s4 !== peg$FAILED) {
                                                                          s3 = [s3, s4];
                                                                          s2 = s3;
                                                                        } else {
                                                                          peg$currPos = s2;
                                                                          s2 = peg$FAILED;
                                                                        }
                                                                      } else {
                                                                        peg$currPos = s2;
                                                                        s2 = peg$FAILED;
                                                                      }
                                                                      if (s2 === peg$FAILED) {
                                                                        s2 = peg$currPos;
                                                                        s3 = peg$parseo();
                                                                        if (s3 !== peg$FAILED) {
                                                                          s4 = peg$parseh();
                                                                          if (s4 !== peg$FAILED) {
                                                                            s5 = peg$parseo();
                                                                            if (s5 !== peg$FAILED) {
                                                                              s3 = [s3, s4, s5];
                                                                              s2 = s3;
                                                                            } else {
                                                                              peg$currPos = s2;
                                                                              s2 = peg$FAILED;
                                                                            }
                                                                          } else {
                                                                            peg$currPos = s2;
                                                                            s2 = peg$FAILED;
                                                                          }
                                                                        } else {
                                                                          peg$currPos = s2;
                                                                          s2 = peg$FAILED;
                                                                        }
                                                                        if (s2 === peg$FAILED) {
                                                                          s2 = peg$currPos;
                                                                          s3 = peg$parsee();
                                                                          if (s3 !== peg$FAILED) {
                                                                            s4 = peg$parseh();
                                                                            if (s4 !== peg$FAILED) {
                                                                              s5 = peg$parsea();
                                                                              if (s5 !== peg$FAILED) {
                                                                                s3 = [s3, s4, s5];
                                                                                s2 = s3;
                                                                              } else {
                                                                                peg$currPos = s2;
                                                                                s2 = peg$FAILED;
                                                                              }
                                                                            } else {
                                                                              peg$currPos = s2;
                                                                              s2 = peg$FAILED;
                                                                            }
                                                                          } else {
                                                                            peg$currPos = s2;
                                                                            s2 = peg$FAILED;
                                                                          }
                                                                          if (s2 === peg$FAILED) {
                                                                            s2 = peg$currPos;
                                                                            s3 = peg$parseu();
                                                                            if (s3 !== peg$FAILED) {
                                                                              s4 = peg$parseu();
                                                                              if (s4 !== peg$FAILED) {
                                                                                s3 = [s3, s4];
                                                                                s2 = s3;
                                                                              } else {
                                                                                peg$currPos = s2;
                                                                                s2 = peg$FAILED;
                                                                              }
                                                                            } else {
                                                                              peg$currPos = s2;
                                                                              s2 = peg$FAILED;
                                                                            }
                                                                            if (s2 === peg$FAILED) {
                                                                              s2 = peg$currPos;
                                                                              s3 = peg$parseo();
                                                                              if (s3 !== peg$FAILED) {
                                                                                s4 = peg$parseh();
                                                                                if (s4 !== peg$FAILED) {
                                                                                  s5 = peg$parsea();
                                                                                  if (s5 !== peg$FAILED) {
                                                                                    s3 = [s3, s4, s5];
                                                                                    s2 = s3;
                                                                                  } else {
                                                                                    peg$currPos = s2;
                                                                                    s2 = peg$FAILED;
                                                                                  }
                                                                                } else {
                                                                                  peg$currPos = s2;
                                                                                  s2 = peg$FAILED;
                                                                                }
                                                                              } else {
                                                                                peg$currPos = s2;
                                                                                s2 = peg$FAILED;
                                                                              }
                                                                              if (s2 === peg$FAILED) {
                                                                                s2 = peg$currPos;
                                                                                s3 = peg$parseo();
                                                                                if (s3 !== peg$FAILED) {
                                                                                  s4 = peg$parseh();
                                                                                  if (s4 !== peg$FAILED) {
                                                                                    s5 = peg$parseu();
                                                                                    if (s5 !== peg$FAILED) {
                                                                                      s3 = [s3, s4, s5];
                                                                                      s2 = s3;
                                                                                    } else {
                                                                                      peg$currPos = s2;
                                                                                      s2 = peg$FAILED;
                                                                                    }
                                                                                  } else {
                                                                                    peg$currPos = s2;
                                                                                    s2 = peg$FAILED;
                                                                                  }
                                                                                } else {
                                                                                  peg$currPos = s2;
                                                                                  s2 = peg$FAILED;
                                                                                }
                                                                                if (s2 === peg$FAILED) {
                                                                                  s2 = peg$currPos;
                                                                                  s3 = peg$parseu();
                                                                                  if (s3 !== peg$FAILED) {
                                                                                    s4 = peg$parseh();
                                                                                    if (s4 !== peg$FAILED) {
                                                                                      s5 = peg$parseu();
                                                                                      if (s5 !== peg$FAILED) {
                                                                                        s3 = [s3, s4, s5];
                                                                                        s2 = s3;
                                                                                      } else {
                                                                                        peg$currPos = s2;
                                                                                        s2 = peg$FAILED;
                                                                                      }
                                                                                    } else {
                                                                                      peg$currPos = s2;
                                                                                      s2 = peg$FAILED;
                                                                                    }
                                                                                  } else {
                                                                                    peg$currPos = s2;
                                                                                    s2 = peg$FAILED;
                                                                                  }
                                                                                  if (s2 === peg$FAILED) {
                                                                                    s2 = peg$currPos;
                                                                                    s3 = peg$parsee();
                                                                                    if (s3 !== peg$FAILED) {
                                                                                      s4 = peg$parseh();
                                                                                      if (s4 !== peg$FAILED) {
                                                                                        s5 = peg$parseo();
                                                                                        if (s5 !== peg$FAILED) {
                                                                                          s3 = [s3, s4, s5];
                                                                                          s2 = s3;
                                                                                        } else {
                                                                                          peg$currPos = s2;
                                                                                          s2 = peg$FAILED;
                                                                                        }
                                                                                      } else {
                                                                                        peg$currPos = s2;
                                                                                        s2 = peg$FAILED;
                                                                                      }
                                                                                    } else {
                                                                                      peg$currPos = s2;
                                                                                      s2 = peg$FAILED;
                                                                                    }
                                                                                    if (s2 === peg$FAILED) {
                                                                                      s2 = peg$currPos;
                                                                                      s3 = peg$parsei();
                                                                                      if (s3 !== peg$FAILED) {
                                                                                        s4 = peg$parseo();
                                                                                        if (s4 !== peg$FAILED) {
                                                                                          s3 = [s3, s4];
                                                                                          s2 = s3;
                                                                                        } else {
                                                                                          peg$currPos = s2;
                                                                                          s2 = peg$FAILED;
                                                                                        }
                                                                                      } else {
                                                                                        peg$currPos = s2;
                                                                                        s2 = peg$FAILED;
                                                                                      }
                                                                                      if (s2 === peg$FAILED) {
                                                                                        s2 = peg$currPos;
                                                                                        s3 = peg$parsee();
                                                                                        if (s3 !== peg$FAILED) {
                                                                                          s4 = peg$parseh();
                                                                                          if (s4 !== peg$FAILED) {
                                                                                            s5 = peg$parseu();
                                                                                            if (s5 !== peg$FAILED) {
                                                                                              s3 = [s3, s4, s5];
                                                                                              s2 = s3;
                                                                                            } else {
                                                                                              peg$currPos = s2;
                                                                                              s2 = peg$FAILED;
                                                                                            }
                                                                                          } else {
                                                                                            peg$currPos = s2;
                                                                                            s2 = peg$FAILED;
                                                                                          }
                                                                                        } else {
                                                                                          peg$currPos = s2;
                                                                                          s2 = peg$FAILED;
                                                                                        }
                                                                                        if (s2 === peg$FAILED) {
                                                                                          s2 = peg$currPos;
                                                                                          s3 = peg$parseu();
                                                                                          if (s3 !== peg$FAILED) {
                                                                                            s4 = peg$parsee();
                                                                                            if (s4 !== peg$FAILED) {
                                                                                              s3 = [s3, s4];
                                                                                              s2 = s3;
                                                                                            } else {
                                                                                              peg$currPos = s2;
                                                                                              s2 = peg$FAILED;
                                                                                            }
                                                                                          } else {
                                                                                            peg$currPos = s2;
                                                                                            s2 = peg$FAILED;
                                                                                          }
                                                                                          if (s2 === peg$FAILED) {
                                                                                            s2 = peg$currPos;
                                                                                            s3 = peg$parsei();
                                                                                            if (s3 !== peg$FAILED) {
                                                                                              s4 = peg$parseh();
                                                                                              if (s4 !== peg$FAILED) {
                                                                                                s5 = peg$parsei();
                                                                                                if (s5 !== peg$FAILED) {
                                                                                                  s3 = [s3, s4, s5];
                                                                                                  s2 = s3;
                                                                                                } else {
                                                                                                  peg$currPos = s2;
                                                                                                  s2 = peg$FAILED;
                                                                                                }
                                                                                              } else {
                                                                                                peg$currPos = s2;
                                                                                                s2 = peg$FAILED;
                                                                                              }
                                                                                            } else {
                                                                                              peg$currPos = s2;
                                                                                              s2 = peg$FAILED;
                                                                                            }
                                                                                            if (s2 === peg$FAILED) {
                                                                                              s2 = peg$currPos;
                                                                                              s3 = peg$parseu();
                                                                                              if (s3 !== peg$FAILED) {
                                                                                                s4 = peg$parseh();
                                                                                                if (s4 !== peg$FAILED) {
                                                                                                  s5 = peg$parsee();
                                                                                                  if (s5 !== peg$FAILED) {
                                                                                                    s3 = [s3, s4, s5];
                                                                                                    s2 = s3;
                                                                                                  } else {
                                                                                                    peg$currPos = s2;
                                                                                                    s2 = peg$FAILED;
                                                                                                  }
                                                                                                } else {
                                                                                                  peg$currPos = s2;
                                                                                                  s2 = peg$FAILED;
                                                                                                }
                                                                                              } else {
                                                                                                peg$currPos = s2;
                                                                                                s2 = peg$FAILED;
                                                                                              }
                                                                                              if (s2 === peg$FAILED) {
                                                                                                s2 = peg$currPos;
                                                                                                s3 = peg$parseb();
                                                                                                if (s3 !== peg$FAILED) {
                                                                                                  s4 = peg$parsea();
                                                                                                  if (s4 !== peg$FAILED) {
                                                                                                    s5 = peg$parseh();
                                                                                                    if (s5 !== peg$FAILED) {
                                                                                                      s6 = peg$parsea();
                                                                                                      if (s6 !== peg$FAILED) {
                                                                                                        s3 = [s3, s4, s5, s6];
                                                                                                        s2 = s3;
                                                                                                      } else {
                                                                                                        peg$currPos = s2;
                                                                                                        s2 = peg$FAILED;
                                                                                                      }
                                                                                                    } else {
                                                                                                      peg$currPos = s2;
                                                                                                      s2 = peg$FAILED;
                                                                                                    }
                                                                                                  } else {
                                                                                                    peg$currPos = s2;
                                                                                                    s2 = peg$FAILED;
                                                                                                  }
                                                                                                } else {
                                                                                                  peg$currPos = s2;
                                                                                                  s2 = peg$FAILED;
                                                                                                }
                                                                                                if (s2 === peg$FAILED) {
                                                                                                  s2 = peg$currPos;
                                                                                                  s3 = peg$parsej();
                                                                                                  if (s3 !== peg$FAILED) {
                                                                                                    s4 = peg$parsea();
                                                                                                    if (s4 !== peg$FAILED) {
                                                                                                      s5 = peg$parseh();
                                                                                                      if (s5 !== peg$FAILED) {
                                                                                                        s6 = peg$parseo();
                                                                                                        if (s6 !== peg$FAILED) {
                                                                                                          s3 = [s3, s4, s5, s6];
                                                                                                          s2 = s3;
                                                                                                        } else {
                                                                                                          peg$currPos = s2;
                                                                                                          s2 = peg$FAILED;
                                                                                                        }
                                                                                                      } else {
                                                                                                        peg$currPos = s2;
                                                                                                        s2 = peg$FAILED;
                                                                                                      }
                                                                                                    } else {
                                                                                                      peg$currPos = s2;
                                                                                                      s2 = peg$FAILED;
                                                                                                    }
                                                                                                  } else {
                                                                                                    peg$currPos = s2;
                                                                                                    s2 = peg$FAILED;
                                                                                                  }
                                                                                                  if (s2 === peg$FAILED) {
                                                                                                    s2 = peg$currPos;
                                                                                                    s3 = peg$parsec();
                                                                                                    if (s3 !== peg$FAILED) {
                                                                                                      s4 = peg$parsea();
                                                                                                      if (s4 !== peg$FAILED) {
                                                                                                        s5 = peg$parseh();
                                                                                                        if (s5 !== peg$FAILED) {
                                                                                                          s6 = peg$parsee();
                                                                                                          if (s6 !== peg$FAILED) {
                                                                                                            s3 = [s3, s4, s5, s6];
                                                                                                            s2 = s3;
                                                                                                          } else {
                                                                                                            peg$currPos = s2;
                                                                                                            s2 = peg$FAILED;
                                                                                                          }
                                                                                                        } else {
                                                                                                          peg$currPos = s2;
                                                                                                          s2 = peg$FAILED;
                                                                                                        }
                                                                                                      } else {
                                                                                                        peg$currPos = s2;
                                                                                                        s2 = peg$FAILED;
                                                                                                      }
                                                                                                    } else {
                                                                                                      peg$currPos = s2;
                                                                                                      s2 = peg$FAILED;
                                                                                                    }
                                                                                                    if (s2 === peg$FAILED) {
                                                                                                      s2 = peg$currPos;
                                                                                                      s3 = peg$parses();
                                                                                                      if (s3 !== peg$FAILED) {
                                                                                                        s4 = peg$parseu();
                                                                                                        if (s4 !== peg$FAILED) {
                                                                                                          s5 = peg$parseh();
                                                                                                          if (s5 !== peg$FAILED) {
                                                                                                            s6 = peg$parsea();
                                                                                                            if (s6 !== peg$FAILED) {
                                                                                                              s3 = [s3, s4, s5, s6];
                                                                                                              s2 = s3;
                                                                                                            } else {
                                                                                                              peg$currPos = s2;
                                                                                                              s2 = peg$FAILED;
                                                                                                            }
                                                                                                          } else {
                                                                                                            peg$currPos = s2;
                                                                                                            s2 = peg$FAILED;
                                                                                                          }
                                                                                                        } else {
                                                                                                          peg$currPos = s2;
                                                                                                          s2 = peg$FAILED;
                                                                                                        }
                                                                                                      } else {
                                                                                                        peg$currPos = s2;
                                                                                                        s2 = peg$FAILED;
                                                                                                      }
                                                                                                      if (s2 === peg$FAILED) {
                                                                                                        s2 = peg$currPos;
                                                                                                        s3 = peg$parset();
                                                                                                        if (s3 !== peg$FAILED) {
                                                                                                          s4 = peg$parsei();
                                                                                                          if (s4 !== peg$FAILED) {
                                                                                                            s5 = peg$parseh();
                                                                                                            if (s5 !== peg$FAILED) {
                                                                                                              s6 = peg$parsee();
                                                                                                              if (s6 !== peg$FAILED) {
                                                                                                                s3 = [s3, s4, s5, s6];
                                                                                                                s2 = s3;
                                                                                                              } else {
                                                                                                                peg$currPos = s2;
                                                                                                                s2 = peg$FAILED;
                                                                                                              }
                                                                                                            } else {
                                                                                                              peg$currPos = s2;
                                                                                                              s2 = peg$FAILED;
                                                                                                            }
                                                                                                          } else {
                                                                                                            peg$currPos = s2;
                                                                                                            s2 = peg$FAILED;
                                                                                                          }
                                                                                                        } else {
                                                                                                          peg$currPos = s2;
                                                                                                          s2 = peg$FAILED;
                                                                                                        }
                                                                                                        if (s2 === peg$FAILED) {
                                                                                                          s2 = peg$currPos;
                                                                                                          s3 = peg$parsek();
                                                                                                          if (s3 !== peg$FAILED) {
                                                                                                            s4 = peg$parsea();
                                                                                                            if (s4 !== peg$FAILED) {
                                                                                                              s5 = peg$parseh();
                                                                                                              if (s5 !== peg$FAILED) {
                                                                                                                s6 = peg$parseu();
                                                                                                                if (s6 !== peg$FAILED) {
                                                                                                                  s3 = [s3, s4, s5, s6];
                                                                                                                  s2 = s3;
                                                                                                                } else {
                                                                                                                  peg$currPos = s2;
                                                                                                                  s2 = peg$FAILED;
                                                                                                                }
                                                                                                              } else {
                                                                                                                peg$currPos = s2;
                                                                                                                s2 = peg$FAILED;
                                                                                                              }
                                                                                                            } else {
                                                                                                              peg$currPos = s2;
                                                                                                              s2 = peg$FAILED;
                                                                                                            }
                                                                                                          } else {
                                                                                                            peg$currPos = s2;
                                                                                                            s2 = peg$FAILED;
                                                                                                          }
                                                                                                          if (s2 === peg$FAILED) {
                                                                                                            s2 = peg$currPos;
                                                                                                            s3 = peg$parses();
                                                                                                            if (s3 !== peg$FAILED) {
                                                                                                              s4 = peg$parsee();
                                                                                                              if (s4 !== peg$FAILED) {
                                                                                                                s5 = peg$parseh();
                                                                                                                if (s5 !== peg$FAILED) {
                                                                                                                  s6 = peg$parseo();
                                                                                                                  if (s6 !== peg$FAILED) {
                                                                                                                    s3 = [s3, s4, s5, s6];
                                                                                                                    s2 = s3;
                                                                                                                  } else {
                                                                                                                    peg$currPos = s2;
                                                                                                                    s2 = peg$FAILED;
                                                                                                                  }
                                                                                                                } else {
                                                                                                                  peg$currPos = s2;
                                                                                                                  s2 = peg$FAILED;
                                                                                                                }
                                                                                                              } else {
                                                                                                                peg$currPos = s2;
                                                                                                                s2 = peg$FAILED;
                                                                                                              }
                                                                                                            } else {
                                                                                                              peg$currPos = s2;
                                                                                                              s2 = peg$FAILED;
                                                                                                            }
                                                                                                            if (s2 === peg$FAILED) {
                                                                                                              s2 = peg$currPos;
                                                                                                              s3 = peg$parsez();
                                                                                                              if (s3 !== peg$FAILED) {
                                                                                                                s4 = peg$parsea();
                                                                                                                if (s4 !== peg$FAILED) {
                                                                                                                  s5 = peg$parseh();
                                                                                                                  if (s5 !== peg$FAILED) {
                                                                                                                    s6 = peg$parsea();
                                                                                                                    if (s6 !== peg$FAILED) {
                                                                                                                      s3 = [s3, s4, s5, s6];
                                                                                                                      s2 = s3;
                                                                                                                    } else {
                                                                                                                      peg$currPos = s2;
                                                                                                                      s2 = peg$FAILED;
                                                                                                                    }
                                                                                                                  } else {
                                                                                                                    peg$currPos = s2;
                                                                                                                    s2 = peg$FAILED;
                                                                                                                  }
                                                                                                                } else {
                                                                                                                  peg$currPos = s2;
                                                                                                                  s2 = peg$FAILED;
                                                                                                                }
                                                                                                              } else {
                                                                                                                peg$currPos = s2;
                                                                                                                s2 = peg$FAILED;
                                                                                                              }
                                                                                                              if (s2 === peg$FAILED) {
                                                                                                                s2 = peg$currPos;
                                                                                                                s3 = peg$parsep();
                                                                                                                if (s3 !== peg$FAILED) {
                                                                                                                  s4 = peg$parsee();
                                                                                                                  if (s4 !== peg$FAILED) {
                                                                                                                    s5 = peg$parseh();
                                                                                                                    if (s5 !== peg$FAILED) {
                                                                                                                      s6 = peg$parsei();
                                                                                                                      if (s6 !== peg$FAILED) {
                                                                                                                        s3 = [s3, s4, s5, s6];
                                                                                                                        s2 = s3;
                                                                                                                      } else {
                                                                                                                        peg$currPos = s2;
                                                                                                                        s2 = peg$FAILED;
                                                                                                                      }
                                                                                                                    } else {
                                                                                                                      peg$currPos = s2;
                                                                                                                      s2 = peg$FAILED;
                                                                                                                    }
                                                                                                                  } else {
                                                                                                                    peg$currPos = s2;
                                                                                                                    s2 = peg$FAILED;
                                                                                                                  }
                                                                                                                } else {
                                                                                                                  peg$currPos = s2;
                                                                                                                  s2 = peg$FAILED;
                                                                                                                }
                                                                                                                if (s2 === peg$FAILED) {
                                                                                                                  s2 = peg$currPos;
                                                                                                                  s3 = peg$parser();
                                                                                                                  if (s3 !== peg$FAILED) {
                                                                                                                    s4 = peg$parseu();
                                                                                                                    if (s4 !== peg$FAILED) {
                                                                                                                      s5 = peg$parseh();
                                                                                                                      if (s5 !== peg$FAILED) {
                                                                                                                        s6 = peg$parsea();
                                                                                                                        if (s6 !== peg$FAILED) {
                                                                                                                          s3 = [s3, s4, s5, s6];
                                                                                                                          s2 = s3;
                                                                                                                        } else {
                                                                                                                          peg$currPos = s2;
                                                                                                                          s2 = peg$FAILED;
                                                                                                                        }
                                                                                                                      } else {
                                                                                                                        peg$currPos = s2;
                                                                                                                        s2 = peg$FAILED;
                                                                                                                      }
                                                                                                                    } else {
                                                                                                                      peg$currPos = s2;
                                                                                                                      s2 = peg$FAILED;
                                                                                                                    }
                                                                                                                  } else {
                                                                                                                    peg$currPos = s2;
                                                                                                                    s2 = peg$FAILED;
                                                                                                                  }
                                                                                                                  if (s2 === peg$FAILED) {
                                                                                                                    s2 = peg$currPos;
                                                                                                                    s3 = peg$parsej();
                                                                                                                    if (s3 !== peg$FAILED) {
                                                                                                                      s4 = peg$parseu();
                                                                                                                      if (s4 !== peg$FAILED) {
                                                                                                                        s5 = peg$parseh();
                                                                                                                        if (s5 !== peg$FAILED) {
                                                                                                                          s6 = peg$parsea();
                                                                                                                          if (s6 !== peg$FAILED) {
                                                                                                                            s3 = [s3, s4, s5, s6];
                                                                                                                            s2 = s3;
                                                                                                                          } else {
                                                                                                                            peg$currPos = s2;
                                                                                                                            s2 = peg$FAILED;
                                                                                                                          }
                                                                                                                        } else {
                                                                                                                          peg$currPos = s2;
                                                                                                                          s2 = peg$FAILED;
                                                                                                                        }
                                                                                                                      } else {
                                                                                                                        peg$currPos = s2;
                                                                                                                        s2 = peg$FAILED;
                                                                                                                      }
                                                                                                                    } else {
                                                                                                                      peg$currPos = s2;
                                                                                                                      s2 = peg$FAILED;
                                                                                                                    }
                                                                                                                    if (s2 === peg$FAILED) {
                                                                                                                      s2 = peg$currPos;
                                                                                                                      s3 = peg$parset();
                                                                                                                      if (s3 !== peg$FAILED) {
                                                                                                                        s4 = peg$parsea();
                                                                                                                        if (s4 !== peg$FAILED) {
                                                                                                                          s5 = peg$parseh();
                                                                                                                          if (s5 !== peg$FAILED) {
                                                                                                                            s6 = peg$parseo();
                                                                                                                            if (s6 !== peg$FAILED) {
                                                                                                                              s3 = [s3, s4, s5, s6];
                                                                                                                              s2 = s3;
                                                                                                                            } else {
                                                                                                                              peg$currPos = s2;
                                                                                                                              s2 = peg$FAILED;
                                                                                                                            }
                                                                                                                          } else {
                                                                                                                            peg$currPos = s2;
                                                                                                                            s2 = peg$FAILED;
                                                                                                                          }
                                                                                                                        } else {
                                                                                                                          peg$currPos = s2;
                                                                                                                          s2 = peg$FAILED;
                                                                                                                        }
                                                                                                                      } else {
                                                                                                                        peg$currPos = s2;
                                                                                                                        s2 = peg$FAILED;
                                                                                                                      }
                                                                                                                      if (s2 === peg$FAILED) {
                                                                                                                        s2 = peg$currPos;
                                                                                                                        s3 = peg$parser();
                                                                                                                        if (s3 !== peg$FAILED) {
                                                                                                                          s4 = peg$parsea();
                                                                                                                          if (s4 !== peg$FAILED) {
                                                                                                                            s5 = peg$parseh();
                                                                                                                            if (s5 !== peg$FAILED) {
                                                                                                                              s6 = peg$parseu();
                                                                                                                              if (s6 !== peg$FAILED) {
                                                                                                                                s3 = [s3, s4, s5, s6];
                                                                                                                                s2 = s3;
                                                                                                                              } else {
                                                                                                                                peg$currPos = s2;
                                                                                                                                s2 = peg$FAILED;
                                                                                                                              }
                                                                                                                            } else {
                                                                                                                              peg$currPos = s2;
                                                                                                                              s2 = peg$FAILED;
                                                                                                                            }
                                                                                                                          } else {
                                                                                                                            peg$currPos = s2;
                                                                                                                            s2 = peg$FAILED;
                                                                                                                          }
                                                                                                                        } else {
                                                                                                                          peg$currPos = s2;
                                                                                                                          s2 = peg$FAILED;
                                                                                                                        }
                                                                                                                        if (s2 === peg$FAILED) {
                                                                                                                          s2 = peg$currPos;
                                                                                                                          s3 = peg$parsel();
                                                                                                                          if (s3 !== peg$FAILED) {
                                                                                                                            s4 = peg$parsei();
                                                                                                                            if (s4 !== peg$FAILED) {
                                                                                                                              s5 = peg$parseh();
                                                                                                                              if (s5 !== peg$FAILED) {
                                                                                                                                s6 = peg$parsea();
                                                                                                                                if (s6 !== peg$FAILED) {
                                                                                                                                  s3 = [s3, s4, s5, s6];
                                                                                                                                  s2 = s3;
                                                                                                                                } else {
                                                                                                                                  peg$currPos = s2;
                                                                                                                                  s2 = peg$FAILED;
                                                                                                                                }
                                                                                                                              } else {
                                                                                                                                peg$currPos = s2;
                                                                                                                                s2 = peg$FAILED;
                                                                                                                              }
                                                                                                                            } else {
                                                                                                                              peg$currPos = s2;
                                                                                                                              s2 = peg$FAILED;
                                                                                                                            }
                                                                                                                          } else {
                                                                                                                            peg$currPos = s2;
                                                                                                                            s2 = peg$FAILED;
                                                                                                                          }
                                                                                                                          if (s2 === peg$FAILED) {
                                                                                                                            s2 = peg$currPos;
                                                                                                                            s3 = peg$parseb();
                                                                                                                            if (s3 !== peg$FAILED) {
                                                                                                                              s4 = peg$parsea();
                                                                                                                              if (s4 !== peg$FAILED) {
                                                                                                                                s5 = peg$parseh();
                                                                                                                                if (s5 !== peg$FAILED) {
                                                                                                                                  s6 = peg$parseu();
                                                                                                                                  if (s6 !== peg$FAILED) {
                                                                                                                                    s3 = [s3, s4, s5, s6];
                                                                                                                                    s2 = s3;
                                                                                                                                  } else {
                                                                                                                                    peg$currPos = s2;
                                                                                                                                    s2 = peg$FAILED;
                                                                                                                                  }
                                                                                                                                } else {
                                                                                                                                  peg$currPos = s2;
                                                                                                                                  s2 = peg$FAILED;
                                                                                                                                }
                                                                                                                              } else {
                                                                                                                                peg$currPos = s2;
                                                                                                                                s2 = peg$FAILED;
                                                                                                                              }
                                                                                                                            } else {
                                                                                                                              peg$currPos = s2;
                                                                                                                              s2 = peg$FAILED;
                                                                                                                            }
                                                                                                                            if (s2 === peg$FAILED) {
                                                                                                                              s2 = peg$currPos;
                                                                                                                              s3 = peg$parsem();
                                                                                                                              if (s3 !== peg$FAILED) {
                                                                                                                                s4 = peg$parseu();
                                                                                                                                if (s4 !== peg$FAILED) {
                                                                                                                                  s5 = peg$parseh();
                                                                                                                                  if (s5 !== peg$FAILED) {
                                                                                                                                    s6 = peg$parsea();
                                                                                                                                    if (s6 !== peg$FAILED) {
                                                                                                                                      s3 = [s3, s4, s5, s6];
                                                                                                                                      s2 = s3;
                                                                                                                                    } else {
                                                                                                                                      peg$currPos = s2;
                                                                                                                                      s2 = peg$FAILED;
                                                                                                                                    }
                                                                                                                                  } else {
                                                                                                                                    peg$currPos = s2;
                                                                                                                                    s2 = peg$FAILED;
                                                                                                                                  }
                                                                                                                                } else {
                                                                                                                                  peg$currPos = s2;
                                                                                                                                  s2 = peg$FAILED;
                                                                                                                                }
                                                                                                                              } else {
                                                                                                                                peg$currPos = s2;
                                                                                                                                s2 = peg$FAILED;
                                                                                                                              }
                                                                                                                              if (s2 === peg$FAILED) {
                                                                                                                                s2 = peg$currPos;
                                                                                                                                s3 = peg$parsed();
                                                                                                                                if (s3 !== peg$FAILED) {
                                                                                                                                  s4 = peg$parseo();
                                                                                                                                  if (s4 !== peg$FAILED) {
                                                                                                                                    s5 = peg$parseh();
                                                                                                                                    if (s5 !== peg$FAILED) {
                                                                                                                                      s6 = peg$parsea();
                                                                                                                                      if (s6 !== peg$FAILED) {
                                                                                                                                        s3 = [s3, s4, s5, s6];
                                                                                                                                        s2 = s3;
                                                                                                                                      } else {
                                                                                                                                        peg$currPos = s2;
                                                                                                                                        s2 = peg$FAILED;
                                                                                                                                      }
                                                                                                                                    } else {
                                                                                                                                      peg$currPos = s2;
                                                                                                                                      s2 = peg$FAILED;
                                                                                                                                    }
                                                                                                                                  } else {
                                                                                                                                    peg$currPos = s2;
                                                                                                                                    s2 = peg$FAILED;
                                                                                                                                  }
                                                                                                                                } else {
                                                                                                                                  peg$currPos = s2;
                                                                                                                                  s2 = peg$FAILED;
                                                                                                                                }
                                                                                                                                if (s2 === peg$FAILED) {
                                                                                                                                  s2 = peg$currPos;
                                                                                                                                  s3 = peg$parset();
                                                                                                                                  if (s3 !== peg$FAILED) {
                                                                                                                                    s4 = peg$parseo();
                                                                                                                                    if (s4 !== peg$FAILED) {
                                                                                                                                      s5 = peg$parseh();
                                                                                                                                      if (s5 !== peg$FAILED) {
                                                                                                                                        s6 = peg$parseu();
                                                                                                                                        if (s6 !== peg$FAILED) {
                                                                                                                                          s3 = [s3, s4, s5, s6];
                                                                                                                                          s2 = s3;
                                                                                                                                        } else {
                                                                                                                                          peg$currPos = s2;
                                                                                                                                          s2 = peg$FAILED;
                                                                                                                                        }
                                                                                                                                      } else {
                                                                                                                                        peg$currPos = s2;
                                                                                                                                        s2 = peg$FAILED;
                                                                                                                                      }
                                                                                                                                    } else {
                                                                                                                                      peg$currPos = s2;
                                                                                                                                      s2 = peg$FAILED;
                                                                                                                                    }
                                                                                                                                  } else {
                                                                                                                                    peg$currPos = s2;
                                                                                                                                    s2 = peg$FAILED;
                                                                                                                                  }
                                                                                                                                  if (s2 === peg$FAILED) {
                                                                                                                                    s2 = peg$currPos;
                                                                                                                                    s3 = peg$parsev();
                                                                                                                                    if (s3 !== peg$FAILED) {
                                                                                                                                      s4 = peg$parsea();
                                                                                                                                      if (s4 !== peg$FAILED) {
                                                                                                                                        s5 = peg$parseh();
                                                                                                                                        if (s5 !== peg$FAILED) {
                                                                                                                                          s6 = peg$parsei();
                                                                                                                                          if (s6 !== peg$FAILED) {
                                                                                                                                            s3 = [s3, s4, s5, s6];
                                                                                                                                            s2 = s3;
                                                                                                                                          } else {
                                                                                                                                            peg$currPos = s2;
                                                                                                                                            s2 = peg$FAILED;
                                                                                                                                          }
                                                                                                                                        } else {
                                                                                                                                          peg$currPos = s2;
                                                                                                                                          s2 = peg$FAILED;
                                                                                                                                        }
                                                                                                                                      } else {
                                                                                                                                        peg$currPos = s2;
                                                                                                                                        s2 = peg$FAILED;
                                                                                                                                      }
                                                                                                                                    } else {
                                                                                                                                      peg$currPos = s2;
                                                                                                                                      s2 = peg$FAILED;
                                                                                                                                    }
                                                                                                                                    if (s2 === peg$FAILED) {
                                                                                                                                      s2 = peg$currPos;
                                                                                                                                      s3 = peg$parsep();
                                                                                                                                      if (s3 !== peg$FAILED) {
                                                                                                                                        s4 = peg$parsea();
                                                                                                                                        if (s4 !== peg$FAILED) {
                                                                                                                                          s5 = peg$parseh();
                                                                                                                                          if (s5 !== peg$FAILED) {
                                                                                                                                            s6 = peg$parsee();
                                                                                                                                            if (s6 !== peg$FAILED) {
                                                                                                                                              s3 = [s3, s4, s5, s6];
                                                                                                                                              s2 = s3;
                                                                                                                                            } else {
                                                                                                                                              peg$currPos = s2;
                                                                                                                                              s2 = peg$FAILED;
                                                                                                                                            }
                                                                                                                                          } else {
                                                                                                                                            peg$currPos = s2;
                                                                                                                                            s2 = peg$FAILED;
                                                                                                                                          }
                                                                                                                                        } else {
                                                                                                                                          peg$currPos = s2;
                                                                                                                                          s2 = peg$FAILED;
                                                                                                                                        }
                                                                                                                                      } else {
                                                                                                                                        peg$currPos = s2;
                                                                                                                                        s2 = peg$FAILED;
                                                                                                                                      }
                                                                                                                                      if (s2 === peg$FAILED) {
                                                                                                                                        s2 = peg$currPos;
                                                                                                                                        s3 = peg$parsez();
                                                                                                                                        if (s3 !== peg$FAILED) {
                                                                                                                                          s4 = peg$parseu();
                                                                                                                                          if (s4 !== peg$FAILED) {
                                                                                                                                            s5 = peg$parseh();
                                                                                                                                            if (s5 !== peg$FAILED) {
                                                                                                                                              s6 = peg$parseu();
                                                                                                                                              if (s6 !== peg$FAILED) {
                                                                                                                                                s3 = [s3, s4, s5, s6];
                                                                                                                                                s2 = s3;
                                                                                                                                              } else {
                                                                                                                                                peg$currPos = s2;
                                                                                                                                                s2 = peg$FAILED;
                                                                                                                                              }
                                                                                                                                            } else {
                                                                                                                                              peg$currPos = s2;
                                                                                                                                              s2 = peg$FAILED;
                                                                                                                                            }
                                                                                                                                          } else {
                                                                                                                                            peg$currPos = s2;
                                                                                                                                            s2 = peg$FAILED;
                                                                                                                                          }
                                                                                                                                        } else {
                                                                                                                                          peg$currPos = s2;
                                                                                                                                          s2 = peg$FAILED;
                                                                                                                                        }
                                                                                                                                        if (s2 === peg$FAILED) {
                                                                                                                                          s2 = peg$currPos;
                                                                                                                                          s3 = peg$parses();
                                                                                                                                          if (s3 !== peg$FAILED) {
                                                                                                                                            s4 = peg$parsea();
                                                                                                                                            if (s4 !== peg$FAILED) {
                                                                                                                                              s5 = peg$parseh();
                                                                                                                                              if (s5 !== peg$FAILED) {
                                                                                                                                                s6 = peg$parsee();
                                                                                                                                                if (s6 !== peg$FAILED) {
                                                                                                                                                  s3 = [s3, s4, s5, s6];
                                                                                                                                                  s2 = s3;
                                                                                                                                                } else {
                                                                                                                                                  peg$currPos = s2;
                                                                                                                                                  s2 = peg$FAILED;
                                                                                                                                                }
                                                                                                                                              } else {
                                                                                                                                                peg$currPos = s2;
                                                                                                                                                s2 = peg$FAILED;
                                                                                                                                              }
                                                                                                                                            } else {
                                                                                                                                              peg$currPos = s2;
                                                                                                                                              s2 = peg$FAILED;
                                                                                                                                            }
                                                                                                                                          } else {
                                                                                                                                            peg$currPos = s2;
                                                                                                                                            s2 = peg$FAILED;
                                                                                                                                          }
                                                                                                                                          if (s2 === peg$FAILED) {
                                                                                                                                            s2 = peg$currPos;
                                                                                                                                            s3 = peg$parsel();
                                                                                                                                            if (s3 !== peg$FAILED) {
                                                                                                                                              s4 = peg$parsea();
                                                                                                                                              if (s4 !== peg$FAILED) {
                                                                                                                                                s5 = peg$parseh();
                                                                                                                                                if (s5 !== peg$FAILED) {
                                                                                                                                                  s6 = peg$parsea();
                                                                                                                                                  if (s6 !== peg$FAILED) {
                                                                                                                                                    s3 = [s3, s4, s5, s6];
                                                                                                                                                    s2 = s3;
                                                                                                                                                  } else {
                                                                                                                                                    peg$currPos = s2;
                                                                                                                                                    s2 = peg$FAILED;
                                                                                                                                                  }
                                                                                                                                                } else {
                                                                                                                                                  peg$currPos = s2;
                                                                                                                                                  s2 = peg$FAILED;
                                                                                                                                                }
                                                                                                                                              } else {
                                                                                                                                                peg$currPos = s2;
                                                                                                                                                s2 = peg$FAILED;
                                                                                                                                              }
                                                                                                                                            } else {
                                                                                                                                              peg$currPos = s2;
                                                                                                                                              s2 = peg$FAILED;
                                                                                                                                            }
                                                                                                                                            if (s2 === peg$FAILED) {
                                                                                                                                              s2 = peg$currPos;
                                                                                                                                              s3 = peg$parsek();
                                                                                                                                              if (s3 !== peg$FAILED) {
                                                                                                                                                s4 = peg$parsee();
                                                                                                                                                if (s4 !== peg$FAILED) {
                                                                                                                                                  s5 = peg$parseh();
                                                                                                                                                  if (s5 !== peg$FAILED) {
                                                                                                                                                    s6 = peg$parseu();
                                                                                                                                                    if (s6 !== peg$FAILED) {
                                                                                                                                                      s3 = [s3, s4, s5, s6];
                                                                                                                                                      s2 = s3;
                                                                                                                                                    } else {
                                                                                                                                                      peg$currPos = s2;
                                                                                                                                                      s2 = peg$FAILED;
                                                                                                                                                    }
                                                                                                                                                  } else {
                                                                                                                                                    peg$currPos = s2;
                                                                                                                                                    s2 = peg$FAILED;
                                                                                                                                                  }
                                                                                                                                                } else {
                                                                                                                                                  peg$currPos = s2;
                                                                                                                                                  s2 = peg$FAILED;
                                                                                                                                                }
                                                                                                                                              } else {
                                                                                                                                                peg$currPos = s2;
                                                                                                                                                s2 = peg$FAILED;
                                                                                                                                              }
                                                                                                                                              if (s2 === peg$FAILED) {
                                                                                                                                                s2 = peg$currPos;
                                                                                                                                                s3 = peg$parses();
                                                                                                                                                if (s3 !== peg$FAILED) {
                                                                                                                                                  s4 = peg$parsea();
                                                                                                                                                  if (s4 !== peg$FAILED) {
                                                                                                                                                    s5 = peg$parseh();
                                                                                                                                                    if (s5 !== peg$FAILED) {
                                                                                                                                                      s6 = peg$parseu();
                                                                                                                                                      if (s6 !== peg$FAILED) {
                                                                                                                                                        s3 = [s3, s4, s5, s6];
                                                                                                                                                        s2 = s3;
                                                                                                                                                      } else {
                                                                                                                                                        peg$currPos = s2;
                                                                                                                                                        s2 = peg$FAILED;
                                                                                                                                                      }
                                                                                                                                                    } else {
                                                                                                                                                      peg$currPos = s2;
                                                                                                                                                      s2 = peg$FAILED;
                                                                                                                                                    }
                                                                                                                                                  } else {
                                                                                                                                                    peg$currPos = s2;
                                                                                                                                                    s2 = peg$FAILED;
                                                                                                                                                  }
                                                                                                                                                } else {
                                                                                                                                                  peg$currPos = s2;
                                                                                                                                                  s2 = peg$FAILED;
                                                                                                                                                }
                                                                                                                                                if (s2 === peg$FAILED) {
                                                                                                                                                  s2 = peg$currPos;
                                                                                                                                                  s3 = peg$parsed();
                                                                                                                                                  if (s3 !== peg$FAILED) {
                                                                                                                                                    s4 = peg$parsea();
                                                                                                                                                    if (s4 !== peg$FAILED) {
                                                                                                                                                      s5 = peg$parseh();
                                                                                                                                                      if (s5 !== peg$FAILED) {
                                                                                                                                                        s6 = peg$parsei();
                                                                                                                                                        if (s6 !== peg$FAILED) {
                                                                                                                                                          s3 = [s3, s4, s5, s6];
                                                                                                                                                          s2 = s3;
                                                                                                                                                        } else {
                                                                                                                                                          peg$currPos = s2;
                                                                                                                                                          s2 = peg$FAILED;
                                                                                                                                                        }
                                                                                                                                                      } else {
                                                                                                                                                        peg$currPos = s2;
                                                                                                                                                        s2 = peg$FAILED;
                                                                                                                                                      }
                                                                                                                                                    } else {
                                                                                                                                                      peg$currPos = s2;
                                                                                                                                                      s2 = peg$FAILED;
                                                                                                                                                    }
                                                                                                                                                  } else {
                                                                                                                                                    peg$currPos = s2;
                                                                                                                                                    s2 = peg$FAILED;
                                                                                                                                                  }
                                                                                                                                                  if (s2 === peg$FAILED) {
                                                                                                                                                    s2 = peg$currPos;
                                                                                                                                                    s3 = peg$parsej();
                                                                                                                                                    if (s3 !== peg$FAILED) {
                                                                                                                                                      s4 = peg$parsee();
                                                                                                                                                      if (s4 !== peg$FAILED) {
                                                                                                                                                        s5 = peg$parseh();
                                                                                                                                                        if (s5 !== peg$FAILED) {
                                                                                                                                                          s6 = peg$parseu();
                                                                                                                                                          if (s6 !== peg$FAILED) {
                                                                                                                                                            s3 = [s3, s4, s5, s6];
                                                                                                                                                            s2 = s3;
                                                                                                                                                          } else {
                                                                                                                                                            peg$currPos = s2;
                                                                                                                                                            s2 = peg$FAILED;
                                                                                                                                                          }
                                                                                                                                                        } else {
                                                                                                                                                          peg$currPos = s2;
                                                                                                                                                          s2 = peg$FAILED;
                                                                                                                                                        }
                                                                                                                                                      } else {
                                                                                                                                                        peg$currPos = s2;
                                                                                                                                                        s2 = peg$FAILED;
                                                                                                                                                      }
                                                                                                                                                    } else {
                                                                                                                                                      peg$currPos = s2;
                                                                                                                                                      s2 = peg$FAILED;
                                                                                                                                                    }
                                                                                                                                                    if (s2 === peg$FAILED) {
                                                                                                                                                      s2 = peg$currPos;
                                                                                                                                                      s3 = peg$parses();
                                                                                                                                                      if (s3 !== peg$FAILED) {
                                                                                                                                                        s4 = peg$parsea();
                                                                                                                                                        if (s4 !== peg$FAILED) {
                                                                                                                                                          s5 = peg$parseh();
                                                                                                                                                          if (s5 !== peg$FAILED) {
                                                                                                                                                            s6 = peg$parsea();
                                                                                                                                                            if (s6 !== peg$FAILED) {
                                                                                                                                                              s3 = [s3, s4, s5, s6];
                                                                                                                                                              s2 = s3;
                                                                                                                                                            } else {
                                                                                                                                                              peg$currPos = s2;
                                                                                                                                                              s2 = peg$FAILED;
                                                                                                                                                            }
                                                                                                                                                          } else {
                                                                                                                                                            peg$currPos = s2;
                                                                                                                                                            s2 = peg$FAILED;
                                                                                                                                                          }
                                                                                                                                                        } else {
                                                                                                                                                          peg$currPos = s2;
                                                                                                                                                          s2 = peg$FAILED;
                                                                                                                                                        }
                                                                                                                                                      } else {
                                                                                                                                                        peg$currPos = s2;
                                                                                                                                                        s2 = peg$FAILED;
                                                                                                                                                      }
                                                                                                                                                      if (s2 === peg$FAILED) {
                                                                                                                                                        s2 = peg$currPos;
                                                                                                                                                        s3 = peg$parsek();
                                                                                                                                                        if (s3 !== peg$FAILED) {
                                                                                                                                                          s4 = peg$parsea();
                                                                                                                                                          if (s4 !== peg$FAILED) {
                                                                                                                                                            s5 = peg$parseu();
                                                                                                                                                            if (s5 !== peg$FAILED) {
                                                                                                                                                              s3 = [s3, s4, s5];
                                                                                                                                                              s2 = s3;
                                                                                                                                                            } else {
                                                                                                                                                              peg$currPos = s2;
                                                                                                                                                              s2 = peg$FAILED;
                                                                                                                                                            }
                                                                                                                                                          } else {
                                                                                                                                                            peg$currPos = s2;
                                                                                                                                                            s2 = peg$FAILED;
                                                                                                                                                          }
                                                                                                                                                        } else {
                                                                                                                                                          peg$currPos = s2;
                                                                                                                                                          s2 = peg$FAILED;
                                                                                                                                                        }
                                                                                                                                                        if (s2 === peg$FAILED) {
                                                                                                                                                          s2 = peg$currPos;
                                                                                                                                                          s3 = peg$parset();
                                                                                                                                                          if (s3 !== peg$FAILED) {
                                                                                                                                                            s4 = peg$parsea();
                                                                                                                                                            if (s4 !== peg$FAILED) {
                                                                                                                                                              s5 = peg$parseh();
                                                                                                                                                              if (s5 !== peg$FAILED) {
                                                                                                                                                                s6 = peg$parseu();
                                                                                                                                                                if (s6 !== peg$FAILED) {
                                                                                                                                                                  s3 = [s3, s4, s5, s6];
                                                                                                                                                                  s2 = s3;
                                                                                                                                                                } else {
                                                                                                                                                                  peg$currPos = s2;
                                                                                                                                                                  s2 = peg$FAILED;
                                                                                                                                                                }
                                                                                                                                                              } else {
                                                                                                                                                                peg$currPos = s2;
                                                                                                                                                                s2 = peg$FAILED;
                                                                                                                                                              }
                                                                                                                                                            } else {
                                                                                                                                                              peg$currPos = s2;
                                                                                                                                                              s2 = peg$FAILED;
                                                                                                                                                            }
                                                                                                                                                          } else {
                                                                                                                                                            peg$currPos = s2;
                                                                                                                                                            s2 = peg$FAILED;
                                                                                                                                                          }
                                                                                                                                                          if (s2 === peg$FAILED) {
                                                                                                                                                            s2 = peg$currPos;
                                                                                                                                                            s3 = peg$parsen();
                                                                                                                                                            if (s3 !== peg$FAILED) {
                                                                                                                                                              s4 = peg$parsea();
                                                                                                                                                              if (s4 !== peg$FAILED) {
                                                                                                                                                                s5 = peg$parseh();
                                                                                                                                                                if (s5 !== peg$FAILED) {
                                                                                                                                                                  s6 = peg$parsei();
                                                                                                                                                                  if (s6 !== peg$FAILED) {
                                                                                                                                                                    s3 = [s3, s4, s5, s6];
                                                                                                                                                                    s2 = s3;
                                                                                                                                                                  } else {
                                                                                                                                                                    peg$currPos = s2;
                                                                                                                                                                    s2 = peg$FAILED;
                                                                                                                                                                  }
                                                                                                                                                                } else {
                                                                                                                                                                  peg$currPos = s2;
                                                                                                                                                                  s2 = peg$FAILED;
                                                                                                                                                                }
                                                                                                                                                              } else {
                                                                                                                                                                peg$currPos = s2;
                                                                                                                                                                s2 = peg$FAILED;
                                                                                                                                                              }
                                                                                                                                                            } else {
                                                                                                                                                              peg$currPos = s2;
                                                                                                                                                              s2 = peg$FAILED;
                                                                                                                                                            }
                                                                                                                                                            if (s2 === peg$FAILED) {
                                                                                                                                                              s2 = peg$currPos;
                                                                                                                                                              s3 = peg$parsej();
                                                                                                                                                              if (s3 !== peg$FAILED) {
                                                                                                                                                                s4 = peg$parseo();
                                                                                                                                                                if (s4 !== peg$FAILED) {
                                                                                                                                                                  s5 = peg$parseh();
                                                                                                                                                                  if (s5 !== peg$FAILED) {
                                                                                                                                                                    s6 = peg$parsea();
                                                                                                                                                                    if (s6 !== peg$FAILED) {
                                                                                                                                                                      s3 = [s3, s4, s5, s6];
                                                                                                                                                                      s2 = s3;
                                                                                                                                                                    } else {
                                                                                                                                                                      peg$currPos = s2;
                                                                                                                                                                      s2 = peg$FAILED;
                                                                                                                                                                    }
                                                                                                                                                                  } else {
                                                                                                                                                                    peg$currPos = s2;
                                                                                                                                                                    s2 = peg$FAILED;
                                                                                                                                                                  }
                                                                                                                                                                } else {
                                                                                                                                                                  peg$currPos = s2;
                                                                                                                                                                  s2 = peg$FAILED;
                                                                                                                                                                }
                                                                                                                                                              } else {
                                                                                                                                                                peg$currPos = s2;
                                                                                                                                                                s2 = peg$FAILED;
                                                                                                                                                              }
                                                                                                                                                              if (s2 === peg$FAILED) {
                                                                                                                                                                s2 = peg$currPos;
                                                                                                                                                                s3 = peg$parseb();
                                                                                                                                                                if (s3 !== peg$FAILED) {
                                                                                                                                                                  s4 = peg$parsei();
                                                                                                                                                                  if (s4 !== peg$FAILED) {
                                                                                                                                                                    s5 = peg$parseh();
                                                                                                                                                                    if (s5 !== peg$FAILED) {
                                                                                                                                                                      s6 = peg$parseu();
                                                                                                                                                                      if (s6 !== peg$FAILED) {
                                                                                                                                                                        s3 = [s3, s4, s5, s6];
                                                                                                                                                                        s2 = s3;
                                                                                                                                                                      } else {
                                                                                                                                                                        peg$currPos = s2;
                                                                                                                                                                        s2 = peg$FAILED;
                                                                                                                                                                      }
                                                                                                                                                                    } else {
                                                                                                                                                                      peg$currPos = s2;
                                                                                                                                                                      s2 = peg$FAILED;
                                                                                                                                                                    }
                                                                                                                                                                  } else {
                                                                                                                                                                    peg$currPos = s2;
                                                                                                                                                                    s2 = peg$FAILED;
                                                                                                                                                                  }
                                                                                                                                                                } else {
                                                                                                                                                                  peg$currPos = s2;
                                                                                                                                                                  s2 = peg$FAILED;
                                                                                                                                                                }
                                                                                                                                                                if (s2 === peg$FAILED) {
                                                                                                                                                                  s2 = peg$currPos;
                                                                                                                                                                  s3 = peg$parsel();
                                                                                                                                                                  if (s3 !== peg$FAILED) {
                                                                                                                                                                    s4 = peg$parsei();
                                                                                                                                                                    if (s4 !== peg$FAILED) {
                                                                                                                                                                      s5 = peg$parseh();
                                                                                                                                                                      if (s5 !== peg$FAILED) {
                                                                                                                                                                        s6 = peg$parseo();
                                                                                                                                                                        if (s6 !== peg$FAILED) {
                                                                                                                                                                          s3 = [s3, s4, s5, s6];
                                                                                                                                                                          s2 = s3;
                                                                                                                                                                        } else {
                                                                                                                                                                          peg$currPos = s2;
                                                                                                                                                                          s2 = peg$FAILED;
                                                                                                                                                                        }
                                                                                                                                                                      } else {
                                                                                                                                                                        peg$currPos = s2;
                                                                                                                                                                        s2 = peg$FAILED;
                                                                                                                                                                      }
                                                                                                                                                                    } else {
                                                                                                                                                                      peg$currPos = s2;
                                                                                                                                                                      s2 = peg$FAILED;
                                                                                                                                                                    }
                                                                                                                                                                  } else {
                                                                                                                                                                    peg$currPos = s2;
                                                                                                                                                                    s2 = peg$FAILED;
                                                                                                                                                                  }
                                                                                                                                                                  if (s2 === peg$FAILED) {
                                                                                                                                                                    s2 = peg$currPos;
                                                                                                                                                                    s3 = peg$parsep();
                                                                                                                                                                    if (s3 !== peg$FAILED) {
                                                                                                                                                                      s4 = peg$parsea();
                                                                                                                                                                      if (s4 !== peg$FAILED) {
                                                                                                                                                                        s5 = peg$parseu();
                                                                                                                                                                        if (s5 !== peg$FAILED) {
                                                                                                                                                                          s3 = [s3, s4, s5];
                                                                                                                                                                          s2 = s3;
                                                                                                                                                                        } else {
                                                                                                                                                                          peg$currPos = s2;
                                                                                                                                                                          s2 = peg$FAILED;
                                                                                                                                                                        }
                                                                                                                                                                      } else {
                                                                                                                                                                        peg$currPos = s2;
                                                                                                                                                                        s2 = peg$FAILED;
                                                                                                                                                                      }
                                                                                                                                                                    } else {
                                                                                                                                                                      peg$currPos = s2;
                                                                                                                                                                      s2 = peg$FAILED;
                                                                                                                                                                    }
                                                                                                                                                                    if (s2 === peg$FAILED) {
                                                                                                                                                                      s2 = peg$currPos;
                                                                                                                                                                      s3 = peg$parsem();
                                                                                                                                                                      if (s3 !== peg$FAILED) {
                                                                                                                                                                        s4 = peg$parsei();
                                                                                                                                                                        if (s4 !== peg$FAILED) {
                                                                                                                                                                          s5 = peg$parseh();
                                                                                                                                                                          if (s5 !== peg$FAILED) {
                                                                                                                                                                            s6 = peg$parseu();
                                                                                                                                                                            if (s6 !== peg$FAILED) {
                                                                                                                                                                              s3 = [s3, s4, s5, s6];
                                                                                                                                                                              s2 = s3;
                                                                                                                                                                            } else {
                                                                                                                                                                              peg$currPos = s2;
                                                                                                                                                                              s2 = peg$FAILED;
                                                                                                                                                                            }
                                                                                                                                                                          } else {
                                                                                                                                                                            peg$currPos = s2;
                                                                                                                                                                            s2 = peg$FAILED;
                                                                                                                                                                          }
                                                                                                                                                                        } else {
                                                                                                                                                                          peg$currPos = s2;
                                                                                                                                                                          s2 = peg$FAILED;
                                                                                                                                                                        }
                                                                                                                                                                      } else {
                                                                                                                                                                        peg$currPos = s2;
                                                                                                                                                                        s2 = peg$FAILED;
                                                                                                                                                                      }
                                                                                                                                                                      if (s2 === peg$FAILED) {
                                                                                                                                                                        s2 = peg$currPos;
                                                                                                                                                                        s3 = peg$parsek();
                                                                                                                                                                        if (s3 !== peg$FAILED) {
                                                                                                                                                                          s4 = peg$parseu();
                                                                                                                                                                          if (s4 !== peg$FAILED) {
                                                                                                                                                                            s5 = peg$parseh();
                                                                                                                                                                            if (s5 !== peg$FAILED) {
                                                                                                                                                                              s6 = peg$parsei();
                                                                                                                                                                              if (s6 !== peg$FAILED) {
                                                                                                                                                                                s3 = [s3, s4, s5, s6];
                                                                                                                                                                                s2 = s3;
                                                                                                                                                                              } else {
                                                                                                                                                                                peg$currPos = s2;
                                                                                                                                                                                s2 = peg$FAILED;
                                                                                                                                                                              }
                                                                                                                                                                            } else {
                                                                                                                                                                              peg$currPos = s2;
                                                                                                                                                                              s2 = peg$FAILED;
                                                                                                                                                                            }
                                                                                                                                                                          } else {
                                                                                                                                                                            peg$currPos = s2;
                                                                                                                                                                            s2 = peg$FAILED;
                                                                                                                                                                          }
                                                                                                                                                                        } else {
                                                                                                                                                                          peg$currPos = s2;
                                                                                                                                                                          s2 = peg$FAILED;
                                                                                                                                                                        }
                                                                                                                                                                        if (s2 === peg$FAILED) {
                                                                                                                                                                          s2 = peg$currPos;
                                                                                                                                                                          s3 = peg$parsej();
                                                                                                                                                                          if (s3 !== peg$FAILED) {
                                                                                                                                                                            s4 = peg$parsei();
                                                                                                                                                                            if (s4 !== peg$FAILED) {
                                                                                                                                                                              s5 = peg$parseh();
                                                                                                                                                                              if (s5 !== peg$FAILED) {
                                                                                                                                                                                s6 = peg$parsea();
                                                                                                                                                                                if (s6 !== peg$FAILED) {
                                                                                                                                                                                  s3 = [s3, s4, s5, s6];
                                                                                                                                                                                  s2 = s3;
                                                                                                                                                                                } else {
                                                                                                                                                                                  peg$currPos = s2;
                                                                                                                                                                                  s2 = peg$FAILED;
                                                                                                                                                                                }
                                                                                                                                                                              } else {
                                                                                                                                                                                peg$currPos = s2;
                                                                                                                                                                                s2 = peg$FAILED;
                                                                                                                                                                              }
                                                                                                                                                                            } else {
                                                                                                                                                                              peg$currPos = s2;
                                                                                                                                                                              s2 = peg$FAILED;
                                                                                                                                                                            }
                                                                                                                                                                          } else {
                                                                                                                                                                            peg$currPos = s2;
                                                                                                                                                                            s2 = peg$FAILED;
                                                                                                                                                                          }
                                                                                                                                                                          if (s2 === peg$FAILED) {
                                                                                                                                                                            s2 = peg$currPos;
                                                                                                                                                                            s3 = peg$parses();
                                                                                                                                                                            if (s3 !== peg$FAILED) {
                                                                                                                                                                              s4 = peg$parsei();
                                                                                                                                                                              if (s4 !== peg$FAILED) {
                                                                                                                                                                                s5 = peg$parseh();
                                                                                                                                                                                if (s5 !== peg$FAILED) {
                                                                                                                                                                                  s6 = peg$parsea();
                                                                                                                                                                                  if (s6 !== peg$FAILED) {
                                                                                                                                                                                    s3 = [s3, s4, s5, s6];
                                                                                                                                                                                    s2 = s3;
                                                                                                                                                                                  } else {
                                                                                                                                                                                    peg$currPos = s2;
                                                                                                                                                                                    s2 = peg$FAILED;
                                                                                                                                                                                  }
                                                                                                                                                                                } else {
                                                                                                                                                                                  peg$currPos = s2;
                                                                                                                                                                                  s2 = peg$FAILED;
                                                                                                                                                                                }
                                                                                                                                                                              } else {
                                                                                                                                                                                peg$currPos = s2;
                                                                                                                                                                                s2 = peg$FAILED;
                                                                                                                                                                              }
                                                                                                                                                                            } else {
                                                                                                                                                                              peg$currPos = s2;
                                                                                                                                                                              s2 = peg$FAILED;
                                                                                                                                                                            }
                                                                                                                                                                            if (s2 === peg$FAILED) {
                                                                                                                                                                              s2 = peg$currPos;
                                                                                                                                                                              s3 = peg$parsep();
                                                                                                                                                                              if (s3 !== peg$FAILED) {
                                                                                                                                                                                s4 = peg$parseo();
                                                                                                                                                                                if (s4 !== peg$FAILED) {
                                                                                                                                                                                  s5 = peg$parseh();
                                                                                                                                                                                  if (s5 !== peg$FAILED) {
                                                                                                                                                                                    s6 = peg$parseo();
                                                                                                                                                                                    if (s6 !== peg$FAILED) {
                                                                                                                                                                                      s3 = [s3, s4, s5, s6];
                                                                                                                                                                                      s2 = s3;
                                                                                                                                                                                    } else {
                                                                                                                                                                                      peg$currPos = s2;
                                                                                                                                                                                      s2 = peg$FAILED;
                                                                                                                                                                                    }
                                                                                                                                                                                  } else {
                                                                                                                                                                                    peg$currPos = s2;
                                                                                                                                                                                    s2 = peg$FAILED;
                                                                                                                                                                                  }
                                                                                                                                                                                } else {
                                                                                                                                                                                  peg$currPos = s2;
                                                                                                                                                                                  s2 = peg$FAILED;
                                                                                                                                                                                }
                                                                                                                                                                              } else {
                                                                                                                                                                                peg$currPos = s2;
                                                                                                                                                                                s2 = peg$FAILED;
                                                                                                                                                                              }
                                                                                                                                                                              if (s2 === peg$FAILED) {
                                                                                                                                                                                s2 = peg$currPos;
                                                                                                                                                                                s3 = peg$parsep();
                                                                                                                                                                                if (s3 !== peg$FAILED) {
                                                                                                                                                                                  s4 = peg$parsee();
                                                                                                                                                                                  if (s4 !== peg$FAILED) {
                                                                                                                                                                                    s5 = peg$parseh();
                                                                                                                                                                                    if (s5 !== peg$FAILED) {
                                                                                                                                                                                      s6 = peg$parsea();
                                                                                                                                                                                      if (s6 !== peg$FAILED) {
                                                                                                                                                                                        s3 = [s3, s4, s5, s6];
                                                                                                                                                                                        s2 = s3;
                                                                                                                                                                                      } else {
                                                                                                                                                                                        peg$currPos = s2;
                                                                                                                                                                                        s2 = peg$FAILED;
                                                                                                                                                                                      }
                                                                                                                                                                                    } else {
                                                                                                                                                                                      peg$currPos = s2;
                                                                                                                                                                                      s2 = peg$FAILED;
                                                                                                                                                                                    }
                                                                                                                                                                                  } else {
                                                                                                                                                                                    peg$currPos = s2;
                                                                                                                                                                                    s2 = peg$FAILED;
                                                                                                                                                                                  }
                                                                                                                                                                                } else {
                                                                                                                                                                                  peg$currPos = s2;
                                                                                                                                                                                  s2 = peg$FAILED;
                                                                                                                                                                                }
                                                                                                                                                                                if (s2 === peg$FAILED) {
                                                                                                                                                                                  s2 = peg$currPos;
                                                                                                                                                                                  s3 = peg$parser();
                                                                                                                                                                                  if (s3 !== peg$FAILED) {
                                                                                                                                                                                    s4 = peg$parseo();
                                                                                                                                                                                    if (s4 !== peg$FAILED) {
                                                                                                                                                                                      s5 = peg$parseh();
                                                                                                                                                                                      if (s5 !== peg$FAILED) {
                                                                                                                                                                                        s6 = peg$parsei();
                                                                                                                                                                                        if (s6 !== peg$FAILED) {
                                                                                                                                                                                          s3 = [s3, s4, s5, s6];
                                                                                                                                                                                          s2 = s3;
                                                                                                                                                                                        } else {
                                                                                                                                                                                          peg$currPos = s2;
                                                                                                                                                                                          s2 = peg$FAILED;
                                                                                                                                                                                        }
                                                                                                                                                                                      } else {
                                                                                                                                                                                        peg$currPos = s2;
                                                                                                                                                                                        s2 = peg$FAILED;
                                                                                                                                                                                      }
                                                                                                                                                                                    } else {
                                                                                                                                                                                      peg$currPos = s2;
                                                                                                                                                                                      s2 = peg$FAILED;
                                                                                                                                                                                    }
                                                                                                                                                                                  } else {
                                                                                                                                                                                    peg$currPos = s2;
                                                                                                                                                                                    s2 = peg$FAILED;
                                                                                                                                                                                  }
                                                                                                                                                                                  if (s2 === peg$FAILED) {
                                                                                                                                                                                    s2 = peg$currPos;
                                                                                                                                                                                    s3 = peg$parser();
                                                                                                                                                                                    if (s3 !== peg$FAILED) {
                                                                                                                                                                                      s4 = peg$parseo();
                                                                                                                                                                                      if (s4 !== peg$FAILED) {
                                                                                                                                                                                        s5 = peg$parseh();
                                                                                                                                                                                        if (s5 !== peg$FAILED) {
                                                                                                                                                                                          s6 = peg$parsee();
                                                                                                                                                                                          if (s6 !== peg$FAILED) {
                                                                                                                                                                                            s3 = [s3, s4, s5, s6];
                                                                                                                                                                                            s2 = s3;
                                                                                                                                                                                          } else {
                                                                                                                                                                                            peg$currPos = s2;
                                                                                                                                                                                            s2 = peg$FAILED;
                                                                                                                                                                                          }
                                                                                                                                                                                        } else {
                                                                                                                                                                                          peg$currPos = s2;
                                                                                                                                                                                          s2 = peg$FAILED;
                                                                                                                                                                                        }
                                                                                                                                                                                      } else {
                                                                                                                                                                                        peg$currPos = s2;
                                                                                                                                                                                        s2 = peg$FAILED;
                                                                                                                                                                                      }
                                                                                                                                                                                    } else {
                                                                                                                                                                                      peg$currPos = s2;
                                                                                                                                                                                      s2 = peg$FAILED;
                                                                                                                                                                                    }
                                                                                                                                                                                    if (s2 === peg$FAILED) {
                                                                                                                                                                                      s2 = peg$currPos;
                                                                                                                                                                                      s3 = peg$parser();
                                                                                                                                                                                      if (s3 !== peg$FAILED) {
                                                                                                                                                                                        s4 = peg$parseo();
                                                                                                                                                                                        if (s4 !== peg$FAILED) {
                                                                                                                                                                                          s5 = peg$parseh();
                                                                                                                                                                                          if (s5 !== peg$FAILED) {
                                                                                                                                                                                            s6 = peg$parseo();
                                                                                                                                                                                            if (s6 !== peg$FAILED) {
                                                                                                                                                                                              s3 = [s3, s4, s5, s6];
                                                                                                                                                                                              s2 = s3;
                                                                                                                                                                                            } else {
                                                                                                                                                                                              peg$currPos = s2;
                                                                                                                                                                                              s2 = peg$FAILED;
                                                                                                                                                                                            }
                                                                                                                                                                                          } else {
                                                                                                                                                                                            peg$currPos = s2;
                                                                                                                                                                                            s2 = peg$FAILED;
                                                                                                                                                                                          }
                                                                                                                                                                                        } else {
                                                                                                                                                                                          peg$currPos = s2;
                                                                                                                                                                                          s2 = peg$FAILED;
                                                                                                                                                                                        }
                                                                                                                                                                                      } else {
                                                                                                                                                                                        peg$currPos = s2;
                                                                                                                                                                                        s2 = peg$FAILED;
                                                                                                                                                                                      }
                                                                                                                                                                                      if (s2 === peg$FAILED) {
                                                                                                                                                                                        s2 = peg$currPos;
                                                                                                                                                                                        s3 = peg$parser();
                                                                                                                                                                                        if (s3 !== peg$FAILED) {
                                                                                                                                                                                          s4 = peg$parseo();
                                                                                                                                                                                          if (s4 !== peg$FAILED) {
                                                                                                                                                                                            s5 = peg$parseh();
                                                                                                                                                                                            if (s5 !== peg$FAILED) {
                                                                                                                                                                                              s6 = peg$parseu();
                                                                                                                                                                                              if (s6 !== peg$FAILED) {
                                                                                                                                                                                                s3 = [s3, s4, s5, s6];
                                                                                                                                                                                                s2 = s3;
                                                                                                                                                                                              } else {
                                                                                                                                                                                                peg$currPos = s2;
                                                                                                                                                                                                s2 = peg$FAILED;
                                                                                                                                                                                              }
                                                                                                                                                                                            } else {
                                                                                                                                                                                              peg$currPos = s2;
                                                                                                                                                                                              s2 = peg$FAILED;
                                                                                                                                                                                            }
                                                                                                                                                                                          } else {
                                                                                                                                                                                            peg$currPos = s2;
                                                                                                                                                                                            s2 = peg$FAILED;
                                                                                                                                                                                          }
                                                                                                                                                                                        } else {
                                                                                                                                                                                          peg$currPos = s2;
                                                                                                                                                                                          s2 = peg$FAILED;
                                                                                                                                                                                        }
                                                                                                                                                                                        if (s2 === peg$FAILED) {
                                                                                                                                                                                          s2 = peg$currPos;
                                                                                                                                                                                          s3 = peg$parser();
                                                                                                                                                                                          if (s3 !== peg$FAILED) {
                                                                                                                                                                                            s4 = peg$parseo();
                                                                                                                                                                                            if (s4 !== peg$FAILED) {
                                                                                                                                                                                              s5 = peg$parseh();
                                                                                                                                                                                              if (s5 !== peg$FAILED) {
                                                                                                                                                                                                s6 = peg$parsea();
                                                                                                                                                                                                if (s6 !== peg$FAILED) {
                                                                                                                                                                                                  s3 = [s3, s4, s5, s6];
                                                                                                                                                                                                  s2 = s3;
                                                                                                                                                                                                } else {
                                                                                                                                                                                                  peg$currPos = s2;
                                                                                                                                                                                                  s2 = peg$FAILED;
                                                                                                                                                                                                }
                                                                                                                                                                                              } else {
                                                                                                                                                                                                peg$currPos = s2;
                                                                                                                                                                                                s2 = peg$FAILED;
                                                                                                                                                                                              }
                                                                                                                                                                                            } else {
                                                                                                                                                                                              peg$currPos = s2;
                                                                                                                                                                                              s2 = peg$FAILED;
                                                                                                                                                                                            }
                                                                                                                                                                                          } else {
                                                                                                                                                                                            peg$currPos = s2;
                                                                                                                                                                                            s2 = peg$FAILED;
                                                                                                                                                                                          }
                                                                                                                                                                                          if (s2 === peg$FAILED) {
                                                                                                                                                                                            s2 = peg$currPos;
                                                                                                                                                                                            s3 = peg$parser();
                                                                                                                                                                                            if (s3 !== peg$FAILED) {
                                                                                                                                                                                              s4 = peg$parsee();
                                                                                                                                                                                              if (s4 !== peg$FAILED) {
                                                                                                                                                                                                s5 = peg$parseh();
                                                                                                                                                                                                if (s5 !== peg$FAILED) {
                                                                                                                                                                                                  s6 = peg$parsee();
                                                                                                                                                                                                  if (s6 !== peg$FAILED) {
                                                                                                                                                                                                    s3 = [s3, s4, s5, s6];
                                                                                                                                                                                                    s2 = s3;
                                                                                                                                                                                                  } else {
                                                                                                                                                                                                    peg$currPos = s2;
                                                                                                                                                                                                    s2 = peg$FAILED;
                                                                                                                                                                                                  }
                                                                                                                                                                                                } else {
                                                                                                                                                                                                  peg$currPos = s2;
                                                                                                                                                                                                  s2 = peg$FAILED;
                                                                                                                                                                                                }
                                                                                                                                                                                              } else {
                                                                                                                                                                                                peg$currPos = s2;
                                                                                                                                                                                                s2 = peg$FAILED;
                                                                                                                                                                                              }
                                                                                                                                                                                            } else {
                                                                                                                                                                                              peg$currPos = s2;
                                                                                                                                                                                              s2 = peg$FAILED;
                                                                                                                                                                                            }
                                                                                                                                                                                            if (s2 === peg$FAILED) {
                                                                                                                                                                                              s2 = peg$currPos;
                                                                                                                                                                                              s3 = peg$parsel();
                                                                                                                                                                                              if (s3 !== peg$FAILED) {
                                                                                                                                                                                                s4 = peg$parsee();
                                                                                                                                                                                                if (s4 !== peg$FAILED) {
                                                                                                                                                                                                  s5 = peg$parseh();
                                                                                                                                                                                                  if (s5 !== peg$FAILED) {
                                                                                                                                                                                                    s6 = peg$parseo();
                                                                                                                                                                                                    if (s6 !== peg$FAILED) {
                                                                                                                                                                                                      s3 = [s3, s4, s5, s6];
                                                                                                                                                                                                      s2 = s3;
                                                                                                                                                                                                    } else {
                                                                                                                                                                                                      peg$currPos = s2;
                                                                                                                                                                                                      s2 = peg$FAILED;
                                                                                                                                                                                                    }
                                                                                                                                                                                                  } else {
                                                                                                                                                                                                    peg$currPos = s2;
                                                                                                                                                                                                    s2 = peg$FAILED;
                                                                                                                                                                                                  }
                                                                                                                                                                                                } else {
                                                                                                                                                                                                  peg$currPos = s2;
                                                                                                                                                                                                  s2 = peg$FAILED;
                                                                                                                                                                                                }
                                                                                                                                                                                              } else {
                                                                                                                                                                                                peg$currPos = s2;
                                                                                                                                                                                                s2 = peg$FAILED;
                                                                                                                                                                                              }
                                                                                                                                                                                              if (s2 === peg$FAILED) {
                                                                                                                                                                                                s2 = peg$currPos;
                                                                                                                                                                                                s3 = peg$parsej();
                                                                                                                                                                                                if (s3 !== peg$FAILED) {
                                                                                                                                                                                                  s4 = peg$parseu();
                                                                                                                                                                                                  if (s4 !== peg$FAILED) {
                                                                                                                                                                                                    s5 = peg$parseh();
                                                                                                                                                                                                    if (s5 !== peg$FAILED) {
                                                                                                                                                                                                      s6 = peg$parseo();
                                                                                                                                                                                                      if (s6 !== peg$FAILED) {
                                                                                                                                                                                                        s3 = [s3, s4, s5, s6];
                                                                                                                                                                                                        s2 = s3;
                                                                                                                                                                                                      } else {
                                                                                                                                                                                                        peg$currPos = s2;
                                                                                                                                                                                                        s2 = peg$FAILED;
                                                                                                                                                                                                      }
                                                                                                                                                                                                    } else {
                                                                                                                                                                                                      peg$currPos = s2;
                                                                                                                                                                                                      s2 = peg$FAILED;
                                                                                                                                                                                                    }
                                                                                                                                                                                                  } else {
                                                                                                                                                                                                    peg$currPos = s2;
                                                                                                                                                                                                    s2 = peg$FAILED;
                                                                                                                                                                                                  }
                                                                                                                                                                                                } else {
                                                                                                                                                                                                  peg$currPos = s2;
                                                                                                                                                                                                  s2 = peg$FAILED;
                                                                                                                                                                                                }
                                                                                                                                                                                                if (s2 === peg$FAILED) {
                                                                                                                                                                                                  s2 = peg$currPos;
                                                                                                                                                                                                  s3 = peg$parsef();
                                                                                                                                                                                                  if (s3 !== peg$FAILED) {
                                                                                                                                                                                                    s4 = peg$parseu();
                                                                                                                                                                                                    if (s4 !== peg$FAILED) {
                                                                                                                                                                                                      s5 = peg$parseh();
                                                                                                                                                                                                      if (s5 !== peg$FAILED) {
                                                                                                                                                                                                        s6 = peg$parsei();
                                                                                                                                                                                                        if (s6 !== peg$FAILED) {
                                                                                                                                                                                                          s3 = [s3, s4, s5, s6];
                                                                                                                                                                                                          s2 = s3;
                                                                                                                                                                                                        } else {
                                                                                                                                                                                                          peg$currPos = s2;
                                                                                                                                                                                                          s2 = peg$FAILED;
                                                                                                                                                                                                        }
                                                                                                                                                                                                      } else {
                                                                                                                                                                                                        peg$currPos = s2;
                                                                                                                                                                                                        s2 = peg$FAILED;
                                                                                                                                                                                                      }
                                                                                                                                                                                                    } else {
                                                                                                                                                                                                      peg$currPos = s2;
                                                                                                                                                                                                      s2 = peg$FAILED;
                                                                                                                                                                                                    }
                                                                                                                                                                                                  } else {
                                                                                                                                                                                                    peg$currPos = s2;
                                                                                                                                                                                                    s2 = peg$FAILED;
                                                                                                                                                                                                  }
                                                                                                                                                                                                  if (s2 === peg$FAILED) {
                                                                                                                                                                                                    s2 = peg$currPos;
                                                                                                                                                                                                    s3 = peg$parsed();
                                                                                                                                                                                                    if (s3 !== peg$FAILED) {
                                                                                                                                                                                                      s4 = peg$parsea();
                                                                                                                                                                                                      if (s4 !== peg$FAILED) {
                                                                                                                                                                                                        s5 = peg$parsei();
                                                                                                                                                                                                        if (s5 !== peg$FAILED) {
                                                                                                                                                                                                          s3 = [s3, s4, s5];
                                                                                                                                                                                                          s2 = s3;
                                                                                                                                                                                                        } else {
                                                                                                                                                                                                          peg$currPos = s2;
                                                                                                                                                                                                          s2 = peg$FAILED;
                                                                                                                                                                                                        }
                                                                                                                                                                                                      } else {
                                                                                                                                                                                                        peg$currPos = s2;
                                                                                                                                                                                                        s2 = peg$FAILED;
                                                                                                                                                                                                      }
                                                                                                                                                                                                    } else {
                                                                                                                                                                                                      peg$currPos = s2;
                                                                                                                                                                                                      s2 = peg$FAILED;
                                                                                                                                                                                                    }
                                                                                                                                                                                                    if (s2 === peg$FAILED) {
                                                                                                                                                                                                      s2 = peg$currPos;
                                                                                                                                                                                                      s3 = peg$parseg();
                                                                                                                                                                                                      if (s3 !== peg$FAILED) {
                                                                                                                                                                                                        s4 = peg$parsea();
                                                                                                                                                                                                        if (s4 !== peg$FAILED) {
                                                                                                                                                                                                          s5 = peg$parseh();
                                                                                                                                                                                                          if (s5 !== peg$FAILED) {
                                                                                                                                                                                                            s6 = peg$parsei();
                                                                                                                                                                                                            if (s6 !== peg$FAILED) {
                                                                                                                                                                                                              s3 = [s3, s4, s5, s6];
                                                                                                                                                                                                              s2 = s3;
                                                                                                                                                                                                            } else {
                                                                                                                                                                                                              peg$currPos = s2;
                                                                                                                                                                                                              s2 = peg$FAILED;
                                                                                                                                                                                                            }
                                                                                                                                                                                                          } else {
                                                                                                                                                                                                            peg$currPos = s2;
                                                                                                                                                                                                            s2 = peg$FAILED;
                                                                                                                                                                                                          }
                                                                                                                                                                                                        } else {
                                                                                                                                                                                                          peg$currPos = s2;
                                                                                                                                                                                                          s2 = peg$FAILED;
                                                                                                                                                                                                        }
                                                                                                                                                                                                      } else {
                                                                                                                                                                                                        peg$currPos = s2;
                                                                                                                                                                                                        s2 = peg$FAILED;
                                                                                                                                                                                                      }
                                                                                                                                                                                                      if (s2 === peg$FAILED) {
                                                                                                                                                                                                        s2 = peg$currPos;
                                                                                                                                                                                                        s3 = peg$parsez();
                                                                                                                                                                                                        if (s3 !== peg$FAILED) {
                                                                                                                                                                                                          s4 = peg$parseo();
                                                                                                                                                                                                          if (s4 !== peg$FAILED) {
                                                                                                                                                                                                            s5 = peg$parseh();
                                                                                                                                                                                                            if (s5 !== peg$FAILED) {
                                                                                                                                                                                                              s6 = peg$parseo();
                                                                                                                                                                                                              if (s6 !== peg$FAILED) {
                                                                                                                                                                                                                s3 = [s3, s4, s5, s6];
                                                                                                                                                                                                                s2 = s3;
                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                peg$currPos = s2;
                                                                                                                                                                                                                s2 = peg$FAILED;
                                                                                                                                                                                                              }
                                                                                                                                                                                                            } else {
                                                                                                                                                                                                              peg$currPos = s2;
                                                                                                                                                                                                              s2 = peg$FAILED;
                                                                                                                                                                                                            }
                                                                                                                                                                                                          } else {
                                                                                                                                                                                                            peg$currPos = s2;
                                                                                                                                                                                                            s2 = peg$FAILED;
                                                                                                                                                                                                          }
                                                                                                                                                                                                        } else {
                                                                                                                                                                                                          peg$currPos = s2;
                                                                                                                                                                                                          s2 = peg$FAILED;
                                                                                                                                                                                                        }
                                                                                                                                                                                                        if (s2 === peg$FAILED) {
                                                                                                                                                                                                          s2 = peg$currPos;
                                                                                                                                                                                                          s3 = peg$parseb();
                                                                                                                                                                                                          if (s3 !== peg$FAILED) {
                                                                                                                                                                                                            s4 = peg$parsee();
                                                                                                                                                                                                            if (s4 !== peg$FAILED) {
                                                                                                                                                                                                              s5 = peg$parseh();
                                                                                                                                                                                                              if (s5 !== peg$FAILED) {
                                                                                                                                                                                                                s6 = peg$parseu();
                                                                                                                                                                                                                if (s6 !== peg$FAILED) {
                                                                                                                                                                                                                  s3 = [s3, s4, s5, s6];
                                                                                                                                                                                                                  s2 = s3;
                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                  peg$currPos = s2;
                                                                                                                                                                                                                  s2 = peg$FAILED;
                                                                                                                                                                                                                }
                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                peg$currPos = s2;
                                                                                                                                                                                                                s2 = peg$FAILED;
                                                                                                                                                                                                              }
                                                                                                                                                                                                            } else {
                                                                                                                                                                                                              peg$currPos = s2;
                                                                                                                                                                                                              s2 = peg$FAILED;
                                                                                                                                                                                                            }
                                                                                                                                                                                                          } else {
                                                                                                                                                                                                            peg$currPos = s2;
                                                                                                                                                                                                            s2 = peg$FAILED;
                                                                                                                                                                                                          }
                                                                                                                                                                                                          if (s2 === peg$FAILED) {
                                                                                                                                                                                                            s2 = peg$currPos;
                                                                                                                                                                                                            s3 = peg$parser();
                                                                                                                                                                                                            if (s3 !== peg$FAILED) {
                                                                                                                                                                                                              s4 = peg$parsei();
                                                                                                                                                                                                              if (s4 !== peg$FAILED) {
                                                                                                                                                                                                                s5 = peg$parseh();
                                                                                                                                                                                                                if (s5 !== peg$FAILED) {
                                                                                                                                                                                                                  s6 = peg$parsee();
                                                                                                                                                                                                                  if (s6 !== peg$FAILED) {
                                                                                                                                                                                                                    s3 = [s3, s4, s5, s6];
                                                                                                                                                                                                                    s2 = s3;
                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                    peg$currPos = s2;
                                                                                                                                                                                                                    s2 = peg$FAILED;
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                  peg$currPos = s2;
                                                                                                                                                                                                                  s2 = peg$FAILED;
                                                                                                                                                                                                                }
                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                peg$currPos = s2;
                                                                                                                                                                                                                s2 = peg$FAILED;
                                                                                                                                                                                                              }
                                                                                                                                                                                                            } else {
                                                                                                                                                                                                              peg$currPos = s2;
                                                                                                                                                                                                              s2 = peg$FAILED;
                                                                                                                                                                                                            }
                                                                                                                                                                                                            if (s2 === peg$FAILED) {
                                                                                                                                                                                                              s2 = peg$currPos;
                                                                                                                                                                                                              s3 = peg$parses();
                                                                                                                                                                                                              if (s3 !== peg$FAILED) {
                                                                                                                                                                                                                s4 = peg$parsee();
                                                                                                                                                                                                                if (s4 !== peg$FAILED) {
                                                                                                                                                                                                                  s5 = peg$parseh();
                                                                                                                                                                                                                  if (s5 !== peg$FAILED) {
                                                                                                                                                                                                                    s6 = peg$parsei();
                                                                                                                                                                                                                    if (s6 !== peg$FAILED) {
                                                                                                                                                                                                                      s3 = [s3, s4, s5, s6];
                                                                                                                                                                                                                      s2 = s3;
                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                      peg$currPos = s2;
                                                                                                                                                                                                                      s2 = peg$FAILED;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                    peg$currPos = s2;
                                                                                                                                                                                                                    s2 = peg$FAILED;
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                  peg$currPos = s2;
                                                                                                                                                                                                                  s2 = peg$FAILED;
                                                                                                                                                                                                                }
                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                peg$currPos = s2;
                                                                                                                                                                                                                s2 = peg$FAILED;
                                                                                                                                                                                                              }
                                                                                                                                                                                                              if (s2 === peg$FAILED) {
                                                                                                                                                                                                                s2 = peg$currPos;
                                                                                                                                                                                                                s3 = peg$parses();
                                                                                                                                                                                                                if (s3 !== peg$FAILED) {
                                                                                                                                                                                                                  s4 = peg$parsee();
                                                                                                                                                                                                                  if (s4 !== peg$FAILED) {
                                                                                                                                                                                                                    s5 = peg$parseh();
                                                                                                                                                                                                                    if (s5 !== peg$FAILED) {
                                                                                                                                                                                                                      s6 = peg$parsea();
                                                                                                                                                                                                                      if (s6 !== peg$FAILED) {
                                                                                                                                                                                                                        s3 = [s3, s4, s5, s6];
                                                                                                                                                                                                                        s2 = s3;
                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                        peg$currPos = s2;
                                                                                                                                                                                                                        s2 = peg$FAILED;
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                      peg$currPos = s2;
                                                                                                                                                                                                                      s2 = peg$FAILED;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                    peg$currPos = s2;
                                                                                                                                                                                                                    s2 = peg$FAILED;
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                  peg$currPos = s2;
                                                                                                                                                                                                                  s2 = peg$FAILED;
                                                                                                                                                                                                                }
                                                                                                                                                                                                                if (s2 === peg$FAILED) {
                                                                                                                                                                                                                  s2 = peg$currPos;
                                                                                                                                                                                                                  s3 = peg$parsev();
                                                                                                                                                                                                                  if (s3 !== peg$FAILED) {
                                                                                                                                                                                                                    s4 = peg$parseu();
                                                                                                                                                                                                                    if (s4 !== peg$FAILED) {
                                                                                                                                                                                                                      s5 = peg$parseh();
                                                                                                                                                                                                                      if (s5 !== peg$FAILED) {
                                                                                                                                                                                                                        s6 = peg$parsee();
                                                                                                                                                                                                                        if (s6 !== peg$FAILED) {
                                                                                                                                                                                                                          s3 = [s3, s4, s5, s6];
                                                                                                                                                                                                                          s2 = s3;
                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                          peg$currPos = s2;
                                                                                                                                                                                                                          s2 = peg$FAILED;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                        peg$currPos = s2;
                                                                                                                                                                                                                        s2 = peg$FAILED;
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                      peg$currPos = s2;
                                                                                                                                                                                                                      s2 = peg$FAILED;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                    peg$currPos = s2;
                                                                                                                                                                                                                    s2 = peg$FAILED;
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                  if (s2 === peg$FAILED) {
                                                                                                                                                                                                                    s2 = peg$currPos;
                                                                                                                                                                                                                    s3 = peg$parsek();
                                                                                                                                                                                                                    if (s3 !== peg$FAILED) {
                                                                                                                                                                                                                      s4 = peg$parsei();
                                                                                                                                                                                                                      if (s4 !== peg$FAILED) {
                                                                                                                                                                                                                        s5 = peg$parseh();
                                                                                                                                                                                                                        if (s5 !== peg$FAILED) {
                                                                                                                                                                                                                          s6 = peg$parsea();
                                                                                                                                                                                                                          if (s6 !== peg$FAILED) {
                                                                                                                                                                                                                            s3 = [s3, s4, s5, s6];
                                                                                                                                                                                                                            s2 = s3;
                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                            peg$currPos = s2;
                                                                                                                                                                                                                            s2 = peg$FAILED;
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                          peg$currPos = s2;
                                                                                                                                                                                                                          s2 = peg$FAILED;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                        peg$currPos = s2;
                                                                                                                                                                                                                        s2 = peg$FAILED;
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                      peg$currPos = s2;
                                                                                                                                                                                                                      s2 = peg$FAILED;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    if (s2 === peg$FAILED) {
                                                                                                                                                                                                                      s2 = peg$currPos;
                                                                                                                                                                                                                      s3 = peg$parsex();
                                                                                                                                                                                                                      if (s3 !== peg$FAILED) {
                                                                                                                                                                                                                        s4 = peg$parseu();
                                                                                                                                                                                                                        if (s4 !== peg$FAILED) {
                                                                                                                                                                                                                          s3 = [s3, s4];
                                                                                                                                                                                                                          s2 = s3;
                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                          peg$currPos = s2;
                                                                                                                                                                                                                          s2 = peg$FAILED;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                        peg$currPos = s2;
                                                                                                                                                                                                                        s2 = peg$FAILED;
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                      if (s2 === peg$FAILED) {
                                                                                                                                                                                                                        s2 = peg$currPos;
                                                                                                                                                                                                                        s3 = peg$parseg();
                                                                                                                                                                                                                        if (s3 !== peg$FAILED) {
                                                                                                                                                                                                                          s4 = peg$parsee();
                                                                                                                                                                                                                          if (s4 !== peg$FAILED) {
                                                                                                                                                                                                                            s5 = peg$parseh();
                                                                                                                                                                                                                            if (s5 !== peg$FAILED) {
                                                                                                                                                                                                                              s6 = peg$parsee();
                                                                                                                                                                                                                              if (s6 !== peg$FAILED) {
                                                                                                                                                                                                                                s3 = [s3, s4, s5, s6];
                                                                                                                                                                                                                                s2 = s3;
                                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                                peg$currPos = s2;
                                                                                                                                                                                                                                s2 = peg$FAILED;
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                              peg$currPos = s2;
                                                                                                                                                                                                                              s2 = peg$FAILED;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                            peg$currPos = s2;
                                                                                                                                                                                                                            s2 = peg$FAILED;
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                          peg$currPos = s2;
                                                                                                                                                                                                                          s2 = peg$FAILED;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        if (s2 === peg$FAILED) {
                                                                                                                                                                                                                          s2 = peg$currPos;
                                                                                                                                                                                                                          s3 = peg$parseb();
                                                                                                                                                                                                                          if (s3 !== peg$FAILED) {
                                                                                                                                                                                                                            s4 = peg$parseu();
                                                                                                                                                                                                                            if (s4 !== peg$FAILED) {
                                                                                                                                                                                                                              s5 = peg$parseh();
                                                                                                                                                                                                                              if (s5 !== peg$FAILED) {
                                                                                                                                                                                                                                s6 = peg$parseo();
                                                                                                                                                                                                                                if (s6 !== peg$FAILED) {
                                                                                                                                                                                                                                  s3 = [s3, s4, s5, s6];
                                                                                                                                                                                                                                  s2 = s3;
                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                  peg$currPos = s2;
                                                                                                                                                                                                                                  s2 = peg$FAILED;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                                peg$currPos = s2;
                                                                                                                                                                                                                                s2 = peg$FAILED;
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                              peg$currPos = s2;
                                                                                                                                                                                                                              s2 = peg$FAILED;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                            peg$currPos = s2;
                                                                                                                                                                                                                            s2 = peg$FAILED;
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parsepost_word();
          peg$silentFails--;
          if (s4 !== peg$FAILED) {
            peg$currPos = s3;
            s3 = void 0;
          } else {
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c136(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseY() {
      var s0, s1, s2, s3, s4;

      var key    = peg$currPos * 157 + 153,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      peg$silentFails++;
      s2 = peg$parsecmavo();
      peg$silentFails--;
      if (s2 !== peg$FAILED) {
        peg$currPos = s1;
        s1 = void 0;
      } else {
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsey();
        if (s3 !== peg$FAILED) {
          while (s3 !== peg$FAILED) {
            s2.push(s3);
            s3 = peg$parsey();
          }
        } else {
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parsepost_word();
          peg$silentFails--;
          if (s4 !== peg$FAILED) {
            peg$currPos = s3;
            s3 = void 0;
          } else {
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c35(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseZEI() {
      var s0, s1, s2, s3, s4, s5;

      var key    = peg$currPos * 157 + 154,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      peg$silentFails++;
      s2 = peg$parsecmavo();
      peg$silentFails--;
      if (s2 !== peg$FAILED) {
        peg$currPos = s1;
        s1 = void 0;
      } else {
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        s3 = peg$parsez();
        if (s3 !== peg$FAILED) {
          s4 = peg$parsee();
          if (s4 !== peg$FAILED) {
            s5 = peg$parsei();
            if (s5 !== peg$FAILED) {
              s3 = [s3, s4, s5];
              s2 = s3;
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parsepost_word();
          peg$silentFails--;
          if (s4 !== peg$FAILED) {
            peg$currPos = s3;
            s3 = void 0;
          } else {
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c137(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseZO() {
      var s0, s1, s2, s3, s4, s5, s6, s7;

      var key    = peg$currPos * 157 + 155,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      peg$silentFails++;
      s2 = peg$parsecmavo();
      peg$silentFails--;
      if (s2 !== peg$FAILED) {
        peg$currPos = s1;
        s1 = void 0;
      } else {
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        s3 = peg$parsez();
        if (s3 !== peg$FAILED) {
          s4 = peg$parseo();
          if (s4 !== peg$FAILED) {
            s3 = [s3, s4];
            s2 = s3;
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
        if (s2 === peg$FAILED) {
          s2 = peg$currPos;
          s3 = peg$parsem();
          if (s3 !== peg$FAILED) {
            s4 = peg$parsea();
            if (s4 !== peg$FAILED) {
              s5 = peg$parseh();
              if (s5 !== peg$FAILED) {
                s6 = peg$parseo();
                if (s6 !== peg$FAILED) {
                  s7 = peg$parsei();
                  if (s7 !== peg$FAILED) {
                    s3 = [s3, s4, s5, s6, s7];
                    s2 = s3;
                  } else {
                    peg$currPos = s2;
                    s2 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s2;
                  s2 = peg$FAILED;
                }
              } else {
                peg$currPos = s2;
                s2 = peg$FAILED;
              }
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parsepost_word();
          peg$silentFails--;
          if (s4 !== peg$FAILED) {
            peg$currPos = s3;
            s3 = void 0;
          } else {
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c138(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }

    function peg$parseZOI() {
      var s0, s1, s2, s3, s4, s5, s6;

      var key    = peg$currPos * 157 + 156,
          cached = peg$resultsCache[key];

      if (cached) {
        peg$currPos = cached.nextPos;

        return cached.result;
      }

      s0 = peg$currPos;
      s1 = peg$currPos;
      peg$silentFails++;
      s2 = peg$parsecmavo();
      peg$silentFails--;
      if (s2 !== peg$FAILED) {
        peg$currPos = s1;
        s1 = void 0;
      } else {
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        s3 = peg$parsez();
        if (s3 !== peg$FAILED) {
          s4 = peg$parseo();
          if (s4 !== peg$FAILED) {
            s5 = peg$parsei();
            if (s5 !== peg$FAILED) {
              s3 = [s3, s4, s5];
              s2 = s3;
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
        if (s2 === peg$FAILED) {
          s2 = peg$currPos;
          s3 = peg$parsel();
          if (s3 !== peg$FAILED) {
            s4 = peg$parsea();
            if (s4 !== peg$FAILED) {
              s5 = peg$parseh();
              if (s5 !== peg$FAILED) {
                s6 = peg$parseo();
                if (s6 !== peg$FAILED) {
                  s3 = [s3, s4, s5, s6];
                  s2 = s3;
                } else {
                  peg$currPos = s2;
                  s2 = peg$FAILED;
                }
              } else {
                peg$currPos = s2;
                s2 = peg$FAILED;
              }
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parsepost_word();
          peg$silentFails--;
          if (s4 !== peg$FAILED) {
            peg$currPos = s3;
            s3 = void 0;
          } else {
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c139(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };

      return s0;
    }


      var _stressed_vowels = {a: "Ã ", e: "Ã¨", i: "Ã¬", o: "Ã²", u: "Ã¹"};
      function _dots(arg) {
        if (arg.match(/^[aeiouÃ Ã¨Ã¬Ã²Ã¹Å­Ä­yw]/))
          return "." + arg;
        return arg;
      }

      var _g_zoi_delim;
      
      function _join(arg)
      {
        if (typeof(arg) == "string")
          return arg;
        else
        {
          var ret = "";
          for (var v in arg) { ret += _join(arg[v]); }
          return ret;
        }
      }
      
      function _word(selmaho, word) {
        return {selmaho: selmaho, word: _dots(_join(word))};
      }
      
      function _brivla(word) {
        if (Array.isArray(word))
          return {selmaho: "BRIVLA", word: options.k && word.join("/") || _join(word), rafsi: word};
        else
          return {selmaho: "BRIVLA", word: _join(word)};
      }
      
      function _quote(word, quote) {
        word.quote = quote;
        word.single_word = word.word;
        word.word = "[" + word.word + " " + (quote.word || quote).replace(/[\][{}()<>]/g, "") + "]";
        return word;
      }
      
      function _elided(selmaho) {
        return {selmaho: selmaho, word: selmaho.toLowerCase().replace(/h/g, "'"), elided: true};
      }
      
      function _amalgam(word, text) {
    //    if (!word.amalgam)
    //      word.amalgam = [word.word];
    //    else
    //      word.amalgam.push(word.word);
    //    word.word = text;
        word.structure = text;
        return word;
      }
      
      function _bracket(array) {
        if (Array.isArray(array)) {
          array = array.filter(_empty);
          if (array.length == 1) return _bracket(array[0]);
          else return "[" + array.map(_bracket).join(" ") + "]";
        }
        
        if (typeof array == "object" && array.structure)
          return _bracket(array.structure);
        
        if (typeof array == "object" && array.word)
          return _bracket(array.elided ? array.word.toUpperCase() : array.word);
        
        if (typeof array == "string")
          return array;
          
        return "[???]";
      }
      
      function _word_pre(word, pre) {
        if (pre && pre.length)
          word.pre = pre;
        return word;
      }
      function _word_post(word, post, sa) {
        if (post) word.post = post;
          
        if (post && post.indicators)
          _amalgam(word, [word.pre, _shell(word), post.indicators].filter(_empty));
        else
          _amalgam(word, [word.pre, _shell(word)].filter(_empty));
          
        if (_empty(sa)) word.sa = sa;
        return word;
      }
      
      function _shell(word) {
        var ret = {};
        if (word.structure) ret.structure = word.structure;
        else if (word.word) ret.word = word.word;
        if (word.selmaho) ret.selmaho = word.selmaho;
        if (word.elided) ret.elided = word.elided;
        return ret;
      }
      
      function _empty(array) {
        return array && (!Array.isArray(array) || array.length) && array;
      }

      function _duplicate_evil(thing) { // FIXME this murders kittens
        return JSON.parse(JSON.stringify(thing));
      }
      
      function _duplicate_less_evil(thing) {
        var clone = {};
        Object.keys(thing).forEach(function (a) { clone[a] = thing[a] });
        return clone;
      }

      // === ZOI functions === //

      function _zoi_assign_delim(word) {
        var a = word.word.split(",");
        if (a.length > 0) _g_zoi_delim = a[a.length - 1];
        else _g_zoi_delim = "";
        return word;
      }

      function _zoi_check_quote(word) {
        if (Array.isArray(word)) word = _join(word);
        if (typeof(word) == "object") word = word.word || word.toString();
        if (!is_string(word)) {
          alert("ZOI word is not a string");
          return false;
        } else {
          return (word.toLowerCase().replace(/,/gm,"").replace(/h/g, "'") === _g_zoi_delim);
        }
      }
      
      function _zoi_check_delim(word) {
        if (Array.isArray(word)) word = _join(word);
        if (typeof(word) == "object") word = word.word;
        if (!is_string(word)) {
          alert("ZOI word is not a string");
          return false;
        } else {
          word = word.split(",");
          if (word.length > 0) word = word[word.length - 1];
          else word = "";
          return (word === _g_zoi_delim);
        }
      }
      
      function is_string(v) {
        return typeof v.valueOf() === 'string';
      }


    peg$result = peg$startRuleFunction();

    if (peg$result !== peg$FAILED && peg$currPos === input.length) {
      return peg$result;
    } else {
      if (peg$result !== peg$FAILED && peg$currPos < input.length) {
        peg$fail({ type: "end", description: "end of input" });
      }

      throw peg$buildException(
        null,
        peg$maxFailExpected,
        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,
        peg$maxFailPos < input.length
          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)
          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)
      );
    }
  }

  return {
    SyntaxError: peg$SyntaxError,
    parse:       peg$parse
  };
})()

module.exports = camxes;

term = process.argv[2];
if (term !== undefined && typeof term.valueOf() === 'string')
  console.log(require('./camxes_postproc.js').postprocessing(JSON.stringify(camxes.parse(term)), 3));

